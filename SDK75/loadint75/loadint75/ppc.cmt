
PPC_add:	"Add"
PPC_addc:	"Add Carrying"
PPC_adde:	"Add Extended"
PPC_addi:	"Add Immediate"
PPC_addic:	"Add Immediate Carrying"
PPC_addis:	"Add Immediate Shifted"
PPC_addme:	"Add to Minus One Extended"
PPC_addze:	"Add to Zero Extended"
PPC_and:	"AND"
PPC_andc:	"AND with Complement"
PPC_andi:	"AND Immediate"
PPC_andis:	"AND Immediate Shifted"
PPC_b:	        "Branch"
PPC_bc:		"Branch Conditional"
PPC_bcctr:	"Branch Conditional to Count Register"
PPC_bclr:	"Branch Conditional to Link Register"
PPC_cmp:	"Compare"
PPC_cmpi:	"Compare Immediate"
PPC_cmpl:	"Compare Logical"
PPC_cmpli:	"Compare Logical Immediate"
PPC_cntlzd:	"Count Leading Zeros Double Word"
PPC_cntlzw:	"Count Leading Zeros Word"
PPC_crand:	"Condition Register AND"
PPC_crandc:	"Condition Register AND with Complement"
PPC_creqv:	"Condition Register Equivalent"
PPC_crnand:	"Condition Register NAND"
PPC_crnor:	"Condition Register NOR"
PPC_cror:	"Condiiton Register OR"
PPC_crorc:	"Condition Register OR with Comlement"
PPC_crxor:	"Condition Register XOR"
PPC_dcba:	""
PPC_dcbf:	"Data Cache Block Flush"
PPC_dcbi:	"Data Cache Block Invalidate"
PPC_dcbst:	"Data Cache Block Store"
PPC_dcbt:	"Data Cache Block Touch"
PPC_dcbtst:	"Data Cache Block Touch for Store"
PPC_dcbz:	"Data Cache Block Set to Zero"
PPC_divd:	"Divide Double Word"
PPC_divdu:	"Divide Double Word Unsigned"
PPC_divw:	"Divide Word"
PPC_divwu:	"Divide Word Unsigned"
PPC_eciwx:	"External Control In Word Indexed"
PPC_ecowx:	"External Control Out Word Indexed"
PPC_eieio:	"Enforce In-Order Execution of I/O"
PPC_eqv:	"Equivalent"
PPC_extsb:	"Extend Sign Byte"
PPC_extsh:	"Extend Sign Half Word"
PPC_extsw:	"Extend Sign Word"
PPC_fabs:	"Floating-Point Absolute Value"
PPC_fadd:	"Floating-Point Add"
PPC_fadds:	"Floating-Point Add (Single-Precision)"
PPC_fcfid:	"Floating-Point Convert from Integer Double Word"
PPC_fcmpo:	"Floating-Point Compare Ordered"
PPC_fcmpu:	"Floating-Point Compare Unordered"
PPC_fctid:	"Floating-Point Convert to Integer Double Word"
PPC_fctidz:	"Floating-Point Convert to Integer Double Word with Round toward Zero"
PPC_fctiw:	"Floating-Point Convert to Integer Word"
PPC_fctiwz:	"Floating-Point Convert to Integer Word with Round toward Zero"
PPC_fdiv:  	"Floating-Point Divide"
PPC_fdivs:	"Floating-Point Divide Single-Precision"
PPC_fmadd:	"Floating-Point Multiply-Add"
PPC_fmadds:	"Floating-Point Multiply-Add Single-Precision"
PPC_fmr:	"Floating-Point Move Register"
PPC_fmsub:	"Floating-Point Multiply-Subtract"
PPC_fmsubs:	"Floating-Point Multiply-Subtract (Single-Precision)"
PPC_fmul:	"Floating-Point Multiply"
PPC_fmuls:	"Floating-Point Multiply Single-Precision"
PPC_fnabs:	"Floating-Point Negative Absolute Value"
PPC_fneg:	"Floating-Point Negate"
PPC_fnmadd:	"Floating-Point Negative Multiply-Add"
PPC_fnmadds:	"Floating-Point Negative Multiply-Add Single-Precision"
PPC_fnmsub:	"Floating-Point Negative Multiply-Subtract"
PPC_fnmsubs:	"Floating-Point Negative Multiply-Subtract Single-Precision"
PPC_fres:	"Floating-Point Reciprocal Estimate Single-Precision"
PPC_frsp:	"Floating-Point Round to Single-Precision"
PPC_frsqrte:	"Floating-Point Reciprocal Square Root Estimate"
PPC_fsel:	"Floating-Point Select"
PPC_fsqrt:	"Floating-Point Square Root"
PPC_fsqrts:	"Floating-Point Square Root Single-Precision"
PPC_fsub:	"Floating-Point Subtract"
PPC_fsubs:	"Floating-Point Subtract Single-Precision"
PPC_icbi:	"Instruction Cache Block Invalidate"
PPC_isync:	"Instruction Synchronize"
PPC_lbz:	"Load Byte and Zero"
PPC_lbzu:	"Load Byte and Zero with Update"
PPC_lbzux:	"Load Byte and Zero with Update Indexed"
PPC_lbzx:	"Load Byte and Zero Indexed"
PPC_ld:		"Load Double Word"
PPC_ldarx:	"Load Double Word and Reserve Indexed"
PPC_ldu:	"Load Double Word with Update"
PPC_ldux:	"Load Double Word with Update Indexed"
PPC_ldx:	"Load Double Word Indexed"
PPC_lfd:	"Load Floating-Point Double-Precision"
PPC_lfdu:	"Load Floating-Point Double-Precision with Update"
PPC_lfdux:	"Load Floating-Point Double-Precision with Update Indexed"
PPC_lfdx:	"Load Floating-Point Double-Precision Indexed"
PPC_lfs:	"Load Floating-Point Single-Precision"
PPC_lfsu:	"Load Floating-Point Single-Precision with Update"
PPC_lfsux:	"Load Floating-Point Single-Precision with Update Indexed"
PPC_lfsx:	"Load Floating-Point Single-Precision Indexed"
PPC_lha:	"Load Half Word Algebraic"
PPC_lhau:	"Load Half Word Algebraic with Update"
PPC_lhaux:	"Load Half Word Algebraic with Update Indexed"
PPC_lhax:	"Load Half Word Algebraic Indexed"
PPC_lhbrx:	"Load Half Word Byte-reverse Indexed"
PPC_lhz:	"Load Half Word and Zero"
PPC_lhzu:	"Load Half Word and Zero with Update"
PPC_lhzux:	"Load Half Word and Zero with Update Indexed"
PPC_lhzx:	"Load Half Word and Zero Indexed"
PPC_lmw:	"Load Multiple Word"
PPC_lswi:	"Load String Word Immediate"
PPC_lswx:	"Load String Word Indexed"
PPC_lwa:	"Load Word Algebraic"
PPC_lwarx:	"Load Word and Reserve Indexed"
PPC_lwaux:	"Load Word Algebraic with Update Indexed"
PPC_lwax:	"Load Word Algebraic Indexed"
PPC_lwbrx:	"Load Word Byte-Reverse Indexed"
PPC_lwz:	"Load Word and Zero"
PPC_lwzu:	"Load Word and Zero with Update"
PPC_lwzux:	"Load Word and Zero with Update Indexed"
PPC_lwzx:	"Load Word and Zero Indexed"
PPC_mcrf:	"Move Condition register Field"
PPC_mcrfs:	"Move to Condition Register from FPSCR"
PPC_mcrxr:	"Move to Condition Register from XER"
PPC_mfcr:	"Move from Condition Register"
PPC_mffs:	"Move from FPSCR"
PPC_mfmsr:	"Move from Machine State Register"
PPC_mfspr:	"Move from Special Purpose Register"
PPC_mfsr:	"Move from Segment Register"
PPC_mfsrin:	"Move from Segment Register Indirect"
PPC_mftb:	"Move from Time Base"
PPC_mtcrf:	"Move to Condition Register Fields"
PPC_mtfsb0:	"Move to FPSCR Bit 0"
PPC_mtfsb1:	"Move to FPSCR Bit 1"
PPC_mtfsf:	"Move to FPSCR Fields"
PPC_mtfsfi:	"Move to FPSCR Field Immediate"
PPC_mtmsr:	"Move to Machine State Register"
PPC_mtmsrd:	"Move to Machine State Register Double Word"
PPC_mtspr:	"Move to Special Purpose Register"
PPC_mtsr:	"Move to Segment Register"
PPC_mtsrd:	"Move to Segment Register Double Word"
PPC_mtsrdin:	"Move to Segment Register Indirect Double"
PPC_mtsrin:	"Move to Segment Register Indirect"
PPC_mulhd:	"Multiply High Double Word"
PPC_mulhdu:	"Multiply High Double Word Unsigned"
PPC_mulhw:	"Multiply High Word"
PPC_mulhwu:	"Multiply High Word Unsigned"
PPC_mulld:	"Multiply Low Double Word"
PPC_mulli:	"Multiply Low Immediate"
PPC_mullw:	"Multiply Low"
PPC_nand:	"NAND (not AND)"
PPC_neg:	"Negate"
PPC_nor:	"NOR (not OR)"
PPC_or:		"OR"
PPC_orc:	"OR with Complement"
PPC_ori:	"OR Immediate"
PPC_oris:	"OR Immediate Shifted"
PPC_rfi:	"Return from Interrupt"
PPC_rfid:	"Return from Interrupt Double Word"
PPC_rldcl:	"Rotate Left Double Word then Clear Left"
PPC_rldcr:	"Rotate Left Double Word then Clear Right"
PPC_rldic:	"Rotate Left Double Word Immediate then Clear"
PPC_rldicl:	"Rotate Left Double Word Immediate then Clear Left"
PPC_rldicr:	"Rotate Left Double Word Immediate then Clear Right"
PPC_rldimi:	"Rotate Left Double Word Immediate then Mask Insert"
PPC_rlwimi:	"Rotate Left Word Immediate then Mask Insert"
PPC_rlwinm:	"Rotate Left Word Immediate then AND with Mask"
PPC_rlwnm:	"Rotate Left Word then AND with Mask"
PPC_sc:		"System Call"
PPC_slbia:	"SLB Invalidate All, ISA 3.0 format"
PPC_slbie:	"SLB Invalidate Entry"
PPC_sld:	"Shift Left Double Word"
PPC_slw:	"Shift Left Word"
PPC_srad:	"Shift Right Algebraic Double Word"
PPC_sradi:	"Shift Right Algebraic Double Word Immediate"
PPC_sraw:	"Shift Right Algebraic Word"
PPC_srawi:	"Shift Right Algebraic Word Immediate"
PPC_srd:	"Shift Right Double Word"
PPC_srw:	"Shift Right Word"
PPC_stb:	"Store Byte"
PPC_stbu:	"Store Byte with Update"
PPC_stbux:	"Store Byte with Update Indexed"
PPC_stbx:	"Store Byte Indexed"
PPC_std:	"Store Double Word"
PPC_stdcx:	"Store Double Word Conditional Indexed"
PPC_stdu:	"Store Double Word with Update"
PPC_stdux:	"Store Double Word with Update Indexed"
PPC_stdx:       "Store Double Word Indexed"
PPC_stfd:	"Store Floating-Point Double-Precision"
PPC_stfdu:	"Store Floating-Point Double-Precision wiht Update"
PPC_stfdux:	"Store Floating-Point Double-Precision wiht Update Indexed"
PPC_stfdx:	"Store Floating-Point Double-Precision Indexed"
PPC_stfiwx:	"Store Floating-Point as Integer Word Indexed"
PPC_stfs:	"Store Floating-Point Single-Precision"
PPC_stfsu:	"Store Floating-Point Single-Precision with Update"
PPC_stfsux:	"Store Floating-Point Single-Precision with Update Indexed"
PPC_stfsx:	"Store Floating-Point Single-Precision Indexed"
PPC_sth:	"Store Half Word"
PPC_sthbrx:	"Store Half Word Byte-Reverse Indexed"
PPC_sthu:	"Store Half Word with Update"
PPC_sthux:	"Store Half Word with Update Indexed"
PPC_sthx:	"Store Half Word Indexed"
PPC_stmw:	"Store Multiple Word"
PPC_stswi:	"Store String Word Immediate"
PPC_stswx:	"Store String Word Indexed"
PPC_stw:	"Store Word"
PPC_stwbrx:	"Store Word Byte-Reverse Indexed"
PPC_stwcx:	"Store Word Conditional Indexed"
PPC_stwu:	"Store Word with Update"
PPC_stwux:	"Store Word with Update Indexed"
PPC_stwx:	"Store Word Indexed"
PPC_subf:	"Subtract from"
PPC_subfc:	"Subtract from Carrying"
PPC_subfe:	"Subtract from Extended"
PPC_subfic:	"Subtract from Immediate Carrying"
PPC_subfme:	"Subtract from Minus One Extended"
PPC_subfze:	"Subtract from Zero Extended"
PPC_sync:	"Synchronize"
PPC_td:		"Trap Double Word"
PPC_tdi:	"Trap Double Word Immediate"
PPC_tlbia:	"TLB Invalidate All"
PPC_tlbie:	"TLB Invalidate Entry, ISA 3.0 format"
PPC_tlbsync:	"TLB Synchronize"
PPC_tw:		"Trap Word"
PPC_twi:	"Trap Word Immediate"
PPC_xor:	"XOR"
PPC_xori:	"XOR Immediate"
PPC_xoris:	"XOR Immediate Shifted"
PPC_cmpwi:	"Compare Word Immediate"
PPC_cmpw:	"Compare Word"
PPC_cmplwi:	"Compare Logical Word Immediate"
PPC_cmplw:	"Compare Logical Word"
PPC_cmpdi:	"Compare Double Word Immediate"
PPC_cmpd:	"Compare Double Word"
PPC_cmpldi:	"Compare Logical Double Word Immediate"
PPC_cmpld:	"Compare Logical Double Word"
PPC_trap:	"Trap Word Unconditionally"
PPC_trapd:	"Trap Double Word Unconditionally"
PPC_twlgt:	"Trap Word if Logically Greater Than"
PPC_twllt:	"Trap Word if Logically Less Than"
PPC_tweq:	"Trap Word if Equal"
PPC_twlge:	"Trap Word if Logically Greater Than or Equal"
PPC_twlle:	"Trap Word if Logically Less Than or Equal"
PPC_twgt:	"Trap Word if Greater Than"
PPC_twge:	"Trap Word if Greater Than or Equal"
PPC_twlt:	"Trap Word if Less Than"
PPC_twle:	"Trap Word if Less Than oe Equal"
PPC_twne:	"Trap Word if Not Equal"
PPC_twlgti:	"Trap Word Immediate if Logically Greater Than"
PPC_twllti:	"Trap Word Immediate if Logically Less Than"
PPC_tweqi:	"Trap Word Immediate if Equal"
PPC_twlgei:	"Trap Word Immediate if Logically Greater Than or Equal"
PPC_twllei:	"Trap Word Immediate if Logically Less Than or Equal"
PPC_twgti:	"Trap Word Immediate if Greater Than"
PPC_twgei:	"Trap Word Immediate if Greater Than or Equal"
PPC_twlti:	"Trap Word Immediate if Less Than"
PPC_twlei:	"Trap Word Immediate if Less Than oe Equal"
PPC_twnei:	"Trap Word Immediate if Not Equal"
PPC_tdlgt:	"Trap Double Word if Logically Greater Than"
PPC_tdllt:	"Trap Double Word if Logically Less Than"
PPC_tdeq:	"Trap Double Word if Equal"
PPC_tdlge:	"Trap Double Word if Logically Greater Than or Equal"
PPC_tdlle:	"Trap Double Word if Logically Less Than or Equal"
PPC_tdgt:	"Trap Double Word if Greater Than"
PPC_tdge:	"Trap Double Word if Greater Than or Equal"
PPC_tdlt:	"Trap Double Word if Less Than"
PPC_tdle:	"Trap Double Word if Less Than oe Equal"
PPC_tdne:	"Trap Double Word if Not Equal"
PPC_tdlgti:	"Trap Double Word Immediate if Logically Greater Than"
PPC_tdllti:	"Trap Double Word Immediate if Logically Less Than"
PPC_tdeqi:	"Trap Double Word Immediate if Equal"
PPC_tdlgei:	"Trap Double Word Immediate if Logically Greater Than or Equal"
PPC_tdllei:	"Trap Double Word Immediate if Logically Less Than or Equal"
PPC_tdgti:	"Trap Double Word Immediate if Greater Than"
PPC_tdgei:	"Trap Double Word Immediate if Greater Than or Equal"
PPC_tdlti:	"Trap Double Word Immediate if Less Than"
PPC_tdlei:	"Trap Double Word Immediate if Less Than oe Equal"
PPC_tdnei:	"Trap Double Word Immediate if Not Equal"
PPC_nop:	"No Operation"
PPC_not:	"Complement Register"
PPC_mr:		"Move Register"
PPC_subi:	"Subtract Immediate"
PPC_subic:	"Subtract Immediate Carrying"
PPC_subis:	"Subtract Immediate Shifted"
PPC_li:		"Load Immediate"
PPC_lis:	"Load Immediate Shifted"
PPC_crset:	"Condition Register Set"
PPC_crnot:	"Condition Register NOT"
PPC_crmove:	"Condition Register Move"
PPC_crclr:	"Condition Register Clear"
PPC_mtxer:	"Move to integer unit exception register"
PPC_mtlr:	"Move to link register"
PPC_mtctr:	"Move to count register"
PPC_mtdsisr:	"Move to DAE/source instruction service register"
PPC_mtdar:	"Move to data address register"
PPC_mtdec:	"Move to decrementer register"
PPC_mtsrr0:	"Move to status save/restore register 0"
PPC_mtsrr1:	"Move to status save/restore register 1"
PPC_mtsprg0:	"Move to general special purpose register 0"
PPC_mtsprg1:	"Move to general special purpose register 1"
PPC_mtsprg2:	"Move to general special purpose register 2"
PPC_mtsprg3:	"Move to general special purpose register 3"
PPC_mttbl:	"Move to time base register (lower)"
PPC_mttbu:	"Move to time base register (upper)"
PPC_mfxer:	"Move from integer unit exception register"
PPC_mflr:	"Move from link register"
PPC_mfctr:	"Move from count register"
PPC_mfdsisr:	"Move from DAE/source instruction service register"
PPC_mfdar:	"Move from data address register"
PPC_mfdec:	"Move from decrementer register"
PPC_mfsrr0:	"Move from status save/restore register 0"
PPC_mfsrr1:	"Move from status save/restore register 1"
PPC_mfsprg0:	"Move from general special purpose register 0"
PPC_mfsprg1:	"Move from general special purpose register 1"
PPC_mfsprg2:	"Move from general special purpose register 2"
PPC_mfsprg3:	"Move from general special purpose register 3"
PPC_mftbl:	"Move from time base register (lower)"
PPC_mftbu:	"Move from time base register (upper)"
PPC_mfpvr:	"Move from processor version register"
PPC_balways:	"Branch unconditionally"
PPC_bt:		"Branch if true"
PPC_bf:		"Branch if false"
PPC_bdnz:	"CTR--; branch if CTR non-zero"
PPC_bdnzt:	"CTR--; branch if CTR non-zero and condition is true"
PPC_bdnzf:	"CTR--; branch if CTR non-zero and condition is false"
PPC_bdz:	"CTR--; branch if CTR zero"
PPC_bdzt:	"CTR--; branch if CTR zero and condition is true"
PPC_bdzf:	"CTR--; branch if CTR zero and condition is false"
PPC_blt:	"Branch if less than"
PPC_ble:	"Branch if less than or equal"
PPC_beq:	"Branch if equal"
PPC_bge:	"Branch if greater than or equal"
PPC_bgt:	"Branch if greater than"
PPC_bne:	"Branch if not equal"
PPC_bso:	"Branch if summary overflow"
PPC_bns:	"Branch if not summary overflow"
PPC_extlwi:	"Extract and Left Justify Immediate"
PPC_extrwi:	"Extract and Right Justify Immediate"
PPC_inslwi:	"Insert from Left Immediate"
PPC_insrwi:	"Insert from Right Immediate"
PPC_rotlwi:	"Rotate Left Immediate"
PPC_rotrwi:	"Rotate Right Immediate"
PPC_rotlw:	"Rotate Left"
PPC_slwi:	"Shift Left Immediate"
PPC_srwi:	"Shift Right Immediate"
PPC_clrlwi:	"Clear Left Immediate"
PPC_clrrwi:	"Clear Right Immediate"
PPC_clrlslwi:	"Clear Left and Shift Left Immediate"

//
//  PowerPC Embedded Controller Instructions
//

PPC_dccci:      "Data cache congruence class invalidate"
PPC_dcread:     "Data cache read"
PPC_icbt:       "Instruction cache block touch"
PPC_iccci:      "Instruction cache congruence class invalidate"
PPC_icread:     "Instruction cache read"
PPC_mfdcr:      "Move from device control register"
PPC_mtdcr:      "Move to device control register"
PPC_rfci:       "Return from critical interrupt"
PPC_tlbre:      "TLB read entry"
PPC_tlbsx:      "TLB search indexed"
PPC_tlbwe:      "TLB write entry"
PPC_wrtee:      "Write external enable"
PPC_wrteei:     "Write external enable immediate"

//
//  New PowerPC instructions
//

PPC_abs:        "Absolute"
PPC_clcs:       "Cache Lines Compute Size"
PPC_clf:        "Cache Line Flush"
PPC_cli:        "Cache Line Invalidate"
PPC_dclst:      "Data Cache Line Store"
PPC_div:        "Divide"
PPC_divs:       "Divide Short"
PPC_doz:        "Different Or Zero"
PPC_dozi:       "Different Or Zero Immediate"
PPC_frsqrtes:   "Floating Reciprocal Square Root Estimate Single"
PPC_hrfid:      "Hypervisor Return from Interrupt Doubleword"
PPC_lscbx:      "Load String And Compare Byte Indexed"
PPC_maskg:      "Mask Generate"
PPC_maskir:     "Mask Insert From Register"
PPC_mfsri:      "Move From Segment Register Indirect"
PPC_mul:        "Multiply"
PPC_nabs:       "Negative Absolute"
PPC_popcntb:    "Population Count Bytes"
PPC_rac:        "Real Address Compute"
PPC_rfsvc:      "Return From SVC"
PPC_rlmi:       "Rotate Left Then Mask Insert"
PPC_rrib:       "Rotate Right And Insert Bit"
PPC_slbmfee:    "SLB Move From Entry ESID"
PPC_slbmfev:    "SLB Move From Entry VSID"
PPC_slbmte:     "SLB Move To Entry"
PPC_sle:        "Shift Left Extended"
PPC_sleq:       "Shift Left Extended With MQ"
PPC_sliq:       "Shift Left Immediate With MQ"
PPC_slliq:      "Shift Left Long Immediate With MQ"
PPC_sllq:       "Shift Left Long With MQ"
PPC_slq:        "Shift Left With MQ"
PPC_sraiq:      "Shift Right Algebraic Immediate With MQ"
PPC_sraq:       "Shift Right Algebraic With MQ"
PPC_sre:        "Shift Right Extended"
PPC_srea:       "Shift Right Extended Algebraic"
PPC_sreq:       "Shift Right Extended With MQ"
PPC_sriq:       "Shift Right Immediate With MQ"
PPC_srliq:      "Shift Right Long Immediate With MQ"
PPC_srlq:       "Shift Right Long With MQ"
PPC_srq:        "Shift Right With MQ"

PPC_mtocrf:     "Move To One Condition Register Field"
PPC_mfocrf:     "Move From One Condition Register Field"

PPC_isel:       "Integer Select"
PPC_isellt:     "Integer Select Less Than"
PPC_iselgt:     "Integer Select Greater Than"
PPC_iseleq:     "Integer Select Equal"
PPC_dcblc:      "Data Cache Block Lock Clear"
PPC_dcbtls:     "Data Cache Block Touch and Lock Set"
PPC_dcbtstls:   "Data Cache Block Touch for Store and Lock Set"
PPC_icblc:      "Instruction Cache Block Lock Clear"
PPC_icbtls:     "Instruction Cache Block Touch and Lock Set"
PPC_tlbivax:    "TLB Invalidate Virtual Address Indexed"
PPC_rfdi:       "Return from Debug Interrupt"
PPC_tlbld:      "Load Data TLB Entry"
PPC_tlbli:      "Load Instruction TLB Entry"

PPC_brinc:            "Bit Reversed Increment"
PPC_evabs:            "Vector Absolute Value"
PPC_evaddiw:          "Vector Add Immediate Word"
PPC_evaddsmiaaw:      "Vector Add Signed, Modulo, Integer to Accumulator Word"
PPC_evaddssiaaw:      "Vector Add Signed, Saturate, Integer to Accumulator Word"
PPC_evaddumiaaw:      "Vector Add Unsigned, Modulo, Integer to Accumulator Word"
PPC_evaddusiaaw:      "Vector Add Unsigned, Saturate, Integer to Accumulator Word"
PPC_evaddw:           "Vector Add Word"
PPC_evand:            "Vector AND"
PPC_evandc:           "Vector AND with Complement"
PPC_evcmpeq:          "Vector Compare Equal"
PPC_evcmpgts:         "Vector Compare Greater Than Signed"
PPC_evcmpgtu:         "Vector Compare Greater Than Unsigned"
PPC_evcmplts:         "Vector Compare Less Than Signed"
PPC_evcmpltu:         "Vector Compare Less Than Unsigned"
PPC_evcntlsw:         "Vector Count Leading Signed Bits Word"
PPC_evcntlzw:         "Vector Count Leading Zeros Word"
PPC_evdivws:          "Vector Divide Word Signed"
PPC_evdivwu:          "Vector Divide Word Unsigned"
PPC_eveqv:            "Vector Equivalent"
PPC_evextsb:          "Vector Extend Sign Byte"
PPC_evextsh:          "Vector Extend Sign Halfword"
PPC_evldd:            "Vector Load Double Word into Double Word"
PPC_evlddx:           "Vector Load Double Word into Double Word Indexed"
PPC_evldh:            "Vector Load Double into Four Halfwords"
PPC_evldhx:           "Vector Load Double into Four Halfwords Indexed"
PPC_evldw:            "Vector Load Double into Two Words"
PPC_evldwx:           "Vector Load Double into Two Words Indexed"
PPC_evlhhesplat:      "Vector Load Halfword into Halfwords Even and Splat"
PPC_evlhhesplatx:     "Vector Load Halfword into Halfwords Even and Splat Indexed"
PPC_evlhhossplat:     "Vector Load Halfword into Halfword Odd Signed and Splat"
PPC_evlhhossplatx:    "Vector Load Halfword into Halfword Odd Signed and Splat Indexed"
PPC_evlhhousplat:     "Vector Load Halfword into Halfword Odd Unsigned and Splat"
PPC_evlhhousplatx:    "Vector Load Halfword into Halfword Odd Unsigned and Splat Indexed"
PPC_evlwhe:           "Vector Load Word into Two Halfwords Even"
PPC_evlwhex:          "Vector Load Word into Two Halfwords Even Indexed"
PPC_evlwhos:          "Vector Load Word into Two Halfwords Odd Signed (with sign extension)"
PPC_evlwhosx:         "Vector Load Word into Two Halfwords Odd Signed Indexed (with sign extension)"
PPC_evlwhou:          "Vector Load Word into Two Halfwords Odd Unsigned (zero-extended)"
PPC_evlwhoux:         "Vector Load Word into Two Halfwords Odd Unsigned Indexed (zero-extended)"
PPC_evlwhsplat:       "Vector Load Word into Two Halfwords and Splat"
PPC_evlwhsplatx:      "Vector Load Word into Two Halfwords and Splat Indexed"
PPC_evlwwsplat:       "Vector Load Word into Word and Splat"
PPC_evlwwsplatx:      "Vector Load Word into Word and Splat Indexed"
PPC_evmergehi:        "Vector Merge High"
PPC_evmergehilo:      "Vector Merge High/Low"
PPC_evmergelo:        "Vector Merge Low"
PPC_evmergelohi:      "Vector Merge Low/High"
PPC_evmhegsmfaa:      "Vector Multiply Halfwords, Even, Guarded, Signed, Modulo, Fractional and Accumulate"
PPC_evmhegsmfan:      "Vector Multiply Halfwords, Even, Guarded, Signed, Modulo, Fractional and Accumulate Negative"
PPC_evmhegsmiaa:      "Vector Multiply Halfwords, Even, Guarded, Signed, Modulo, Integer and Accumulate"
PPC_evmhegsmian:      "Vector Multiply Halfwords, Even, Guarded, Signed, Modulo, Integer and Accumulate Negative"
PPC_evmhegumiaa:      "Vector Multiply Halfwords, Even, Guarded, Unsigned, Modulo, Integer and Accumulate"
PPC_evmhegumian:      "Vector Multiply Halfwords, Even, Guarded, Unsigned, Modulo, Integer and Accumulate Negative"
PPC_evmhesmf:         "Vector Multiply Halfwords, Even, Signed, Modulo, Fractional"
PPC_evmhesmfa:        "Vector Multiply Halfwords, Even, Signed, Modulo, Fractional to Accumulator"
PPC_evmhesmfaaw:      "Vector Multiply Halfwords, Even, Signed, Modulo, Fractional and Accumulate into Words"
PPC_evmhesmfanw:      "Vector Multiply Halfwords, Even, Signed, Modulo, Fractional and Accumulate Negative into Words"
PPC_evmhesmi:         "Vector Multiply Halfwords, Even, Signed, Modulo, Integer"
PPC_evmhesmia:        "Vector Multiply Halfwords, Even, Signed, Modulo, Integer to Accumulator"
PPC_evmhesmiaaw:      "Vector Multiply Halfwords, Even, Signed, Modulo, Integer and Accumulate into Words"
PPC_evmhesmianw:      "Vector Multiply Halfwords, Even, Signed, Modulo, Integer and Accumulate Negative into Words"
PPC_evmhessf:         "Vector Multiply Halfwords, Even, Signed, Saturate, Fractional"
PPC_evmhessfa:        "Vector Multiply Halfwords, Even, Signed, Saturate, Fractional to Accumulator"
PPC_evmhessfaaw:      "Vector Multiply Halfwords, Even, Signed, Saturate, Fractional and Accumulate into Words"
PPC_evmhessfanw:      "Vector Multiply Halfwords, Even, Signed, Saturate, Fractional and Accumulate Negative into Words"
PPC_evmhessiaaw:      "Vector Multiply Halfwords, Even, Signed, Saturate, Integer and Accumulate into Words"
PPC_evmhessianw:      "Vector Multiply Halfwords, Even, Signed, Saturate, Integer and Accumulate Negative into Words"
PPC_evmheumi:         "Vector Multiply Halfwords, Even, Unsigned, Modulo, Integer"
PPC_evmheumia:        "Vector Multiply Halfwords, Even, Unsigned, Modulo, Integer to Accumulator"
PPC_evmheumiaaw:      "Vector Multiply Halfwords, Even, Unsigned, Modulo, Integer and Accumulate into Words"
PPC_evmheumianw:      "Vector Multiply Halfwords, Even, Unsigned, Modulo, Integer and Accumulate Negative into Words"
PPC_evmheusiaaw:      "Vector Multiply Halfwords, Even, Unsigned, Saturate, Integer and Accumulate into Words"
PPC_evmheusianw:      "Vector Multiply Halfwords, Even, Unsigned, Saturate, Integer and Accumulate Negative into Words"
PPC_evmhogsmfaa:      "Vector Multiply Halfwords, Odd, Guarded, Signed, Modulo, Fractional and Accumulate"
PPC_evmhogsmfan:      "Vector Multiply Halfwords, Odd, Guarded, Signed, Modulo, Fractional and Accumulate Negative"
PPC_evmhogsmiaa:      "Vector Multiply Halfwords, Odd, Guarded, Signed, Modulo, Integer and Accumulate"
PPC_evmhogsmian:      "Vector Multiply Halfwords, Odd, Guarded, Signed, Modulo, Integer and Accumulate Negative"
PPC_evmhogumiaa:      "Vector Multiply Halfwords, Odd, Guarded, Unsigned, Modulo, Integer and Accumulate"
PPC_evmhogumian:      "Vector Multiply Halfwords, Odd, Guarded, Unsigned, Modulo, Integer and Accumulate Negative"
PPC_evmhosmf:         "Vector Multiply Halfwords, Odd, Signed, Modulo, Fractional"
PPC_evmhosmfa:        "Vector Multiply Halfwords, Odd, Signed, Modulo, Fractional to Accumulator"
PPC_evmhosmfaaw:      "Vector Multiply Halfwords, Odd, Signed, Modulo, Fractional and Accumulate into Words"
PPC_evmhosmfanw:      "Vector Multiply Halfwords, Odd, Signed, Modulo, Fractional and Accumulate Negative into Words"
PPC_evmhosmi:         "Vector Multiply Halfwords, Odd, Signed, Modulo, Integer"
PPC_evmhosmia:        "Vector Multiply Halfwords, Odd, Signed, Modulo, Integer to Accumulator"
PPC_evmhosmiaaw:      "Vector Multiply Halfwords, Odd, Signed, Modulo, Integer and Accumulate into Words"
PPC_evmhosmianw:      "Vector Multiply Halfwords, Odd, Signed, Modulo, Integer and Accumulate Negative into Words"
PPC_evmhossf:         "Vector Multiply Halfwords, Odd, Signed, Saturate, Fractional"
PPC_evmhossfa:        "Vector Multiply Halfwords, Odd, Signed, Saturate, Fractional to Accumulator"
PPC_evmhossfaaw:      "Vector Multiply Halfwords, Odd, Signed, Saturate, Fractional and Accumulate into Words"
PPC_evmhossfanw:      "Vector Multiply Halfwords, Odd, Signed, Saturate, Fractional and Accumulate Negative into Words"
PPC_evmhossiaaw:      "Vector Multiply Halfwords, Odd, Signed, Saturate, Integer and Accumulate into Words"
PPC_evmhossianw:      "Vector Multiply Halfwords, Odd, Signed, Saturate, Integer and Accumulate Negative into Words"
PPC_evmhoumi:         "Vector Multiply Halfwords, Odd, Unsigned, Modulo, Integer"
PPC_evmhoumia:        "Vector Multiply Halfwords, Odd, Unsigned, Modulo, Integer to Accumulator"
PPC_evmhoumiaaw:      "Vector Multiply Halfwords, Odd, Unsigned, Modulo, Integer and Accumulate into Words"
PPC_evmhoumianw:      "Vector Multiply Halfwords, Odd, Unsigned, Modulo, Integer and Accumulate Negative into Words"
PPC_evmhousiaaw:      "Vector Multiply Halfwords, Odd, Unsigned, Saturate, Integer and Accumulate into Words"
PPC_evmhousianw:      "Vector Multiply Halfwords, Odd, Unsigned, Saturate, Integer and Accumulate Negative into Words"
PPC_evmra:            "Initialize Accumulator"
PPC_evmwhsmf:         "Vector Multiply Word High Signed, Modulo, Fractional"
PPC_evmwhsmfa:        "Vector Multiply Word High Signed, Modulo, Fractional to Accumulator"
PPC_evmwhsmi:         "Vector Multiply Word High Signed, Modulo, Integer"
PPC_evmwhsmia:        "Vector Multiply Word High Signed, Modulo, Integer to Accumulator"
PPC_evmwhssf:         "Vector Multiply Word High Signed, Saturate, Fractional"
PPC_evmwhssfa:        "Vector Multiply Word High Signed, Saturate, Fractional to Accumulator"
PPC_evmwhumi:         "Vector Multiply Word High Unsigned, Modulo, Integer"
PPC_evmwhumia:        "Vector Multiply Word High Unsigned, Modulo, Integer to Accumulator"
PPC_evmwlsmiaaw:      "Vector Multiply Word Low Signed, Modulo, Integer and Accumulate into Words"
PPC_evmwlsmianw:      "Vector Multiply Word Low Signed, Modulo, Integer and Accumulate Negative in Words"
PPC_evmwlssiaaw:      "Vector Multiply Word Low Signed, Saturate, Integer and Accumulate into Words"
PPC_evmwlssianw:      "Vector Multiply Word Low Signed, Saturate, Integer and Accumulate Negative in Words"
PPC_evmwlumi:         "Vector Multiply Word Low Unsigned, Modulo, Integer"
PPC_evmwlumia:        "Vector Multiply Word Low Unsigned, Modulo, Integer to Accumulator"
PPC_evmwlumiaaw:      "Vector Multiply Word Low Unsigned, Modulo, Integer and Accumulate into Words"
PPC_evmwlumianw:      "Vector Multiply Word Low Unsigned, Modulo, Integer and Accumulate Negative in Words"
PPC_evmwlusiaaw:      "Vector Multiply Word Low Unsigned, Saturate, Integer and Accumulate into Words"
PPC_evmwlusianw:      "Vector Multiply Word Low Unsigned, Saturate, Integer and Accumulate Negative in Words"
PPC_evmwsmf:          "Vector Multiply Word Signed, Modulo, Fractional"
PPC_evmwsmfa:         "Vector Multiply Word Signed, Modulo, Fractional to Accumulator"
PPC_evmwsmfaa:        "Vector Multiply Word Signed, Modulo, Fractional and Accumulate"
PPC_evmwsmfan:        "Vector Multiply Word Signed, Modulo, Fractional and Accumulate Negative"
PPC_evmwsmi:          "Vector Multiply Word Signed, Modulo, Integer"
PPC_evmwsmia:         "Vector Multiply Word Signed, Modulo, Integer to Accumulator"
PPC_evmwsmiaa:        "Vector Multiply Word Signed, Modulo, Integer and Accumulate"
PPC_evmwsmian:        "Vector Multiply Word Signed, Modulo, Integer and Accumulate Negative"
PPC_evmwssf:          "Vector Multiply Word Signed, Saturate, Fractional"
PPC_evmwssfa:         "Vector Multiply Word Signed, Saturate, Fractional to Accumulator"
PPC_evmwssfaa:        "Vector Multiply Word Signed, Saturate, Fractional and Accumulate"
PPC_evmwssfan:        "Vector Multiply Word Signed, Saturate, Fractional and Accumulate Negative"
PPC_evmwumi:          "Vector Multiply Word Unsigned, Modulo, Integer"
PPC_evmwumia:         "Vector Multiply Word Unsigned, Modulo, Integer to Accumulator"
PPC_evmwumiaa:        "Vector Multiply Word Unsigned, Modulo, Integer and Accumulate"
PPC_evmwumian:        "Vector Multiply Word Unsigned, Modulo, Integer and Accumulate Negative"
PPC_evnand:           "Vector NAND"
PPC_evneg:            "Vector Negate"
PPC_evnor:            "Vector NOR"
PPC_evor:             "Vector OR"
PPC_evorc:            "Vector OR with Complement Form"
PPC_evrlw:            "Vector Rotate Left Word"
PPC_evrlwi:           "Vector Rotate Left Word Immediate"
PPC_evrndw:           "Vector Round Word"
PPC_evsel:            "Vector Select"
PPC_evslw:            "Vector Shift Left Word"
PPC_evslwi:           "Vector Shift Left Word Immediate"
PPC_evsplatfi:        "Vector Splat Fractional Immediate"
PPC_evsplati:         "Vector Splat Immediate"
PPC_evsrwis:          "Vector Shift Right Word Immediate Signed"
PPC_evsrwiu:          "Vector Shift Right Word Immediate Unsigned"
PPC_evsrws:           "Vector Shift Right Word Signed"
PPC_evsrwu:           "Vector Shift Right Word Unsigned"
PPC_evstdd:           "Vector Store Double of Double"
PPC_evstddx:          "Vector Store Double of Double Indexed"
PPC_evstdh:           "Vector Store Double of Four Halfwords"
PPC_evstdhx:          "Vector Store Double of Four Halfwords Indexed"
PPC_evstdw:           "Vector Store Double of Two Words"
PPC_evstdwx:          "Vector Store Double of Two Words Indexed"
PPC_evstwhe:          "Vector Store Word of Two Halfwords from Even"
PPC_evstwhex:         "Vector Store Word of Two Halfwords from Even Indexed"
PPC_evstwho:          "Vector Store Word of Two Halfwords from Odd"
PPC_evstwhox:         "Vector Store Word of Two Halfwords from Odd Indexed"
PPC_evstwwe:          "Vector Store Word of Word from Even"
PPC_evstwwex:         "Vector Store Word of Word from Even Indexed"
PPC_evstwwo:          "Vector Store Word of Word from Odd"
PPC_evstwwox:         "Vector Store Word of Word from Odd Indexed"
PPC_evsubfsmiaaw:     "Vector Subtract Signed, Modulo, Integer to Accumulator Word"
PPC_evsubfssiaaw:     "Vector Subtract Signed, Saturate, Integer to Accumulator Word"
PPC_evsubfumiaaw:     "Vector Subtract Unsigned, Modulo, Integer to Accumulator Word"
PPC_evsubfusiaaw:     "Vector Subtract Unsigned, Saturate, Integer to Accumulator Word"
PPC_evsubfw:          "Vector Subtract from Word"
PPC_evsubifw:         "Vector Subtract Immediate from Word"
PPC_evxor:            "Vector XOR"
PPC_efdabs:           "Floating-Point Double-Precision Absolute Value"
PPC_efdadd:           "Floating-Point Double-Precision Add"
PPC_efdcfs:           "Floating-Point Double-Precision Convert from Single-Precision"
PPC_efdcfsf:          "Convert Floating-Point Double-Precision from Signed Fraction"
PPC_efdcfsi:          "Convert Floating-Point Double-Precision from Signed Integer"
PPC_efdcfsid:         "Convert Floating-Point Double-Precision from Signed Integer Doubleword"
PPC_efdcfuf:          "Convert Floating-Point Double-Precision from Unsigned Fraction"
PPC_efdcfui:          "Convert Floating-Point Double-Precision from Unsigned Integer"
PPC_efdcfuid:         "Convert Floating-Point Double-Precision from Unsigned Integer Doubleword"
PPC_efdcmpeq:         "Floating-Point Double-Precision Compare Equal"
PPC_efdcmpgt:         "Floating-Point Double-Precision Compare Greater Than"
PPC_efdcmplt:         "Floating-Point Double-Precision Compare Less Than"
PPC_efdctsf:          "Convert Floating-Point Double-Precision to Signed Fraction"
PPC_efdctsi:          "Convert Floating-Point Double-Precision to Signed Integer"
PPC_efdctsidz:        "Convert Floating-Point Double-Precision to Signed Integer Doubleword with Round toward Zero"
PPC_efdctsiz:         "Convert Floating-Point Double-Precision to Signed Integer with Round toward Zero"
PPC_efdctuf:          "Convert Floating-Point Double-Precision to Unsigned Fraction"
PPC_efdctui:          "Convert Floating-Point Double-Precision to Unsigned Integer"
PPC_efdctuidz:        "Convert Floating-Point Double-Precision to Unsigned Integer Doubleword with Round toward Zero"
PPC_efdctuiz:         "Convert Floating-Point Double-Precision to Unsigned Integer with Round toward Zero"
PPC_efddiv:           "Floating-Point Double-Precision Divide"
PPC_efdmul:           "Floating-Point Double-Precision Multiply"
PPC_efdnabs:          "Floating-Point Double-Precision Negative Absolute Value"
PPC_efdneg:           "Floating-Point Double-Precision Negate"
PPC_efdsub:           "Floating-Point Double-Precision Subtract"
PPC_efdtsteq:         "Floating-Point Double-Precision Test Equal"
PPC_efdtstgt:         "Floating-Point Double-Precision Test Greater Than"
PPC_efdtstlt:         "Floating-Point Double-Precision Test Less Than"
PPC_efscfd:           "Floating-Point Single-Precision Convert from Double-Precision"
PPC_efsabs:           "Floating-Point Single-Precision Absolute Value"
PPC_efsadd:           "Floating-Point Single-Precision Add"
PPC_efscfsf:          "Convert Floating-Point Single-Precision from Signed Fraction"
PPC_efscfsi:          "Convert Floating-Point Single-Precision from Signed Integer"
PPC_efscfuf:          "Convert Floating-Point Single-Precision from Unsigned Fraction"
PPC_efscfui:          "Convert Floating-Point Single-Precision from Unsigned Integer"
PPC_efscmpeq:         "Floating-Point Single-Precision Compare Equal"
PPC_efscmpgt:         "Floating-Point Single-Precision Compare Greater Than"
PPC_efscmplt:         "Floating-Point Single-Precision Compare Less Than"
PPC_efsctsf:          "Convert Floating-Point Single-Precision to Signed Fraction"
PPC_efsctsi:          "Convert Floating-Point Single-Precision to Signed Integer"
PPC_efsctsiz:         "Convert Floating-Point Single-Precision to Signed Integer with Round toward Zero"
PPC_efsctuf:          "Convert Floating-Point Single-Precision to Unsigned Fraction"
PPC_efsctui:          "Convert Floating-Point Single-Precision to Unsigned Integer"
PPC_efsctuiz:         "Convert Floating-Point Single-Precision to Unsigned Integer with Round toward Zero"
PPC_efsdiv:           "Floating-Point Single-Precision Divide"
PPC_efsmul:           "Floating-Point Single-Precision Multiply"
PPC_efsnabs:          "Floating-Point Single-Precision Negative Absolute Value"
PPC_efsneg:           "Floating-Point Single-Precision Negate"
PPC_efssub:           "Floating-Point Single-Precision Subtract"
PPC_efststeq:         "Floating-Point Single-Precision Test Equal"
PPC_efststgt:         "Floating-Point Single-Precision Test Greater Than"
PPC_efststlt:         "Floating-Point Single-Precision Test Less Than"
PPC_evfsabs:          "Vector Floating-Point Single-Precision Absolute Value"
PPC_evfsadd:          "Vector Floating-Point Single-Precision Add"
PPC_evfscfsf:         "Vector Convert Floating-Point Single-Precision from Signed Fraction"
PPC_evfscfsi:         "Vector Convert Floating-Point Single-Precision from Signed Integer"
PPC_evfscfuf:         "Vector Convert Floating-Point Single-Precision from Unsigned Fraction"
PPC_evfscfui:         "Vector Convert Floating-Point Single-Precision from Unsigned Integer"
PPC_evfscmpeq:        "Vector Floating-Point Single-Precision Compare Equal"
PPC_evfscmpgt:        "Vector Floating-Point Single-Precision Compare Greater Than"
PPC_evfscmplt:        "Vector Floating-Point Single-Precision Compare Less Than"
PPC_evfsctsf:         "Vector Convert Floating-Point Single-Precision to Signed Fraction"
PPC_evfsctsi:         "Vector Convert Floating-Point Single-Precision to Signed Integer"
PPC_evfsctsiz:        "Vector Convert Floating-Point Single-Precision to Signed Integer with Round toward Zero"
PPC_evfsctuf:         "Vector Convert Floating-Point Single-Precision to Unsigned Fraction"
PPC_evfsctui:         "Vector Convert Floating-Point Single-Precision to Unsigned Integer"
PPC_evfsctuiz:        "Vector Convert Floating-Point Single-Precision to Unsigned Integer with Round toward Zero"
PPC_evfsdiv:          "Vector Floating-Point Single-Precision Divide"
PPC_evfsmul:          "Vector Floating-Point Single-Precision Multiply"
PPC_evfsnabs:         "Vector Floating-Point Single-Precision Negative Absolute Value"
PPC_evfsneg:          "Vector Floating-Point Single-Precision Negate"
PPC_evfssub:          "Vector Floating-Point Single-Precision Subtract"
PPC_evfststeq:        "Vector Floating-Point Single-Precision Test Equal"
PPC_evfststgt:        "Vector Floating-Point Single-Precision Test Greater Than"
PPC_evfststlt:        "Vector Floating-Point Single-Precision Test Less Than"
PPC_bpermd:           "Bit Permute Doubleword"
PPC_divde:            "Divide Doubleword Extended"
PPC_divdeu:           "Divide Doubleword Extended Unsigned"
PPC_ldbrx:            "Load Doubleword Byte-Reverse Indexed"
PPC_prtyd:            "Parity Doubleword"
PPC_stdbrx:           "Store Doubleword Byte-Reverse Indexed"
PPC_cmpb:             "Compare Bytes"
PPC_divwe:            "Divide Word Extended"
PPC_divweu:           "Divide Word Extended Unsigned"
PPC_lbarx:            "Load Byte and Reserve Indexed"
PPC_lharx:            "Load Halfword and Reserve Indexed"
PPC_popcntd:          "Population Count Doubleword"
PPC_popcntw:          "Population Count Word"
PPC_prtyw:            "Parity Word"
PPC_stbcx:            "Store Byte Conditional Indexed"
PPC_sthcx:            "Store Halfword Conditional Indexed"
PPC_addg6s:           "Add and Generate Sixes"
PPC_cbcdtd:           "Convert Binary Coded Decimal to Declets"
PPC_cdtbcd:           "Convert Declets To Binary Coded Decimal"
PPC_dadd:             "DFP Add"
PPC_daddq:            "DFP Add Quad"
PPC_dcffix:           "DFP Convert From Fixed"
PPC_dcffixq:          "DFP Convert From Fixed Quad"
PPC_dcmpo:            "DFP Compare Ordered"
PPC_dcmpoq:           "DFP Compare Ordered Quad"
PPC_dcmpu:            "DFP Compare Unordered"
PPC_dcmpuq:           "DFP Compare Unordered Quad"
PPC_dctdp:            "DFP Convert To DFP Long"
PPC_dctfix:           "DFP Convert To Fixed"
PPC_dctfixq:          "DFP Convert To Fixed Quad"
PPC_dctqpq:           "DFP Convert To DFP Extended"
PPC_ddedpd:           "DFP Decode DPD To BCD"
PPC_ddedpdq:          "DFP Decode DPD To BCD Quad"
PPC_ddiv:             "DFP Divide"
PPC_ddivq:            "DFP Divide Quad"
PPC_denbcd:           "DFP Encode BCD To DPD"
PPC_denbcdq:          "DFP Encode BCD To DPD Quad"
PPC_diex:             "DFP Insert Biased Exponent"
PPC_diexq:            "DFP Insert Biased Exponent Quad"
PPC_dmul:             "DFP Multiply"
PPC_dmulq:            "DFP Multiply Quad"
PPC_dqua:             "DFP Quantize"
PPC_dquai:            "DFP Quantize Immediate"
PPC_dquaiq:           "DFP Quantize Immediate Quad"
PPC_dquaq:            "DFP Quantize Quad"
PPC_drdpq:            "DFP Round To DFP Long"
PPC_drintn:           "DFP Round To FP Integer Without Inexact"
PPC_drintnq:          "DFP Round To FP Integer Without Inexact Quad"
PPC_drintx:           "DFP Round To FP Integer With Inexact"
PPC_drintxq:          "DFP Round To FP Integer With Inexact Quad"
PPC_drrnd:            "DFP Reround"
PPC_drrndq:           "DFP Reround Quad"
PPC_drsp:             "DFP Round To DFP Short"
PPC_dscli:            "DFP Shift Significand Left Immediate"
PPC_dscliq:           "DFP Shift Significand Left Immediate Quad"
PPC_dscri:            "DFP Shift Significand Right Immediate"
PPC_dscriq:           "DFP Shift Significand Right Immediate Quad"
PPC_dsub:             "DFP Subtract"
PPC_dsubq:            "DFP Subtract Quad"
PPC_dtstdc:           "DFP Test Data Class"
PPC_dtstdcq:          "DFP Test Data Class Quad"
PPC_dtstdg:           "DFP Test Data Group"
PPC_dtstdgq:          "DFP Test Data Group Quad"
PPC_dtstex:           "DFP Test Exponent"
PPC_dtstexq:          "DFP Test Exponent Quad"
PPC_dtstsf:           "DFP Test Significance"
PPC_dtstsfq:          "DFP Test Significance Quad"
PPC_dxex:             "DFP Extract Biased Exponent"
PPC_dxexq:            "DFP Extract Biased Exponent Quad"
PPC_dsn:              "Decorated Storage Notify"
PPC_lbdx:             "Load Byte with Decoration Indexed"
PPC_lddx:             "Load Doubleword with Decoration Indexed"
PPC_lfddx:            "Load Floating Doubleword with Decoration Indexed"
PPC_lhdx:             "Load Halfword with Decoration Indexed"
PPC_lwdx:             "Load Word with Decoration Indexed"
PPC_stbdx:            "Store Byte with Decoration Indexed"
PPC_stddx:            "Store Doubleword with Decoration Indexed"
PPC_stfddx:           "Store Floating Doubleword with Decoration Indexed"
PPC_sthdx:            "Store Halfword with Decoration Indexed"
PPC_stwdx:            "Store Word with Decoration Indexed"
PPC_mbar:             "Memory Barrier"
PPC_rfmci:            "Return From Machine Check Interrupt"
PPC_tlbilx:           "TLB Invalidate Local"
PPC_dci:              "Data Cache Invalidate"
PPC_ici:              "Instruction Cache Invalidate"
PPC_mfdcrux:          "Move From Device Control Register User-mode Indexed"
PPC_mfdcrx:           "Move From Device Control Register Indexed"
PPC_mtdcrux:          "Move To Device Control Register User-mode Indexed"
PPC_mtdcrx:           "Move To Device Control Register Indexed"
PPC_dnh:              "Debugger Notify Halt"
PPC_ehpriv:           "Embedded Hypervisor Privilege"
PPC_rfgi:             "Return From Guest Interrupt"
PPC_msgclr:           "Message Clear"
PPC_msgsnd:           "Message Send"
PPC_dcbfep:           "Data Cache Block Flush by External PID"
PPC_dcbstep:          "Data Cache Block Store by External PID"
PPC_dcbtep:           "Data Cache Block Touch by External PID"
PPC_dcbtstep:         "Data Cache Block Touch for Store by External PID"
PPC_dcbzep:           "Data Cache Block set to Zero by External PID"
PPC_evlddepx:         "Vector Load Doubleword into Doubleword by External Process ID Indexed"
PPC_evstddepx:        "Vector Store Doubleword into Doubleword by External Process ID Indexed"
PPC_icbiep:           "Instruction Cache Block Invalidate by External PID"
PPC_lbepx:            "Load Byte by External Process ID Indexed"
PPC_lfdepx:           "Load Floating-Point Double by External Process ID Indexed"
PPC_lhepx:            "Load Halfword by External Process ID Indexed"
PPC_lvepx:            "Load Vector by External Process ID Indexed"
PPC_lvepxl:           "Load Vector by External Process ID Indexed LRU"
PPC_lwepx:            "Load Word by External Process ID Indexed"
PPC_stbepx:           "Store Byte by External Process ID Indexed"
PPC_stfdepx:          "Store Floating-Point Double by External Process ID Indexed"
PPC_sthepx:           "Store Halfword by External Process ID Indexed"
PPC_stvepx:           "Store Vector by External Process ID Indexed"
PPC_stvepxl:          "Store Vector by External Process ID Indexed LRU"
PPC_stwepx:           "Store Word by External Process ID Indexed"
PPC_ldepx:            "Load Doubleword by External Process ID Indexed"
PPC_stdepx:           "Store Doubleword by External Process ID Indexed"
PPC_mfpmr:            "Move From Performance Monitor Register"
PPC_mtpmr:            "Move To Performance Monitor Register"
PPC_mftmr:            "Move From Thread Management Register"
PPC_mttmr:            "Move To Thread Management Register"
PPC_tlbsrx:           "TLB Search and Reserve"
PPC_fcfids:           "Floating Convert From Integer Doubleword Single"
PPC_fcfidu:           "Floating Convert From Integer Doubleword Unsigned"
PPC_fcfidus:          "Floating Convert From Integer Doubleword Unsigned Single"
PPC_fctidu:           "Floating Convert To Integer Doubleword Unsigned"
PPC_fctiduz:          "Floating Convert To Integer Doubleword Unsigned with round toward Zero"
PPC_fctiwu:           "Floating Convert To Integer Word Unsigned"
PPC_fctiwuz:          "Floating Convert To Integer Word Unsigned with round toward Zero"
PPC_ftdiv:            "Floating Test for software Divide"
PPC_ftsqrt:           "Floating Test for software Square Root"
PPC_lfiwax:           "Load Floating-Point as Integer Word Algebraic Indexed"
PPC_lfiwzx:           "Load Floating-Point as Integer Word and Zero Indexed"
PPC_lfdp:             "Load Floating-Point Double Pair"
PPC_lfdpx:            "Load Floating-Point Double Pair Indexed"
PPC_stfdp:            "Store Floating-Point Double Pair"
PPC_stfdpx:           "Store Floating-Point Double Pair Indexed"
PPC_fcpsgn:           "Floating Copy Sign"
PPC_fre:              "Floating Reciprocal Estimate"
PPC_frim:             "Floating Round to Integer Minus"
PPC_frin:             "Floating Round to Integer Nearest"
PPC_frip:             "Floating Round to Integer Plus"
PPC_friz:             "Floating Round to Integer Toward Zero"
PPC_macchw:           "Multiply Accumulate Cross Halfword to Word Modulo Signed"
PPC_macchws:          "Multiply Accumulate Cross Halfword to Word Saturate Signed"
PPC_macchwsu:         "Multiply Accumulate Cross Halfword to Word Saturate Unsigned"
PPC_macchwu:          "Multiply Accumulate Cross Halfword to Word Modulo Unsigned"
PPC_machhw:           "Multiply Accumulate High Halfword to Word Modulo Signed"
PPC_machhws:          "Multiply Accumulate High Halfword to Word Saturate Signed"
PPC_machhwsu:         "Multiply Accumulate High Halfword to Word Saturate Unsigned"
PPC_machhwu:          "Multiply Accumulate High Halfword to Word Modulo Unsigned"
PPC_maclhw:           "Multiply Accumulate Low Halfword to Word Modulo Signed"
PPC_maclhws:          "Multiply Accumulate Low Halfword to Word Saturate Signed"
PPC_maclhwsu:         "Multiply Accumulate Low Halfword to Word Saturate Unsigned"
PPC_maclhwu:          "Multiply Accumulate Low Halfword to Word Modulo Unsigned"
PPC_mulchw:           "Multiply Cross Halfword to Word Signed"
PPC_mulchwu:          "Multiply Cross Halfword to Word Unsigned"
PPC_mulhhw:           "Multiply High Halfword to Word Signed"
PPC_mulhhwu:          "Multiply High Halfword to Word Unsigned"
PPC_mullhw:           "Multiply Low Halfword to Word Signed"
PPC_mullhwu:          "Multiply Low Halfword to Word Unsigned"
PPC_nmacchw:          "Negative Multiply Accumulate Cross Halfword to Word Modulo Signed"
PPC_nmacchws:         "Negative Multiply Accumulate Cross Halfword to Word Saturate Signed"
PPC_nmachhw:          "Negative Multiply Accumulate High Halfword to Word Modulo Signed"
PPC_nmachhws:         "Negative Multiply Accumulate High Halfword to Word Saturate Signed"
PPC_nmaclhw:          "Negative Multiply Accumulate Low Halfword to Word Modulo Signed"
PPC_nmaclhws:         "Negative Multiply Accumulate Low Halfword to Word Saturate Signed"
PPC_dlmzb:            "Determine Leftmost Zero Byte"
PPC_lq:               "Load Quadword"
PPC_stq:              "Store Quadword"
PPC_doze:             "Doze"
PPC_lbzcix:           "Load Byte and Zero Caching Inhibited Indexed"
PPC_ldcix:            "Load Doubleword Caching Inhibited Indexed"
PPC_lhzcix:           "Load Halfword and Zero Caching Inhibited Indexed"
PPC_lwzcix:           "Load Word and Zero Caching Inhibited Indexed"
PPC_nap:              "Nap"
PPC_rvwinkle:         "Rip Van Winkle"
PPC_slbfee:           "SLB Find Entry ESID"
PPC_sleep:            "Sleep"
PPC_stbcix:           "Store Byte Caching Inhibited Indexed"
PPC_stdcix:           "Store Doubleword Caching Inhibited Indexed"
PPC_sthcix:           "Store Halfword Caching Inhibited Indexed"
PPC_stwcix:           "Store Word Caching Inhibited Indexed"
PPC_tlbiel:           "TLB Invalidate Entry Local, ISA 3.0 format"
PPC_lvebx:            "Load Vector Element Byte Indexed"
PPC_lvehx:            "Load Vector Element Halfword Indexed"
PPC_lvewx:            "Load Vector Element Word Indexed"
PPC_lvsl:             "Load Vector for Shift Left Indexed"
PPC_lvsr:             "Load Vector for Shift Right Indexed"
PPC_lvx:              "Load Vector Indexed"
PPC_lvxl:             "Load Vector Indexed LRU"
PPC_mfvscr:           "Move From Vector Status and Control Register"
PPC_mtvscr:           "Move To Vector Status and Control Register"
PPC_stvebx:           "Store Vector Element Byte Indexed"
PPC_stvehx:           "Store Vector Element Halfword Indexed"
PPC_stvewx:           "Store Vector Element Word Indexed"
PPC_stvx:             "Store Vector Indexed"
PPC_stvxl:            "Store Vector Indexed LRU"
PPC_vaddcuw:          "Vector Add and Write Carry-Out Unsigned Word"
PPC_vaddfp:           "Vector Add Single-Precision"
PPC_vaddsbs:          "Vector Add Signed Byte Saturate"
PPC_vaddshs:          "Vector Add Signed Halfword Saturate"
PPC_vaddsws:          "Vector Add Signed Word Saturate"
PPC_vaddubm:          "Vector Add Unsigned Byte Modulo"
PPC_vaddubs:          "Vector Add Unsigned Byte Saturate"
PPC_vadduhm:          "Vector Add Unsigned Halfword Modulo"
PPC_vadduhs:          "Vector Add Unsigned Halfword Saturate"
PPC_vadduwm:          "Vector Add Unsigned Word Modulo"
PPC_vadduws:          "Vector Add Unsigned Word Saturate"
PPC_vand:             "Vector Logical AND"
PPC_vandc:            "Vector Logical AND with Complement"
PPC_vavgsb:           "Vector Average Signed Byte"
PPC_vavgsh:           "Vector Average Signed Halfword"
PPC_vavgsw:           "Vector Average Signed Word"
PPC_vavgub:           "Vector Average Unsigned Byte"
PPC_vavguh:           "Vector Average Unsigned Halfword"
PPC_vavguw:           "Vector Average Unsigned Word"
PPC_vcfsx:            "Vector Convert From Signed Fixed-Point Word"
PPC_vcfux:            "Vector Convert From Unsigned Fixed-Point Word"
PPC_vcmpbfp:          "Vector Compare Bounds Single-Precision"
PPC_vcmpeqfp:         "Vector Compare Equal To Single-Precision"
PPC_vcmpequb:         "Vector Compare Equal To Unsigned Byte"
PPC_vcmpequh:         "Vector Compare Equal To Unsigned Halfword"
PPC_vcmpequw:         "Vector Compare Equal To Unsigned Word"
PPC_vcmpgefp:         "Vector Compare Greater Than or Equal To Single-Precision"
PPC_vcmpgtfp:         "Vector Compare Greater Than Single-Precision"
PPC_vcmpgtsb:         "Vector Compare Greater Than Signed Byte"
PPC_vcmpgtsh:         "Vector Compare Greater Than Signed Halfword"
PPC_vcmpgtsw:         "Vector Compare Greater Than Signed Word"
PPC_vcmpgtub:         "Vector Compare Greater Than Unsigned Byte"
PPC_vcmpgtuh:         "Vector Compare Greater Than Unsigned Halfword"
PPC_vcmpgtuw:         "Vector Compare Greater Than Unsigned Word"
PPC_vctsxs:           "Vector Convert To Signed Fixed-Point Word Saturate"
PPC_vctuxs:           "Vector Convert To Unsigned Fixed-Point Word Saturate"
PPC_vexptefp:         "Vector 2 Raised to the Exponent Estimate FloatingPoint"
PPC_vlogefp:          "Vector Log Base 2 Estimate Floating-Point"
PPC_vmaddfp:          "Vector Multiply-Add Single-Precision"
PPC_vmaxfp:           "Vector Maximum Single-Precision"
PPC_vmaxsb:           "Vector Maximum Signed Byte"
PPC_vmaxsh:           "Vector Maximum Signed Halfword"
PPC_vmaxsw:           "Vector Maximum Signed Word"
PPC_vmaxub:           "Vector Maximum Unsigned Byte"
PPC_vmaxuh:           "Vector Maximum Unsigned Halfword"
PPC_vmaxuw:           "Vector Maximum Unsigned Word"
PPC_vmhaddshs:        "Vector Multiply-High-Add Signed Halfword Saturate"
PPC_vmhraddshs:       "Vector Multiply-High-Round-Add Signed Halfword Saturate"
PPC_vminfp:           "Vector Minimum Single-Precision"
PPC_vminsb:           "Vector Minimum Signed Byte"
PPC_vminsh:           "Vector Minimum Signed Halfword"
PPC_vminsw:           "Vector Minimum Signed Word"
PPC_vminub:           "Vector Minimum Unsigned Byte"
PPC_vminuh:           "Vector Minimum Unsigned Halfword"
PPC_vminuw:           "Vector Minimum Unsigned Word"
PPC_vmladduhm:        "Vector Multiply-Low-Add Unsigned Halfword Modulo"
PPC_vmrghb:           "Vector Merge High Byte"
PPC_vmrghh:           "Vector Merge High Halfword"
PPC_vmrghw:           "Vector Merge High Word"
PPC_vmrglb:           "Vector Merge Low Byte"
PPC_vmrglh:           "Vector Merge Low Halfword"
PPC_vmrglw:           "Vector Merge Low Word"
PPC_vmsummbm:         "Vector Multiply-Sum Mixed Byte Modulo"
PPC_vmsumshm:         "Vector Multiply-Sum Signed Halfword Modulo"
PPC_vmsumshs:         "Vector Multiply-Sum Signed Halfword Saturate"
PPC_vmsumubm:         "Vector Multiply-Sum Unsigned Byte Modulo"
PPC_vmsumuhm:         "Vector Multiply-Sum Unsigned Halfword Modulo"
PPC_vmsumuhs:         "Vector Multiply-Sum Unsigned Halfword Saturate"
PPC_vmulesb:          "Vector Multiply Even Signed Byte"
PPC_vmulesh:          "Vector Multiply Even Signed Halfword"
PPC_vmuleub:          "Vector Multiply Even Unsigned Byte"
PPC_vmuleuh:          "Vector Multiply Even Unsigned Halfword"
PPC_vmulosb:          "Vector Multiply Odd Signed Byte"
PPC_vmulosh:          "Vector Multiply Odd Signed Halfword"
PPC_vmuloub:          "Vector Multiply Odd Unsigned Byte"
PPC_vmulouh:          "Vector Multiply Odd Unsigned Halfword"
PPC_vnmsubfp:         "Vector Negative Multiply-Subtract Single-Precision"
PPC_vnor:             "Vector Logical NOR"
PPC_vor:              "Vector Logical OR"
PPC_vperm:            "Vector Permute"
PPC_vpkpx:            "Vector Pack Pixel"
PPC_vpkshss:          "Vector Pack Signed Halfword Signed Saturate"
PPC_vpkshus:          "Vector Pack Signed Halfword Unsigned Saturate"
PPC_vpkswss:          "Vector Pack Signed Word Signed Saturate"
PPC_vpkswus:          "Vector Pack Signed Word Unsigned Saturate"
PPC_vpkuhum:          "Vector Pack Unsigned Halfword Unsigned Modulo"
PPC_vpkuhus:          "Vector Pack Unsigned Halfword Unsigned Saturate"
PPC_vpkuwum:          "Vector Pack Unsigned Word Unsigned Modulo"
PPC_vpkuwus:          "Vector Pack Unsigned Word Unsigned Saturate"
PPC_vrefp:            "Vector Reciprocal Estimate Single-Precision"
PPC_vrfim:            "Vector Round to Single-Precision Integer toward -Infinity"
PPC_vrfin:            "Vector Round to Single-Precision Integer Nearest"
PPC_vrfip:            "Vector Round to Single-Precision Integer toward +Infinity"
PPC_vrfiz:            "Vector Round to Single-Precision Integer toward Zero"
PPC_vrlb:             "Vector Rotate Left Byte"
PPC_vrlh:             "Vector Rotate Left Halfword"
PPC_vrlw:             "Vector Rotate Left Word"
PPC_vrsqrtefp:        "Vector Reciprocal Square Root Estimate Single-Precision"
PPC_vsel:             "Vector Select"
PPC_vsl:              "Vector Shift Left"
PPC_vslb:             "Vector Shift Left Byte"
PPC_vsldoi:           "Vector Shift Left Double by Octet Immediate"
PPC_vslh:             "Vector Shift Left Halfword"
PPC_vslo:             "Vector Shift Left by Octet"
PPC_vslw:             "Vector Shift Left Word"
PPC_vspltb:           "Vector Splat Byte"
PPC_vsplth:           "Vector Splat Halfword"
PPC_vspltisb:         "Vector Splat Immediate Signed Byte"
PPC_vspltish:         "Vector Splat Immediate Signed Halfword"
PPC_vspltisw:         "Vector Splat Immediate Signed Word"
PPC_vspltw:           "Vector Splat Word"
PPC_vsr:              "Vector Shift Right"
PPC_vsrab:            "Vector Shift Right Algebraic Byte"
PPC_vsrah:            "Vector Shift Right Algebraic Halfword"
PPC_vsraw:            "Vector Shift Right Algebraic Word"
PPC_vsrb:             "Vector Shift Right Byte"
PPC_vsrh:             "Vector Shift Right Halfword"
PPC_vsro:             "Vector Shift Right by Octet"
PPC_vsrw:             "Vector Shift Right Word"
PPC_vsubcuw:          "Vector Subtract and Write Carry-Out Unsigned Word"
PPC_vsubfp:           "Vector Subtract Single-Precision"
PPC_vsubsbs:          "Vector Subtract Signed Byte Saturate"
PPC_vsubshs:          "Vector Subtract Signed Halfword Saturate"
PPC_vsubsws:          "Vector Subtract Signed Word Saturate"
PPC_vsububm:          "Vector Subtract Unsigned Byte Modulo"
PPC_vsububs:          "Vector Subtract Unsigned Byte Saturate"
PPC_vsubuhm:          "Vector Subtract Unsigned Halfword Modulo"
PPC_vsubuhs:          "Vector Subtract Unsigned Halfword Saturate"
PPC_vsubuwm:          "Vector Subtract Unsigned Word Modulo"
PPC_vsubuws:          "Vector Subtract Unsigned Word Saturate"
PPC_vsum2sws:         "Vector Sum across Half Signed Word Saturate"
PPC_vsum4sbs:         "Vector Sum across Quarter Signed Byte Saturate"
PPC_vsum4shs:         "Vector Sum across Quarter Signed Halfword Saturate"
PPC_vsum4ubs:         "Vector Sum across Quarter Unsigned Byte Saturate"
PPC_vsumsws:          "Vector Sum across Signed Word Saturate"
PPC_vupkhpx:          "Vector Unpack High Pixel"
PPC_vupkhsb:          "Vector Unpack High Signed Byte"
PPC_vupkhsh:          "Vector Unpack High Signed Halfword"
PPC_vupklpx:          "Vector Unpack Low Pixel"
PPC_vupklsb:          "Vector Unpack Low Signed Byte"
PPC_vupklsh:          "Vector Unpack Low Signed Halfword"
PPC_vxor:             "Vector Logical XOR"
PPC_lxsdx:            "Load VSR Scalar Doubleword Indexed"
PPC_lxvd2x:           "Load VSR Vector Doubleword*2 Indexed"
PPC_lxvdsx:           "Load VSR Vector Doubleword & Splat Indexed"
PPC_lxvw4x:           "Load VSR Vector Word*4 Indexed"
PPC_stxsdx:           "Store VSR Scalar Doubleword Indexed"
PPC_stxvd2x:          "Store VSR Vector Doubleword*2 Indexed"
PPC_stxvw4x:          "Store VSR Vector Word*4 Indexed"
PPC_xsabsdp:          "VSX Scalar Absolute Value Double-Precision"
PPC_xsadddp:          "VSX Scalar Add Double-Precision"
PPC_xscmpodp:         "VSX Scalar Compare Ordered Double-Precision"
PPC_xscmpudp:         "VSX Scalar Compare Unordered Double-Precision"
PPC_xscpsgndp:        "VSX Scalar Copy Sign Double-Precision"
PPC_xscvdpsp:         "VSX Scalar Convert Double-Precision to SinglePrecision"
PPC_xscvdpsxds:       "VSX Scalar truncate Double-Precision to integer and Convert to Signed Fixed-Point Doubleword format with Saturate"
PPC_xscvdpsxws:       "VSX Scalar truncate Double-Precision to integer and Convert to Signed Fixed-Point Word format with Saturate"
PPC_xscvdpuxds:       "VSX Scalar truncate Double-Precision to integer and Convert to Unsigned Fixed-Point Doubleword format with Saturate"
PPC_xscvdpuxws:       "VSX Scalar truncate Double-Precision to integer and Convert to Unsigned Fixed-Point Word format with Saturate"
PPC_xscvspdp:         "VSX Scalar Convert Single-Precision to DoublePrecision format"
PPC_xscvsxddp:        "VSX Scalar Convert and round Signed Fixed-Point Doubleword to Double-Precision format"
PPC_xscvuxddp:        "VSX Scalar Convert and round Unsigned Fixed-Point Doubleword to Double-Precision format"
PPC_xsdivdp:          "VSX Scalar Divide Double-Precision"
PPC_xsmaddadp:        "VSX Scalar Multiply-Add Type-A Double-Precision"
PPC_xsmaddmdp:        "VSX Scalar Multiply-Add Type-M Double-Precision"
PPC_xsmaxdp:          "VSX Scalar Maximum Double-Precision"
PPC_xsmindp:          "VSX Scalar Minimum Double-Precision"
PPC_xsmsubadp:        "VSX Scalar Multiply-Subtract Type-A Double-Precision"
PPC_xsmsubmdp:        "VSX Scalar Multiply-Subtract Type-M Double-Precision"
PPC_xsmuldp:          "VSX Scalar Multiply Double-Precision"
PPC_xsnabsdp:         "VSX Scalar Negative Absolute Value Double-Precision"
PPC_xsnegdp:          "VSX Scalar Negate Double-Precision"
PPC_xsnmaddadp:       "VSX Scalar Negative Multiply-Add Type-A DoublePrecision"
PPC_xsnmaddmdp:       "VSX Scalar Negative Multiply-Add Type-M DoublePrecision"
PPC_xsnmsubadp:       "VSX Scalar Negative Multiply-Subtract Type-A DoublePrecision"
PPC_xsnmsubmdp:       "VSX Scalar Negative Multiply-Subtract Type-M DoublePrecision"
PPC_xsrdpi:           "VSX Scalar Round to Double-Precision Integer"
PPC_xsrdpic:          "VSX Scalar Round to Double-Precision Integer using Current rounding mode"
PPC_xsrdpim:          "VSX Scalar Round to Double-Precision Integer toward Infinity"
PPC_xsrdpip:          "VSX Scalar Round to Double-Precision Integer toward + Infinity"
PPC_xsrdpiz:          "VSX Scalar Round to Double-Precision Integer toward Zero"
PPC_xsredp:           "VSX Scalar Reciprocal Estimate Double-Precision"
PPC_xsrsqrtedp:       "VSX Scalar Reciprocal Square Root Estimate DoublePrecision"
PPC_xssqrtdp:         "VSX Scalar Square Root Double-Precision"
PPC_xssubdp:          "VSX Scalar Subtract Double-Precision"
PPC_xstdivdp:         "VSX Scalar Test for software Divide Double-Precision"
PPC_xstsqrtdp:        "VSX Scalar Test for software Square Root DoublePrecision"
PPC_xvabsdp:          "VSX Vector Absolute Value Double-Precision"
PPC_xvabssp:          "VSX Vector Absolute Value Single-Precision"
PPC_xvadddp:          "VSX Vector Add Double-Precision"
PPC_xvaddsp:          "VSX Vector Add Single-Precision"
PPC_xvcmpeqdp:        "VSX Vector Compare Equal To Double-Precision"
PPC_xvcmpeqsp:        "VSX Vector Compare Equal To Single-Precision"
PPC_xvcmpgedp:        "VSX Vector Compare Greater Than or Equal To Double-Precision"
PPC_xvcmpgesp:        "VSX Vector Compare Greater Than or Equal To SinglePrecision"
PPC_xvcmpgtdp:        "VSX Vector Compare Greater Than Double-Precision"
PPC_xvcmpgtsp:        "VSX Vector Compare Greater Than Single-Precision"
PPC_xvcpsgndp:        "VSX Vector Copy Sign Double-Precision"
PPC_xvcpsgnsp:        "VSX Vector Copy Sign Single-Precision"
PPC_xvcvdpsp:         "VSX Vector round and Convert Double-Precision to Single-Precision format"
PPC_xvcvdpsxds:       "VSX Vector truncate Double-Precision to integer and Convert to Signed Fixed-Point Doubleword Saturate"
PPC_xvcvdpsxws:       "VSX Vector truncate Double-Precision to integer and Convert to Signed Fixed-Point Word Saturate"
PPC_xvcvdpuxds:       "VSX Vector truncate Double-Precision to integer and Convert to Unsigned Fixed-Point Doubleword format with Saturate"
PPC_xvcvdpuxws:       "VSX Vector truncate Double-Precision to integer and Convert to Unsigned Fixed-Point Word format with Saturate"
PPC_xvcvspdp:         "VSX Vector Convert Single-Precision to DoublePrecision"
PPC_xvcvspsxds:       "VSX Vector truncate Single-Precision to integer and Convert to Signed Fixed-Point Doubleword format with Saturate"
PPC_xvcvspsxws:       "VSX Vector truncate Single-Precision to integer and Convert to Signed Fixed-Point Word format with Saturate"
PPC_xvcvspuxds:       "VSX Vector truncate Single-Precision to integer and Convert to Unsigned Fixed-Point Doubleword format with Saturate"
PPC_xvcvspuxws:       "VSX Vector truncate Single-Precision to integer and Convert to Unsigned Fixed-Point Word Saturate"
PPC_xvcvsxddp:        "VSX Vector Convert and round Signed Fixed-Point Doubleword to Double-Precision format"
PPC_xvcvsxdsp:        "VSX Vector Convert and round Signed Fixed-Point Doubleword to Single-Precision format"
PPC_xvcvsxwdp:        "VSX Vector Convert Signed Fixed-Point Word to Double-Precision format"
PPC_xvcvsxwsp:        "VSX Vector Convert and round Signed Fixed-Point Word to Single-Precision format"
PPC_xvcvuxddp:        "VSX Vector Convert and round Unsigned Fixed-Point Doubleword to Double-Precision format"
PPC_xvcvuxdsp:        "VSX Vector Convert and round Unsigned Fixed-Point Doubleword to Single-Precision format"
PPC_xvcvuxwdp:        "VSX Vector Convert Unsigned Fixed-Point Word to Double-Precision format"
PPC_xvcvuxwsp:        "VSX Vector Convert and round Unsigned Fixed-Point Word to Single-Precision format"
PPC_xvdivdp:          "VSX Vector Divide Double-Precision"
PPC_xvdivsp:          "VSX Vector Divide Single-Precision"
PPC_xvmaddadp:        "VSX Vector Multiply-Add Type-A Double-Precision"
PPC_xvmaddasp:        "VSX Vector Multiply-Add Type-A Single-Precision"
PPC_xvmaddmdp:        "VSX Vector Multiply-Add Type-M Double-Precision"
PPC_xvmaddmsp:        "VSX Vector Multiply-Add Type-M Single-Precision"
PPC_xvmaxdp:          "VSX Vector Maximum Double-Precision"
PPC_xvmaxsp:          "VSX Vector Maximum Single-Precision"
PPC_xvmindp:          "VSX Vector Minimum Double-Precision"
PPC_xvminsp:          "VSX Vector Minimum Single-Precision"
PPC_xvmsubadp:        "VSX Vector Multiply-Subtract Type-A Double-Precision"
PPC_xvmsubasp:        "VSX Vector Multiply-Subtract Type-A Single-Precision"
PPC_xvmsubmdp:        "VSX Vector Multiply-Subtract Type-M Double-Precision"
PPC_xvmsubmsp:        "VSX Vector Multiply-Subtract Type-M Single-Precision"
PPC_xvmuldp:          "VSX Vector Multiply Double-Precision"
PPC_xvmulsp:          "VSX Vector Multiply Single-Precision"
PPC_xvnabsdp:         "VSX Vector Negative Absolute Value Double-Precision"
PPC_xvnabssp:         "VSX Vector Negative Absolute Value Single-Precision"
PPC_xvnegdp:          "VSX Vector Negate Double-Precision"
PPC_xvnegsp:          "VSX Vector Negate Single-Precision"
PPC_xvnmaddadp:       "VSX Vector Negative Multiply-Add Type-A DoublePrecision"
PPC_xvnmaddasp:       "VSX Vector Negative Multiply-Add Type-A SinglePrecision"
PPC_xvnmaddmdp:       "VSX Vector Negative Multiply-Add Type-M DoublePrecision"
PPC_xvnmaddmsp:       "VSX Vector Negative Multiply-Add Type-M SinglePrecision"
PPC_xvnmsubadp:       "VSX Vector Negative Multiply-Subtract Type-A DoublePrecision"
PPC_xvnmsubasp:       "VSX Vector Negative Multiply-Subtract Type-A SinglePrecision"
PPC_xvnmsubmdp:       "VSX Vector Negative Multiply-Subtract Type-M DoublePrecision"
PPC_xvnmsubmsp:       "VSX Vector Negative Multiply-Subtract Type-M SinglePrecision"
PPC_xvrdpi:           "VSX Vector Round to Double-Precision Integer"
PPC_xvrdpic:          "VSX Vector Round to Double-Precision Integer using Current rounding mode"
PPC_xvrdpim:          "VSX Vector Round to Double-Precision Integer toward Infinity"
PPC_xvrdpip:          "VSX Vector Round to Double-Precision Integer toward + Infinity"
PPC_xvrdpiz:          "VSX Vector Round to Double-Precision Integer toward Zero"
PPC_xvredp:           "VSX Vector Reciprocal Estimate Double-Precision"
PPC_xvresp:           "VSX Vector Reciprocal Estimate Single-Precision"
PPC_xvrspi:           "VSX Vector Round to Single-Precision Integer"
PPC_xvrspic:          "VSX Vector Round to Single-Precision Integer using Current rounding mode"
PPC_xvrspim:          "VSX Vector Round to Single-Precision Integer toward Infinity"
PPC_xvrspip:          "VSX Vector Round to Single-Precision Integer toward + Infinity"
PPC_xvrspiz:          "VSX Vector Round to Single-Precision Integer toward Zero"
PPC_xvrsqrtedp:       "VSX Vector Reciprocal Square Root Estimate DoublePrecision"
PPC_xvrsqrtesp:       "VSX Vector Reciprocal Square Root Estimate SinglePrecision"
PPC_xvsqrtdp:         "VSX Vector Square Root Double-Precision"
PPC_xvsqrtsp:         "VSX Vector Square Root Single-Precision"
PPC_xvsubdp:          "VSX Vector Subtract Double-Precision"
PPC_xvsubsp:          "VSX Vector Subtract Single-Precision"
PPC_xvtdivdp:         "VSX Vector Test for software Divide Double-Precision"
PPC_xvtdivsp:         "VSX Vector Test for software Divide Single-Precision"
PPC_xvtsqrtdp:        "VSX Vector Test for software Square Root DoublePrecision"
PPC_xvtsqrtsp:        "VSX Vector Test for software Square Root SinglePrecision"
PPC_xxland:           "VSX Logical AND"
PPC_xxlandc:          "VSX Logical AND with Complement"
PPC_xxlnor:           "VSX Logical NOR"
PPC_xxlor:            "VSX Logical OR"
PPC_xxlxor:           "VSX Logical XOR"
PPC_xxmrghw:          "VSX Merge High Word"
PPC_xxmrglw:          "VSX Merge Low Word"
PPC_xxpermdi:         "VSX Permute Doubleword Immediate"
PPC_xxsel:            "VSX Select"
PPC_xxsldwi:          "VSX Shift Left Double by Word Immediate"
PPC_xxspltw:          "VSX Splat Word"
PPC_wait:             "Wait"
PPC_dss:              "Data Stream Stop"
PPC_dssall:           "Data Stream Stop All"
PPC_dst:              "Data Stream Touch"
PPC_dstt:             "Data Stream Touch Transient"
PPC_dstst:            "Data Stream Touch for Store"
PPC_dststt:           "Data Stream Touch for Store Transient"
PPC_lvlx:             "Load Vector Left Indexed"
PPC_lvlxl:            "Load Vector Left Indexed Last"
PPC_lvrx:             "Load Vector Right Indexed"
PPC_lvrxl:            "Load Vector Right Indexed Last"
PPC_stvlx:            "Store Vector Left Indexed"
PPC_stvlxl:           "Store Vector Left Indexed Last"
PPC_stvrx:            "Store Vector Right Indexed"
PPC_stvrxl:           "Store Vector Right Indexed Last"

PPC_add16i:           "Add Immediate"
PPC_add2i:            "Add (2 operand) Immediate and Record"
PPC_add2is:           "Add (2 operand) Immediate Shifted"
PPC_and2i:            "AND (two operand) Immediate"
PPC_and2is:           "AND (2 operand) Immediate Shifted"
PPC_cmp16i:           "Compare Immediate Word"
PPC_cmph:             "Compare Halfword"
PPC_cmph16i:          "Compare Halfword Immediate"
PPC_cmphl:            "Compare Halfword Logical"
PPC_cmphl16i:         "Compare Halfword Logical Immediate"
PPC_cmpl16i:          "Compare Logical Immediate Word"
PPC_mull2i:           "Multiply (2 operand) Low Immediate"
PPC_or2i:             "OR (two operand) Immediate"
PPC_or2is:            "OR (2 operand) Immediate Shifted"
PPC_rlw:              "Rotate Left Word"
PPC_rlwi:             "Rotate Left Word Immediate"
PPC_bclri:            "Bit Clear Immediate"
//PPC_bctr:            "Branch to Count Register "
//PPC_bctrl:           "Branch to Count Register and Link"
PPC_bgeni:            "Bit Generate Immediate"
PPC_bmaski:           "Bit Mask Generate Immediate"
PPC_bseti:            "Bit Set Immediate"
PPC_btsti:            "Bit Test Immediate"
PPC_extzb:            "Extend Zero Byte"
PPC_extzh:            "Extend Zero Halfword"
PPC_illegal:          "Illegal"
PPC_mfar:             "Move from Alternate Register"
PPC_mtar:             "Move To Alternate Register"
PPC_sub:              "Subtract"
PPC_sub16i:           "Subtract Immediate"
PPC_sub2i:            "Subtract (2 operand) Immediate"
PPC_sub2is:           "Subtract (2 operand) Immediate Shifted"
PPC_extldi:     "Extract and Left Justify Immediate"
PPC_extrdi:     "Extract and Right Justify Immediate"
PPC_insrdi:     "Insert from Right Immediate"
PPC_rotldi:     "Rotate Left Immediate"
PPC_rotrdi:     "Rotate Right Immediate"
PPC_rotld:      "Rotate Left"
PPC_sldi:       "Shift Left Immediate"
PPC_srdi:       "Shift Right Immediate"
PPC_clrldi:     "Clear Left Immediate"
PPC_clrrdi:     "Clear Right Immediate"
PPC_clrlsldi:   "Clear Left and Shift Left Immediate"

PPC_xnop:       "Extended No Operation"
PPC_hnop:       "Reserved no-op hint"
PPC_dcbfl:      "Data Cache Block Flush Local"
PPC_dcbflp:     "Data Cache Block Flush Local Primary"
PPC_dcbtt:      "Data Cache Block Touch"
PPC_dcbtstt:    "Data Cache Block Touch for Store"
PPC_lwsync:     "Lightweight Sync"
PPC_ptesync:    "Page Table Entry Sync"
PPC_waitrsv:    "Wait For Reservation Loss"
PPC_waitimpl:   "Wait For Implementation-specific Condition"
PPC_evmr:       "Vector Move"
PPC_evnot:      "Vector Not"
PPC_mtcr:       "Move to Condition Register"
PPC_dcbz128:    "Data Cache Block Clear to Zero (128 bytes)"
PPC_xvmovdp:    "VSX Vector Copy Double-Precision"
PPC_xvmovsp:    "VSX Vector Copy Single-Precision"
PPC_xxspltd:    "VSX Splat Doubleword"
PPC_xxmrghd:    "VSX Merge High Doubleword"
PPC_xxmrgld:    "VSX Merge Low Doubleword"
PPC_xxswapd:    "VSX Swap Doubleword"

PPC_dcbz128:    "Data Cache Block Clear to Zero (128 bytes)"
PPC_mtmsree:    "Move to Machine State Register EE"

// new Xbox 360 instructions (VMX128)
PPC_vcfpsxws:   "Vector Convert From Single-Precision to Signed Fixed-point Word Saturate"
PPC_vcfpuxws:   "Vector Convert From Single-Precision to Unsigned Fixed-point Word Saturate"
PPC_vcsxwfp:    "Vector Convert from Signed Fixed-point Word to Single-Precision"
PPC_vcuxwfp:    "Vector Convert from Unsigned Fixed-point Word to Single-Precision"
PPC_vmaddcfp:   "Vector Convert from Unsigned Fixed-point Word to Single-Precision"
PPC_vmsum3fp:   "Vector Multiply-Sum 3-way Single-Precision"
PPC_vmsum4fp:   "Vector Multiply-Sum 4-way Single-Precision"
PPC_vmulfp:     "Vector Multiply Single-Precision"
PPC_vpermwi:    "Vector Permute Word Immediate"
PPC_vpkd3d:     "Vector Pack D3Dtype, Rotate Left Immediate and Mask Insert"
PPC_vrlimi:     "Vector Rotate Left Immediate and Mask Insert"
PPC_vupkd3d:    "Vector Unpack D3Dtype"

// Paired Singles (750CL/Gekko/Broadway)
PPC_ps_cmpu0:   "Paired Single Compare Unordered High"
PPC_psq_lx:     "Paired Single Quantized Load Indexed"
PPC_psq_stx:    "Paired Single Quantized Store Indexed"
PPC_ps_sum0:    "Paired Single Vector Sum High"
PPC_ps_sum1:    "Paired Single Vector Sum Low"
PPC_ps_muls0:   "Paired Single Multiply Scalar High"
PPC_ps_muls1:   "Paired Single Multiply Scalar Low"
PPC_ps_madds0:  "Paired Single Multiply-Add Scalar High"
PPC_ps_madds1:  "Paired Single Multiply-Add Scalar Low"
PPC_ps_div:     "Paired Single Divide"
PPC_ps_sub:     "Paired Single Subtract"
PPC_ps_add:     "Paired Single Add"
PPC_ps_sel:     "Paired Single Select"
PPC_ps_res:     "Paired Single Reciprocal Estimate"
PPC_ps_mul:     "Paired Single Multiply"
PPC_ps_rsqrte:  "Paired Single Reciprocal Square Root Estimate"
PPC_ps_msub:    "Paired Single Multiply-Subtract"
PPC_ps_madd:    "Paired Single Multiply-Add"
PPC_ps_nmsub:   "Paired Single Negative Multiply-Subtract"
PPC_ps_nmadd:   "Paired Single Negative Multiply-Add"
PPC_ps_cmpo0:   "Paired Single Compare Ordered High"
PPC_psq_lux:    "Paired Single Quantized Load with update Indexed"
PPC_psq_stux:   "Paired Single Quantized Store with update Indexed"
PPC_ps_neg:     "Paired Single Negate"
PPC_ps_cmpu1:   "Paired Single Compare Unordered Low"
PPC_ps_mr:      "Paired Single Move Register"
PPC_ps_cmpo1:   "Paired Single Compare Ordered Low"
PPC_ps_nabs:    "Paired Single Negative Absolute Value"
PPC_ps_abs:     "Paired Single Absolute Value"
PPC_ps_merge00: "Paired Single Merge High"
PPC_ps_merge01: "Paired Single Merge Direct"
PPC_ps_merge10: "Paired Single Merge Swapped"
PPC_ps_merge11: "Paired Single Merge Low"
PPC_dcbz_l:     "Data Cache Block Set to Zero Locked"
PPC_psq_l:      "Paired Single Quantized Load"
PPC_psq_lu:     "Paired Single Quantized Load update"
PPC_psq_st:     "Paired Single Quantized Store"
PPC_psq_stu:    "Paired Single Quantized Store update"

// additional SPE/EFPU2 instructions
PPC_evfsmadd:   "Vector Floating-Point Single-Precision Multiply-Add"
PPC_evfsmsub:   "Vector Floating-Point Single-Precision Multiply-Subtract"
PPC_evfssqrt:   "Vector Floating-Point Single-Precision Square Root"
PPC_evfsnmadd:  "Vector Floating-Point Single-Precision Negative Multiply-Add"
PPC_evfsnmsub:  "Vector Floating-Point Single-Precision Negative Multiply-Subtract"
PPC_evfsmax:    "Vector Floating-Point Single-Precision Maximum"
PPC_evfsmin:    "Vector Floating-Point Single-Precision Minimum"
PPC_evfsaddsub: "Vector Floating-Point Single-Precision Add / Subtract"
PPC_evfssubadd: "Vector Floating-Point Single-Precision Subtract / Add"
PPC_evfssum:    "Vector Floating-Point Single-Precision Sums"
PPC_evfsdiff:   "Vector Floating-Point Single-Precision Differences"
PPC_evfssumdiff:"Vector Floating-Point Single-Precision Sum / Difference"
PPC_evfsdiffsum:"Vector Floating-Point Single-Precision Difference / Sum"
PPC_evfsaddx:   "Vector Floating-Point Single-Precision Add Exchanged"
PPC_evfssubx:   "Vector Floating-Point Single-Precision Subtract Exchanged"
PPC_evfsaddsubx:"Vector Floating-Point Single-Precision Add / Subtract Exchanged"
PPC_evfssubaddx:"Vector Floating-Point Single-Precision Subtract / Add Exchanged"
PPC_evfsmulx:   "Vector Floating-Point Single-Precision Multiply Exchanged"
PPC_evfsmule:   "Vector Floating-Point Single-Precision Multiply By Even Element"
PPC_evfsmulo:   "Vector Floating-Point Single-Precision Multiply By Odd Element"
PPC_evfscfh:    "Vector Convert Floating-Point Single-Precision from Half-Precision"
PPC_evfscth:    "Vector Convert Floating-Point Single-Precision to Half-Precision"
PPC_efsmax:     "Floating-Point Single-Precision Maximum"
PPC_efsmin:     "Floating-Point Single-Precision Minimum"
PPC_efsmadd:    "Floating-Point Single-Precision Multiply-Add"
PPC_efsmsub:    "Floating-Point Single-Precision Multiply-Subtract"
PPC_efssqrt:    "Floating-Point Single-Precision Square Root"
PPC_efsnmadd:   "Floating-Point Single-Precision Negative Multiply-Add"
PPC_efsnmsub:   "Floating-Point Single-Precision Negative Multiply-Subtract"
PPC_efscfh:     "Convert Floating-Point Single-Precision from Half-Precision"
PPC_efscth:     "Convert Floating-Point Single-Precision to Half-Precision"

// Volatile Context Save/Restore APU
PPC_lmvgprw:    "Load Multiple Volatile GPR Word"
PPC_stmvgprw:   "Store Multiple Volatile GPR Word"
PPC_lmvsprw:    "Load Multiple Volatile SPR Word"
PPC_stmvsprw:   "Store Multiple Volatile SPR Word"
PPC_lmvsrrw:    "Load Multiple Volatile SRR Word"
PPC_stmvsrrw:   "Store Multiple Volatile SRR Word"
PPC_lmvcsrrw:   "Load Multiple Volatile CSRR Word"
PPC_stmvcsrrw:  "Store Multiple Volatile CSRR Word"
PPC_lmvdsrrw:   "Load Multiple Volatile DSRR Word"
PPC_stmvdsrrw:  "Store Multiple Volatile DSRR Word"
PPC_lmvmcsrrw:  "Load Multiple Volatile MCSRR Word"
PPC_stmvmcsrrw: "Store Multiple Volatile MCSRR Word"

// SPE2 (Signal Processing Engine 2) instructions
PPC_evdotpwcssi:   "Vector Dot Product of Words, Complex, Signed, Saturate, Integer (to Accumulator)"
PPC_evdotpwcsmi:   "Vector Dot Product of Words, Complex, Signed, Modulo, Integer (to Accumulator)"
PPC_evdotpwcssfr:   "Vector Dot Product of Words, Complex, Signed, Saturate, Fractional, Round (to Accumulator)"
PPC_evdotpwcssf:   "Vector Dot Product of Words, Complex, Signed, Saturate, Fractional (to Accumulator)"
PPC_evdotpwgasmf:   "Vector Dot Product of Words Guarded, Add, Signed, Modulo, Fractional (to Accumulator)"
PPC_evdotpwxgasmf:   "Vector Dot Product of Words Exchanged, Guarded, Add, Signed, Modulo, Fractional (to Accumulator)"
PPC_evdotpwgasmfr:   "Vector Dot Product of Words Guarded, Add, Signed, Modulo, Fractional, Round (to Accumulator)"
PPC_evdotpwxgasmfr:   "Vector Dot Product of Words Exchanged, Guarded, Add, Signed, Modulo, Fractional, Round (to Accumulator)"
PPC_evdotpwgssmf:   "Vector Dot Product of Words Guarded, Subtract, Signed, Modulo, Fractional (to Accumulator)"
PPC_evdotpwxgssmf:   "Vector Dot Product of Words Exchanged, Guarded, Subtract, Signed, Modulo, Fractional (to Accumulator)"
PPC_evdotpwgssmfr:   "Vector Dot Product of Words Guarded, Subtract, Signed, Modulo, Fractional, Round (to Accumulator)"
PPC_evdotpwxgssmfr:   "Vector Dot Product of Words Exchanged, Guarded, Add, Signed, Modulo, Fractional, Round (to Accumulator)"
PPC_evdotpwcssiaaw3:   "Vector Dot Product of Words, Complex, Signed, Saturate, Integer and Accumulate into Words 3 operand"
PPC_evdotpwcsmiaaw3:   "Vector Dot Product of Words, Complex, Signed, Modulo, Integer and Accumulate into Words 3 operand"
PPC_evdotpwcssfraaw3:   "Vector Dot Product of Words, Complex, Signed, Saturate, Fractional, Round and Accumulate into Words 3 operand"
PPC_evdotpwcssfaaw3:   "Vector Dot Product of Words, Complex, Signed, Saturate, Fractional and Accumulate into Words 3 operand"
PPC_evdotpwgasmfaa3:   "Vector Dot Product of Words Guarded, Add, Signed, Modulo, Fractional and Accumulate 3 operand"
PPC_evdotpwxgasmfaa3:   "Vector Dot Product of Words Exchanged, Guarded, Add, Signed, Modulo, Fractional and Accumulate 3 operand"
PPC_evdotpwgasmfraa3:   "Vector Dot Product of Words Guarded, Add, Signed, Modulo, Fractional, Round and Accumulate 3 operand"
PPC_evdotpwxgasmfraa3:   "Vector Dot Product of Words Exchanged, Guarded, Add, Signed, Modulo, Fractional, Round and Accumulate 3 operand"
PPC_evdotpwgssmfaa3:   "Vector Multiply Word Complex, Real, Guarded, Signed, Modulo, Fractional and Accumulate 3 operand"
PPC_evdotpwxgssmfaa3:   "Vector Dot Product of Words Exchanged, Guarded, Subtract, Signed, Modulo, Fractional and Accumulate 3 operand"
PPC_evdotpwgssmfraa3:   "Vector Dot Product of Words Guarded, Subtract, Signed, Modulo, Fractional, Round and Accumulate 3 operand"
PPC_evdotpwxgssmfraa3:   "Vector Dot Product of Words Exchanged, Guarded, Subtract, Signed, Modulo, Fractional, Round and Accumulate 3 operand"
PPC_evdotpwcssia:   "Vector Dot Product of Words, Complex, Signed, Saturate, Integer (to Accumulator)"
PPC_evdotpwcsmia:   "Vector Dot Product of Words, Complex, Signed, Modulo, Integer (to Accumulator)"
PPC_evdotpwcssfra:   "Vector Dot Product of Words, Complex, Signed, Saturate, Fractional, Round (to Accumulator)"
PPC_evdotpwcssfa:   "Vector Dot Product of Words, Complex, Signed, Saturate, Fractional (to Accumulator)"
PPC_evdotpwgasmfa:   "Vector Dot Product of Words Guarded, Add, Signed, Modulo, Fractional (to Accumulator)"
PPC_evdotpwxgasmfa:   "Vector Dot Product of Words Exchanged, Guarded, Add, Signed, Modulo, Fractional (to Accumulator)"
PPC_evdotpwgasmfra:   "Vector Dot Product of Words Guarded, Add, Signed, Modulo, Fractional, Round (to Accumulator)"
PPC_evdotpwxgasmfra:   "Vector Dot Product of Words Exchanged, Guarded, Add, Signed, Modulo, Fractional, Round (to Accumulator)"
PPC_evdotpwgssmfa:   "Vector Dot Product of Words Guarded, Subtract, Signed, Modulo, Fractional (to Accumulator)"
PPC_evdotpwxgssmfa:   "Vector Dot Product of Words Exchanged, Guarded, Subtract, Signed, Modulo, Fractional (to Accumulator)"
PPC_evdotpwgssmfra:   "Vector Dot Product of Words Guarded, Subtract, Signed, Modulo, Fractional, Round (to Accumulator)"
PPC_evdotpwxgssmfra:   "Vector Dot Product of Words Exchanged, Guarded, Add, Signed, Modulo, Fractional, Round (to Accumulator)"
PPC_evdotpwcssiaaw:   "Vector Dot Product of Words, Complex, Signed, Saturate, Integer and Accumulate into Words"
PPC_evdotpwcsmiaaw:   "Vector Dot Product of Words, Complex, Signed, Modulo, Integer and Accumulate into Words"
PPC_evdotpwcssfraaw:   "Vector Dot Product of Words, Complex, Signed, Saturate, Fractional, Round and Accumulate into Words"
PPC_evdotpwcssfaaw:   "Vector Dot Product of Words, Complex, Signed, Saturate, Fractional and Accumulate into Words"
PPC_evdotpwgasmfaa:   "Vector Dot Product of Words Guarded, Add, Signed, Modulo, Fractional and Accumulate"
PPC_evdotpwxgasmfaa:   "Vector Dot Product of Words Exchanged, Guarded, Add, Signed, Modulo, Fractional and Accumulate"
PPC_evdotpwgasmfraa:   "Vector Dot Product of Words Guarded, Add, Signed, Modulo, Fractional, Round and Accumulate"
PPC_evdotpwxgasmfraa:   "Vector Dot Product of Words Exchanged, Guarded, Add, Signed, Modulo, Fractional, Round and Accumulate"
PPC_evdotpwgssmfaa:   "Vector Multiply Word Complex, Real, Guarded, Signed, Modulo, Fractional and Accumulate"
PPC_evdotpwxgssmfaa:   "Vector Dot Product of Words Exchanged, Guarded, Subtract, Signed, Modulo, Fractional and Accumulate"
PPC_evdotpwgssmfraa:   "Vector Dot Product of Words Guarded, Subtract, Signed, Modulo, Fractional, Round and Accumulate"
PPC_evdotpwxgssmfraa:   "Vector Dot Product of Words Exchanged, Guarded, Subtract, Signed, Modulo, Fractional, Round and Accumulate"
PPC_evdotphihcssi:   "Vector Dot Product of High Halfwords, Complex, Signed, Saturate, Integer (to Accumulator)"
PPC_evdotplohcssi:   "Vector Dot Product of Low Halfwords, Complex, Signed, Saturate, Integer (to Accumulator)"
PPC_evdotphihcssf:   "Vector Dot Product of High Halfwords, Complex, Signed, Saturate, Fractional (to Accumulator)"
PPC_evdotplohcssf:   "Vector Dot Product of Low Halfwords, Complex, Signed, Saturate, Fractional (to Accumulator)"
PPC_evdotphihcsmi:   "Vector Dot Product of High Halfwords, Complex, Signed, Modulo, Integer (to Accumulator)"
PPC_evdotplohcsmi:   "Vector Dot Product of Low Halfwords, Complex, Signed, Modulo, Integer (to Accumulator)"
PPC_evdotphihcssfr:   "Vector Dot Product of High Halfwords, Complex, Signed, Saturate, Fractional, Round (to Accumulator)"
PPC_evdotplohcssfr:   "Vector Dot Product of Low Halfwords, Complex, Signed, Saturate, Fractional, Round (to Accumulator)"
PPC_evdotphihcssiaaw3:   "Vector Dot Product of High Halfwords, Complex, Signed, Saturate, Integer and Accumulate into Words, 3 operand"
PPC_evdotplohcssiaaw3:   "Vector Dot Product of Low Halfwords, Complex, Signed, Saturate, Integer and Accumulate into Words, 3 operand"
PPC_evdotphihcssfaaw3:   "Vector Dot Product of High Halfwords, Complex, Signed, Saturate, Fractional and Accumulate into Words, 3 operand"
PPC_evdotplohcssfaaw3:   "Vector Dot Product of Low Halfwords, Complex, Signed, Saturate, Fractional and Accumulate into Words, 3 operand"
PPC_evdotphihcsmiaaw3:   "Vector Dot Product of High Halfwords, Complex, Signed, Modulo, Integer and Accumulate into Words, 3 operand"
PPC_evdotplohcsmiaaw3:   "Vector Dot Product of Low Halfwords, Complex, Signed, Modulo, Integer and Accumulate into Words, 3 operand"
PPC_evdotphihcssfraaw3:   "Vector Dot Product of High Halfwords, Complex, Signed, Saturate, Fractional, Round and Accumulate into Words, 3 operand"
PPC_evdotplohcssfraaw3:   "Vector Dot Product of Low Halfwords, Complex, Signed, Saturate, Fractional, Round and Accumulate into Words, 3 operand"
PPC_evdotphihcssia:   "Vector Dot Product of High Halfwords, Complex, Signed, Saturate, Integer (to Accumulator)"
PPC_evdotplohcssia:   "Vector Dot Product of Low Halfwords, Complex, Signed, Saturate, Integer (to Accumulator)"
PPC_evdotphihcssfa:   "Vector Dot Product of High Halfwords, Complex, Signed, Saturate, Fractional (to Accumulator)"
PPC_evdotplohcssfa:   "Vector Dot Product of Low Halfwords, Complex, Signed, Saturate, Fractional (to Accumulator)"
PPC_evdotphihcsmia:   "Vector Dot Product of High Halfwords, Complex, Signed, Modulo, Integer (to Accumulator)"
PPC_evdotplohcsmia:   "Vector Dot Product of Low Halfwords, Complex, Signed, Modulo, Integer (to Accumulator)"
PPC_evdotphihcssfra:   "Vector Dot Product of High Halfwords, Complex, Signed, Saturate, Fractional, Round (to Accumulator)"
PPC_evdotplohcssfra:   "Vector Dot Product of Low Halfwords, Complex, Signed, Saturate, Fractional, Round (to Accumulator)"
PPC_evdotphihcssiaaw:   "Vector Dot Product of High Halfwords, Complex, Signed, Saturate, Integer and Accumulate into Words"
PPC_evdotplohcssiaaw:   "Vector Dot Product of Low Halfwords, Complex, Signed, Saturate, Integer and Accumulate into Words"
PPC_evdotphihcssfaaw:   "Vector Dot Product of High Halfwords, Complex, Signed, Saturate, Fractional and Accumulate into Words"
PPC_evdotplohcssfaaw:   "Vector Dot Product of Low Halfwords, Complex, Signed, Saturate, Fractional and Accumulate into Words"
PPC_evdotphihcsmiaaw:   "Vector Dot Product of High Halfwords, Complex, Signed, Modulo, Integer and Accumulate into Words"
PPC_evdotplohcsmiaaw:   "Vector Dot Product of Low Halfwords, Complex, Signed, Modulo, Integer and Accumulate into Words"
PPC_evdotphihcssfraaw:   "Vector Dot Product of High Halfwords, Complex, Signed, Saturate, Fractional, Round and Accumulate into Words"
PPC_evdotplohcssfraaw:   "Vector Dot Product of Low Halfwords, Complex, Signed, Saturate, Fractional, Round and Accumulate into Words"
PPC_evdotphausi:   "Vector Dot Product of Halfwords, Add, Unsigned, Saturate, Integer (to Accumulator)"
PPC_evdotphassi:   "Vector Dot Product of Halfwords, Add, Signed, Saturate, Integer (to Accumulator)"
PPC_evdotphasusi:   "Vector Dot Product of Halfwords, Add, Signed by Unsigned, Saturate, Integer (to Accumulator)"
PPC_evdotphassf:   "Vector Dot Product of Halfwords, Add, Signed, Saturate, Fractional (to Accumulator)"
PPC_evdotphsssf:   "Vector Dot Product of Halfwords, Subtract, Signed, Saturate, Fractional (to Accumulator)"
PPC_evdotphaumi:   "Vector Dot Product of Halfwords, Add, Unsigned, Modulo, Integer (to Accumulator)"
PPC_evdotphasmi:   "Vector Dot Product of Halfwords, Add, Signed, Modulo, Integer (to Accumulator)"
PPC_evdotphasumi:   "Vector Dot Product of Halfwords, Add, Signed by Unsigned, Modulo, Integer (to Accumulator)"
PPC_evdotphassfr:   "Vector Dot Product of Halfwords, Add, Signed, Saturate, Fractional, Round (to Accumulator)"
PPC_evdotphssmi:   "Vector Dot Product of Halfwords, Subtract, Signed, Modulo, Integer (to Accumulator)"
PPC_evdotphsssfr:   "Vector Dot Product of Halfwords, Subtract, Signed, Saturate, Fractional, Round (to Accumulator)"
PPC_evdotphausiaaw3:   "Vector Dot Product of Halfwords, Add, Unsigned, Saturate, Integer and Accumulate into Words, 3 operand"
PPC_evdotphassiaaw3:   "Vector Dot Product of Halfwords, Add, Signed, Saturate, Integer and Accumulate into Words, 3 operand"
PPC_evdotphasusiaaw3:   "Vector Dot Product of Halfwords, Add, Signed by Unsigned, Saturate, Integer and Accumulate into Words, 3 operand"
PPC_evdotphassfaaw3:   "Vector Dot Product of Halfwords, Add, Signed, Saturate, Fractional and Accumulate into Words, 3 operand"
PPC_evdotphsssiaaw3:   "Vector Dot Product of Halfwords, Subtract, Signed, Saturate, Integer and Accumulate into Words, 3 operand"
PPC_evdotphsssfaaw3:   "Vector Dot Product of Halfwords, Subtract, Signed, Saturate, Fractional and Accumulate into Words, 3 operand"
PPC_evdotphaumiaaw3:   "Vector Dot Product of Halfwords, Add, Unsigned, Modulo, Integer and Accumulate into Words, 3 operand"
PPC_evdotphasmiaaw3:   "Vector Dot Product of Halfwords, Add, Signed, Modulo, Integer and Accumulate into Words, 3 operand"
PPC_evdotphasumiaaw3:   "Vector Dot Product of Halfwords, Add, Signed by Unsigned, Modulo, Integer and Accumulate into Words, 3 operand"
PPC_evdotphassfraaw3:   "Vector Dot Product of Halfwords, Add, Signed, Saturate, Fractional, Round and Accumulate into Words, 3 operand"
PPC_evdotphssmiaaw3:   "Vector Dot Product of Halfwords, Subtract, Signed, Modulo, Integer and Accumulate into Words, 3 operand"
PPC_evdotphsssfraaw3:   "Vector Dot Product of Halfwords, Subtract, Signed, Saturate, Fractional, Round and Accumulate into Words, 3 operand"
PPC_evdotphausia:   "Vector Dot Product of Halfwords, Add, Unsigned, Saturate, Integer (to Accumulator)"
PPC_evdotphassia:   "Vector Dot Product of Halfwords, Add, Signed, Saturate, Integer (to Accumulator)"
PPC_evdotphasusia:   "Vector Dot Product of Halfwords, Add, Signed by Unsigned, Saturate, Integer (to Accumulator)"
PPC_evdotphassfa:   "Vector Dot Product of Halfwords, Add, Signed, Saturate, Fractional (to Accumulator)"
PPC_evdotphsssfa:   "Vector Dot Product of Halfwords, Subtract, Signed, Saturate, Fractional (to Accumulator)"
PPC_evdotphaumia:   "Vector Dot Product of Halfwords, Add, Unsigned, Modulo, Integer (to Accumulator)"
PPC_evdotphasmia:   "Vector Dot Product of Halfwords, Add, Signed, Modulo, Integer (to Accumulator)"
PPC_evdotphasumia:   "Vector Dot Product of Halfwords, Add, Signed by Unsigned, Modulo, Integer (to Accumulator)"
PPC_evdotphassfra:   "Vector Dot Product of Halfwords, Add, Signed, Saturate, Fractional, Round (to Accumulator)"
PPC_evdotphssmia:   "Vector Dot Product of Halfwords, Subtract, Signed, Modulo, Integer (to Accumulator)"
PPC_evdotphsssfra:   "Vector Dot Product of Halfwords, Subtract, Signed, Saturate, Fractional, Round (to Accumulator)"
PPC_evdotphausiaaw:   "Vector Dot Product of Halfwords, Add, Unsigned, Saturate, Integer and Accumulate into Words"
PPC_evdotphassiaaw:   "Vector Dot Product of Halfwords, Add, Signed, Saturate, Integer and Accumulate into Words"
PPC_evdotphasusiaaw:   "Vector Dot Product of Halfwords, Add, Signed by Unsigned, Saturate, Integer and Accumulate into Words"
PPC_evdotphassfaaw:   "Vector Dot Product of Halfwords, Add, Signed, Saturate, Fractional and Accumulate into Words"
PPC_evdotphsssiaaw:   "Vector Dot Product of Halfwords, Subtract, Signed, Saturate, Integer and Accumulate into Words"
PPC_evdotphsssfaaw:   "Vector Dot Product of Halfwords, Subtract, Signed, Saturate, Fractional and Accumulate into Words"
PPC_evdotphaumiaaw:   "Vector Dot Product of Halfwords, Add, Unsigned, Modulo, Integer and Accumulate into Words"
PPC_evdotphasmiaaw:   "Vector Dot Product of Halfwords, Add, Signed, Modulo, Integer and Accumulate into Words"
PPC_evdotphasumiaaw:   "Vector Dot Product of Halfwords, Add, Signed by Unsigned, Modulo, Integer and Accumulate into Words"
PPC_evdotphassfraaw:   "Vector Dot Product of Halfwords, Add, Signed, Saturate, Fractional, Round and Accumulate into Words"
PPC_evdotphssmiaaw:   "Vector Dot Product of Halfwords, Subtract, Signed, Modulo, Integer and Accumulate into Words"
PPC_evdotphsssfraaw:   "Vector Dot Product of Halfwords, Subtract, Signed, Saturate, Fractional, Round and Accumulate into Words"
PPC_evdotp4hgaumi:   "Vector Dot Product of Four Halfwords, Guarded, Add, Unsigned, Modulo, Integer (to Accumulator)"
PPC_evdotp4hgasmi:   "Vector Dot Product of Four Halfwords, Guarded, Add, Signed, Modulo, Integer (to Accumulator)"
PPC_evdotp4hgasumi:   "Vector Dot Product of Four Halfwords, Guarded, Add, Signed by Unsigned, Modulo, Integer (to Accumulator)"
PPC_evdotp4hgasmf:   "Vector Dot Product of Four Halfwords, Guarded, Add, Signed, Modulo, Fractional (to Accumulator)"
PPC_evdotp4hgssmi:   "Vector Dot Product of Four Halfwords, Guarded, Subtract, Signed, Modulo, Integer (to Accumulator)"
PPC_evdotp4hgssmf:   "Vector Dot Product of Four Halfwords, Guarded, Subtract, Signed, Modulo, Fractional (to Accumulator)"
PPC_evdotp4hxgasmi:   "Vector Dot Product of Four Halfwords Exchanged, Guarded, Add, Signed, Modulo, Integer (to Accumulator)"
PPC_evdotp4hxgasmf:   "Vector Dot Product of Four Halfwords Exchanged, Guarded, Add, Signed, Modulo, Fractional (to Accumulator)"
PPC_evdotpbaumi:   "Vector Dot Product of Bytes, Add, Unsigned, Modulo, Integer (to Accumulator)"
PPC_evdotpbasmi:   "Vector Dot Product of Bytes, Add, Signed, Modulo, Integer (to Accumulator)"
PPC_evdotpbasumi:   "Vector Dot Product of Bytes, Add, Signed by Unsigned, Modulo, Integer (to Accumulator)"
PPC_evdotp4hxgssmi:   "Vector Dot Product of Four Halfwords Exchanged, Guarded, Subtract, Signed, Modulo, Integer (to Accumulator)"
PPC_evdotp4hxgssmf:   "Vector Dot Product of Four Halfwords Exchanged, Guarded, Subtract, Signed, Modulo, Fractional (to Accumulator)"
PPC_evdotp4hgaumiaa3:   "Vector Dot Product of Four Halfwords, Guarded, Add, Unsigned, Modulo, Integer and Accumulate, 3 operand"
PPC_evdotp4hgasmiaa3:   "Vector Dot Product of Four Halfwords, Guarded, Add, Signed, Modulo, Integer and Accumulate, 3 operand"
PPC_evdotp4hgasumiaa3:   "Vector Dot Product of Four Halfwords, Guarded, Add, Signed by Unsigned, Modulo, Integer and Accumulate, 3 operand"
PPC_evdotp4hgasmfaa3:   "Vector Dot Product of Four Halfwords, Guarded, Add, Signed, Modulo, Fractional and Accumulate, 3 operand"
PPC_evdotp4hgssmiaa3:   "Vector Dot Product of Four Halfwords, Guarded, Subtract, Signed, Modulo, Integer and Accumulate 3 operand"
PPC_evdotp4hgssmfaa3:   "Vector Dot Product of Four Halfwords, Guarded, Subtract, Signed, Modulo, Fractional and Accumulate 3 operand"
PPC_evdotp4hxgasmiaa3:   "Vector Dot Product of Four Halfwords Exchanged, Guarded, Add, Signed, Modulo, Integer and Accumulate 3 operand"
PPC_evdotp4hxgasmfaa3:   "Vector Dot Product of Four Halfwords Exchanged, Guarded, Add, Signed, Modulo, Fractional and Accumulate 3 operand"
PPC_evdotpbaumiaaw3:   "Vector Dot Product of Bytes, Add, Unsigned, Modulo, Integer and Accumulate into Words, 3 operand"
PPC_evdotpbasmiaaw3:   "Vector Dot Product of Bytes, Add, Signed, Modulo, Integer and Accumulate into Words, 3 operand"
PPC_evdotpbasumiaaw3:   "Vector Dot Product of Bytes, Add, Signed by Unsigned, Modulo, Integer and Accumulate into Words, 3 operand"
PPC_evdotp4hxgssmiaa3:   "Vector Dot Product of Four Halfwords Exchanged, Guarded, Subtract, Signed, Modulo, Integer and Accumulate 3 operand"
PPC_evdotp4hxgssmfaa3:   "Vector Dot Product of Four Halfwords Exchanged, Guarded, Subtract, Signed, Modulo, Fractional and Accumulate 3 operand"
PPC_evdotp4hgaumia:   "Vector Dot Product of Four Halfwords, Guarded, Add, Unsigned, Modulo, Integer (to Accumulator)"
PPC_evdotp4hgasmia:   "Vector Dot Product of Four Halfwords, Guarded, Add, Signed, Modulo, Integer (to Accumulator)"
PPC_evdotp4hgasumia:   "Vector Dot Product of Four Halfwords, Guarded, Add, Signed by Unsigned, Modulo, Integer (to Accumulator)"
PPC_evdotp4hgasmfa:   "Vector Dot Product of Four Halfwords, Guarded, Add, Signed, Modulo, Fractional (to Accumulator)"
PPC_evdotp4hgssmia:   "Vector Dot Product of Four Halfwords, Guarded, Subtract, Signed, Modulo, Integer (to Accumulator)"
PPC_evdotp4hgssmfa:   "Vector Dot Product of Four Halfwords, Guarded, Subtract, Signed, Modulo, Fractional (to Accumulator)"
PPC_evdotp4hxgasmia:   "Vector Dot Product of Four Halfwords Exchanged, Guarded, Add, Signed, Modulo, Integer (to Accumulator)"
PPC_evdotp4hxgasmfa:   "Vector Dot Product of Four Halfwords Exchanged, Guarded, Add, Signed, Modulo, Fractional (to Accumulator)"
PPC_evdotpbaumia:   "Vector Dot Product of Bytes, Add, Unsigned, Modulo, Integer (to Accumulator)"
PPC_evdotpbasmia:   "Vector Dot Product of Bytes, Add, Signed, Modulo, Integer (to Accumulator)"
PPC_evdotpbasumia:   "Vector Dot Product of Bytes, Add, Signed by Unsigned, Modulo, Integer (to Accumulator)"
PPC_evdotp4hxgssmia:   "Vector Dot Product of Four Halfwords Exchanged, Guarded, Subtract, Signed, Modulo, Integer (to Accumulator)"
PPC_evdotp4hxgssmfa:   "Vector Dot Product of Four Halfwords Exchanged, Guarded, Subtract, Signed, Modulo, Fractional (to Accumulator)"
PPC_evdotp4hgaumiaa:   "Vector Dot Product of Four Halfwords, Guarded, Add, Unsigned, Modulo, Integer and Accumulate"
PPC_evdotp4hgasmiaa:   "Vector Dot Product of Four Halfwords, Guarded, Add, Signed, Modulo, Integer and Accumulate"
PPC_evdotp4hgasumiaa:   "Vector Dot Product of Four Halfwords, Guarded, Add, Signed by Unsigned, Modulo, Integer and Accumulate"
PPC_evdotp4hgasmfaa:   "Vector Dot Product of Four Halfwords, Guarded, Add, Signed, Modulo, Fractional and Accumulate"
PPC_evdotp4hgssmiaa:   "Vector Dot Product of Four Halfwords, Guarded, Subtract, Signed, Modulo, Integer and Accumulate"
PPC_evdotp4hgssmfaa:   "Vector Dot Product of Four Halfwords, Guarded, Subtract, Signed, Modulo, Fractional and Accumulate"
PPC_evdotp4hxgasmiaa:   "Vector Dot Product of Four Halfwords Exchanged, Guarded, Add, Signed, Modulo, Integer and Accumulate"
PPC_evdotp4hxgasmfaa:   "Vector Dot Product of Four Halfwords Exchanged, Guarded, Add, Signed, Modulo, Fractional and Accumulate"
PPC_evdotpbaumiaaw:   "Vector Dot Product of Bytes, Add, Unsigned, Modulo, Integer and Accumulate into Words"
PPC_evdotpbasmiaaw:   "Vector Dot Product of Bytes, Add, Signed, Modulo, Integer and Accumulate into Words"
PPC_evdotpbasumiaaw:   "Vector Dot Product of Bytes, Add, Signed by Unsigned, Modulo, Integer and Accumulate into Words"
PPC_evdotp4hxgssmiaa:   "Vector Dot Product of Four Halfwords Exchanged, Guarded, Subtract, Signed, Modulo, Integer and Accumulate"
PPC_evdotp4hxgssmfaa:   "Vector Dot Product of Four Halfwords Exchanged, Guarded, Subtract, Signed, Modulo, Fractional and Accumulate"
PPC_evdotpwausi:   "Vector Dot Product of Words, Add, Unsigned, Saturate, integer (to Accumulator)"
PPC_evdotpwassi:   "Vector Dot Product of Words, Add, Signed, Saturate, integer (to Accumulator)"
PPC_evdotpwasusi:   "Vector Dot Product of Words, Add, Signed by Unsigned, Saturate, integer (to Accumulator)"
PPC_evdotpwaumi:   "Vector Dot Product of Words, Add, Unsigned, Modulo, integer (to Accumulator)"
PPC_evdotpwasmi:   "Vector Dot Product of Words, Add, Signed, Modulo, integer (to Accumulator)"
PPC_evdotpwasumi:   "Vector Dot Product of Words, Add, Signed by Unsigned, Modulo, integer (to Accumulator)"
PPC_evdotpwssmi:   "Vector Dot Product of Words, Subtract, Signed, Modulo, integer (to Accumulator)"
PPC_evdotpwausiaa3:   "Vector Dot Product of Words, Add, Unsigned, Saturate, Integer and Accumulate, 3 operand"
PPC_evdotpwassiaa3:   "Vector Dot Product of Words, Add, Signed, Saturate, Integer and Accumulate, 3 operand"
PPC_evdotpwasusiaa3:   "Vector Dot Product of Words, Add, Signed by Unsigned, Saturate, Integer and Accumulate, 3 operand"
PPC_evdotpwsssiaa3:   "Vector Dot Product of Words, Subtract, Signed, Saturate, Integer and Accumulate, 3 operand"
PPC_evdotpwaumiaa3:   "Vector Dot Product of Words, Add, Unsigned, Modulo, Integer and Accumulate, 3 operand"
PPC_evdotpwasmiaa3:   "Vector Dot Product of Words, Add, Signed, Modulo, Integer and Accumulate, 3 operand"
PPC_evdotpwasumiaa3:   "Vector Dot Product of Words, Add, Signed by Unsigned, Modulo, Integer and Accumulate, 3 operand"
PPC_evdotpwssmiaa3:   "Vector Dot Product of Words, Subtract, Signed, Modulo, Integer and Accumulate, 3 operand"
PPC_evdotpwausia:   "Vector Dot Product of Words, Add, Unsigned, Saturate, integer (to Accumulator)"
PPC_evdotpwassia:   "Vector Dot Product of Words, Add, Signed, Saturate, integer (to Accumulator)"
PPC_evdotpwasusia:   "Vector Dot Product of Words, Add, Signed by Unsigned, Saturate, integer (to Accumulator)"
PPC_evdotpwaumia:   "Vector Dot Product of Words, Add, Unsigned, Modulo, integer (to Accumulator)"
PPC_evdotpwasmia:   "Vector Dot Product of Words, Add, Signed, Modulo, integer (to Accumulator)"
PPC_evdotpwasumia:   "Vector Dot Product of Words, Add, Signed by Unsigned, Modulo, integer (to Accumulator)"
PPC_evdotpwssmia:   "Vector Dot Product of Words, Subtract, Signed, Modulo, integer (to Accumulator)"
PPC_evdotpwausiaa:   "Vector Dot Product of Words, Add, Unsigned, Saturate, Integer and Accumulate"
PPC_evdotpwassiaa:   "Vector Dot Product of Words, Add, Signed, Saturate, Integer and Accumulate"
PPC_evdotpwasusiaa:   "Vector Dot Product of Words, Add, Signed by Unsigned, Saturate, Integer and Accumulate"
PPC_evdotpwsssiaa:   "Vector Dot Product of Words, Subtract, Signed, Saturate, Integer and Accumulate"
PPC_evdotpwaumiaa:   "Vector Dot Product of Words, Add, Unsigned, Modulo, Integer and Accumulate"
PPC_evdotpwasmiaa:   "Vector Dot Product of Words, Add, Signed, Modulo, Integer and Accumulate"
PPC_evdotpwasumiaa:   "Vector Dot Product of Words, Add, Signed by Unsigned, Modulo, Integer and Accumulate"
PPC_evdotpwssmiaa:   "Vector Dot Product of Words, Subtract, Signed, Modulo, Integer and Accumulate"
PPC_evaddih:   "Vector Add Immediate Halfword"
PPC_evaddib:   "Vector Add Immediate Byte"
PPC_evsubifh:   "Vector Subtract Immediate from Halfword"
PPC_evsubifb:   "Vector Subtract Immediate from Byte"
PPC_evabsb:   "Vector Absolute Value Byte"
PPC_evabsh:   "Vector Absolute Value Halfword"
PPC_evabsd:   "Vector Absolute Value Doubleword"
PPC_evabss:   "Vector Absolute Value (Word) and Saturate"
PPC_evabsbs:   "Vector Absolute Value Byte and Saturate"
PPC_evabshs:   "Vector Absolute Value Halfword and Saturate"
PPC_evabsds:   "Vector Absolute Value Doubleword and Saturate"
PPC_evnegwo:   "Vector Negate Word Odd"
PPC_evnegb:   "Vector Negate Byte"
PPC_evnegbo:   "Vector Negate Byte Odd"
PPC_evnegh:   "Vector Negate Halfword"
PPC_evnegho:   "Vector Negate Halfwords Odd"
PPC_evnegd:   "Vector Negate Doubleword"
PPC_evnegs:   "Vector Negate (Word) and Saturate"
PPC_evnegwos:   "Vector Negate Word Odd and Saturate"
PPC_evnegbs:   "Vector Negate Byte and Saturate"
PPC_evnegbos:   "Vector Negate Byte Odd and Saturate"
PPC_evneghs:   "Vector Negate Halfword and Saturate"
PPC_evneghos:   "Vector Negate Halfwords Odd and Saturate"
PPC_evnegds:   "Vector Negate Doubleword and Saturate"
PPC_evextzb:   "Vector Extend Zero Byte"
PPC_evextsbh:   "Vector Extend Sign of Bytes (Odd) to Halfwords"
PPC_evextsw:   "Vector Extend Sign Word"
PPC_evrndhb:   "Vector Round Halfword to Byte"
PPC_evrnddw:   "Vector Round Doubleword to Word"
PPC_evrndwhus:   "Vector Round Word to Halfword Unsigned and Saturate"
PPC_evrndwhss:   "Vector Round Word to Halfword Signed and Saturate"
PPC_evrndhbus:   "Vector Round Halfword to Byte Unsigned and Saturate"
PPC_evrndhbss:   "Vector Round Halfword to Byte Signed and Saturate"
PPC_evrnddwus:   "Vector Round Doubleword to Word Unsigned and Saturate"
PPC_evrnddwss:   "Vector Round Doubleword to Word Signed and Saturate"
PPC_evrndwnh:   "Vector Round Word to Nearest Even Halfword"
PPC_evrndhnb:   "Vector Round Halfword to Nearest Even Byte"
PPC_evrnddnw:   "Vector Round Doubleword to Nearest Even Word"
PPC_evrndwnhus:   "Vector Round Word to Nearest Even Halfword Unsigned and Saturate"
PPC_evrndwnhss:   "Vector Round Word to Nearest Even Halfword Signed and Saturate"
PPC_evrndhnbus:   "Vector Round Halfword to Nearest Byte Unsigned and Saturate"
PPC_evrndhnbss:   "Vector Round Halfword to Nearest Even Byte Signed and Saturate"
PPC_evrnddnwus:   "Vector Round Doubleword to Nearest Even Word Unsigned and Saturate"
PPC_evrnddnwss:   "Vector Round Doubleword to Nearest Even Word Signed and Saturate"
PPC_evcntlzh:   "Vector Count Leading Zeros Halfword"
PPC_evcntlsh:   "Vector Count Leading Signed Bits Halfword"
PPC_evpopcntb:   "Vector Population Count Byte"
PPC_circinc:   "Circular Increment"
PPC_evunpkhibui:   "Vector Unpack High Bytes as Unsigned Integers"
PPC_evunpkhibsi:   "Vector Unpack High Bytes as Signed Integers"
PPC_evunpkhihui:   "Vector Extract High Halfwords as Unsigned Integers"
PPC_evunpkhihsi:   "Vector Extract High Halfwords as Signed Integers"
PPC_evunpklobui:   "Vector Unpack Low Bytes Unsigned Integers"
PPC_evunpklobsi:   "Vector Unpack Low Bytes as Signed Integers"
PPC_evunpklohui:   "Vector Unpack Low Halfwords as Unsigned Integers"
PPC_evunpklohsi:   "Vector Unpack Low Halfwords as Signed Integers"
PPC_evunpklohf:   "Vector Unpack Low Halfwords as Fractional"
PPC_evunpkhihf:   "Vector Unpack High Halfwords as Fractional"
PPC_evunpklowgsf:   "Vector Unpack Low Word to Guarded Signed Fraction"
PPC_evunpkhiwgsf:   "Vector Unpack High Word to Guarded Signed Fraction"
PPC_evsatsduw:   "Vector Saturate Signed Doubleword to Unsigned Word Range"
PPC_evsatsdsw:   "Vector Saturate Signed Doubleword to Signed Word Range"
PPC_evsatshub:   "Vector Saturate Signed Halfwords to Unsigned Byte Range"
PPC_evsatshsb:   "Vector Saturate Signed Halfwords to Signed Byte Range"
PPC_evsatuwuh:   "Vector Saturate Unsigned Words to Unsigned Halfword Range"
PPC_evsatswsh:   "Vector Saturate Signed Words to Signed Halfword Range"
PPC_evsatswuh:   "Vector Pack Signed Words to Unsigned Halfword Range"
PPC_evsatuhub:   "Vector Saturate Unsigned Halfwords to Unsigned Byte Range"
PPC_evsatuduw:   "Vector Saturate Unsigned Doubleword to Unsigned Word Range"
PPC_evsatuwsw:   "Vector Saturate Unsigned Words to Signed Word Range"
PPC_evsatshuh:   "Vector Saturate Signed Halfwords to Unsigned Halfword Range"
PPC_evsatuhsh:   "Vector Saturate Unsigned Halfwords to Signed Halfword Range"
PPC_evsatswuw:   "Vector Pack Signed Words to Unsigned Word Range"
PPC_evsatswgsdf:   "Vector Saturate Signed Word Guarded to Signed Doubleword Fractional"
PPC_evsatsbub:   "Vector Saturate Signed Bytes to Unsigned Byte Range"
PPC_evsatubsb:   "Vector Saturate Unsigned Bytes to Signed Byte Range"
PPC_evmaxhpuw:   "Vector Maximum of Halfword Pairs Unsigned to Word"
PPC_evmaxhpsw:   "Vector Maximum of Halfword Pairs Signed to Word"
PPC_evmaxbpuh:   "Vector Maximum of Byte Pairs Unsigned to Halfword"
PPC_evmaxbpsh:   "Vector Maximum of Byte Pairs Signed to Halfword"
PPC_evmaxwpud:   "Vector Maximum of Word Pair Unsigned to Doubleword"
PPC_evmaxwpsd:   "Vector Maximum of Word Pair Signed to Doubleword"
PPC_evminhpuw:   "Vector Minimum of Halfword Pairs Unsigned to Word"
PPC_evminhpsw:   "Vector Minimum of Halfword Pairs Signed to Word"
PPC_evminbpuh:   "Vector Minimum of Byte Pairs Unsigned to Halfword"
PPC_evminbpsh:   "Vector Minimum of Byte Pairs Signed to Halfword"
PPC_evminwpud:   "Vector Minimum of Word Pair Unsigned to Doubleword"
PPC_evminwpsd:   "Vector Minimum of Word Pair Signed to Doubleword"
PPC_evmaxmagws:   "Vector Maximum Magnitude Word Signed"
PPC_evsl:   "Vector Shift Left"
PPC_evsli:   "Vector Shift Left Immediate"
PPC_evsplatie:   "Vector Splat Immediate Even (to Accumulator)"
PPC_evsplatib:   "Vector Splat Immediate Byte (to Accumulator)"
PPC_evsplatibe:   "Vector Splat Immediate Byte Even (to Accumulator)"
PPC_evsplatih:   "Vector Splat Immediate Halfword (to Accumulator)"
PPC_evsplatihe:   "Vector Splat Immediate Halfword Even (to Accumulator)"
PPC_evsplatid:   "Vector Splat Immediate Doubleword (to Accumulator)"
PPC_evsplatia:   "Vector Splat Immediate (to Accumulator)"
PPC_evsplatiea:   "Vector Splat Immediate Even (to Accumulator)"
PPC_evsplatiba:   "Vector Splat Immediate Byte (to Accumulator)"
PPC_evsplatibea:   "Vector Splat Immediate Byte Even (to Accumulator)"
PPC_evsplatiha:   "Vector Splat Immediate Halfword (to Accumulator)"
PPC_evsplatihea:   "Vector Splat Immediate Halfword Even (to Accumulator)"
PPC_evsplatida:   "Vector Splat Immediate Doubleword (to Accumulator)"
PPC_evsplatfio:   "Vector Splat Fractional Immediate Odd (to Accumulator)"
PPC_evsplatfib:   "Vector Splat Fractional Immediate Byte (to Accumulator)"
PPC_evsplatfibo:   "Vector Splat Fractional Immediate Byte Odd (to Accumulator)"
PPC_evsplatfih:   "Vector Splat Fractional Immediate Halfword (to Accumulator)"
PPC_evsplatfiho:   "Vector Splat Fractional Immediate Halfword Odd (to Accumulator)"
PPC_evsplatfid:   "Vector Splat Fractional Immediate Doubleword (to Accumulator)"
PPC_evsplatfia:   "Vector Splat Fractional Immediate (to Accumulator)"
PPC_evsplatfioa:   "Vector Splat Fractional Immediate Odd (to Accumulator)"
PPC_evsplatfiba:   "Vector Splat Fractional Immediate Byte (to Accumulator)"
PPC_evsplatfiboa:   "Vector Splat Fractional Immediate Byte Odd (to Accumulator)"
PPC_evsplatfiha:   "Vector Splat Fractional Immediate Halfword (to Accumulator)"
PPC_evsplatfihoa:   "Vector Splat Fractional Immediate Halfword Odd (to Accumulator)"
PPC_evsplatfida:   "Vector Splat Fractional Immediate Doubleword (to Accumulator)"
PPC_evcmpgtdu:   "Vector Compare Greater Than Doubleword Unsigned"
PPC_evcmpgtds:   "Vector Compare Greater Than Doubleword Signed"
PPC_evcmpltdu:   "Vector Compare Less Than Doubleword Unsigned"
PPC_evcmpltds:   "Vector Compare Less Than Doubleword Signed"
PPC_evcmpeqd:   "Vector Compare Equal Doubleword"
PPC_evswapbhilo:   "Vector Swap Bytes High/Low"
PPC_evswapblohi:   "Vector Swap Bytes Low/High"
PPC_evswaphhilo:   "Vector Swap Halfwords High/Low"
PPC_evswaphlohi:   "Vector Swap Halfwords Low/High"
PPC_evswaphe:   "Vector Swap Halfwords Even"
PPC_evswaphhi:   "Vector Swap Halfwords High"
PPC_evswaphlo:   "Vector Swap Halfwords Low"
PPC_evswapho:   "Vector Swap Halfwords Odd"
PPC_evinsb:   "Vector Insert Byte"
PPC_evxtrb:   "Vector Extract Byte"
PPC_evsplath:   "Vector Splat Halfword"
PPC_evsplatb:   "Vector Splat Byte"
PPC_evinsh:   "Vector Insert Halfword"
PPC_evclrbe:   "Vector Clear Bytes Even"
PPC_evclrbo:   "Vector Clear Bytes Odd"
PPC_evxtrh:   "Vector Extract Halfword"
PPC_evclrh:   "Vector Clear Halfwords"
PPC_evselbitm0:   "Vector Select Bit if Mask is 0"
PPC_evselbitm1:   "Vector Select Bit if Mask is 1"
PPC_evselbit:   "Vector Select Bit"
PPC_evperm:   "Vector Permute"
PPC_evperm2:   "Vector Permute (form 2)"
PPC_evperm3:   "Vector Permute (form 3)"
PPC_evxtrd:   "Vector Extract Doubleword"
PPC_evsrbu:   "Vector Shift Right Byte Unsigned"
PPC_evsrbs:   "Vector Shift Right Byte Signed"
PPC_evsrbiu:   "Vector Shift Right Byte Immediate Unsigned"
PPC_evsrbis:   "Vector Shift Right Byte Immediate Signed"
PPC_evslb:   "Vector Shift Left Byte"
PPC_evrlb:   "Vector Rotate Left Byte"
PPC_evslbi:   "Vector Shift Left Byte Immediate"
PPC_evrlbi:   "Vector Rotate Left Byte Immediate"
PPC_evsrhu:   "Vector Shift Right Halfword Unsigned"
PPC_evsrhs:   "Vector Shift Right Halfword Signed"
PPC_evsrhiu:   "Vector Shift Right Halfword Immediate Unsigned"
PPC_evsrhis:   "Vector Shift Right Halfword Immediate Signed"
PPC_evslh:   "Vector Shift Left Halfword"
PPC_evrlh:   "Vector Rotate Left Halfword"
PPC_evslhi:   "Vector Shift Left Halfword Immediate"
PPC_evrlhi:   "Vector Rotate Left Halfword Immediate"
PPC_evsru:   "Vector Shift Right Unsigned"
PPC_evsrs:   "Vector Shift Right Signed"
PPC_evsriu:   "Vector Shift Right Immediate Unsigned"
PPC_evsris:   "Vector Shift Right Immediate Signed"
PPC_evlvsl:   "Load Vector for Shift Left"
PPC_evlvsr:   "Load Vector for Shift Right"
PPC_evsroiu:   "Vector Shift Right by Octet Immediate Unsigned"
PPC_evsloi:   "Vector Shift Left by Octet Immediate"
PPC_evsrois:   "Vector Shift Right by Octet Immediate Signed"
PPC_evldbx:   "Vector Load Double into Eight Bytes [with Modify] Indexed"
PPC_evldb:   "Vector Load Double into Eight Bytes [with Update]"
PPC_evlhhsplathx:   "Vector Load Halfword into Halfword and Splat Halfwords [with Modify] Indexed"
PPC_evlhhsplath:   "Vector Load Halfword into Halfword and Splat Halfwords [with Update]"
PPC_evlwbsplatwx:   "Vector Load Word as Bytes and Splat Words [with Modify] Indexed"
PPC_evlwbsplatw:   "Vector Load Word as Bytes and Splat Words [with Update]"
PPC_evlwhsplatwx:   "Vector Load Word as Halfwords and Splat Words [with Modify] Indexed"
PPC_evlwhsplatw:   "Vector Load Word as Halfwords and Splat Words [with Update]"
PPC_evlbbsplatbx:   "Vector Load Byte into Byte and Splat Bytes [with Modify] Indexed"
PPC_evlbbsplatb:   "Vector Load Byte into Byte and Splat Bytes [with Update]"
PPC_evstdbx:   "Vector Store Double of Eight Bytes [with Modify] Indexed"
PPC_evstdb:   "Vector Store Double of Eight Bytes [with Update]"
PPC_evlwbex:   "Vector Load Word into Four Bytes Even [with Modify] Indexed"
PPC_evlwbe:   "Vector Load Word into Four Bytes Even [with Update]"
PPC_evlwboux:   "Vector Load Word into Four Bytes Odd Unsigned [with Modify] Indexed"
PPC_evlwbou:   "Vector Load Word into Four Bytes Odd Unsigned [with Update]"
PPC_evlwbosx:   "Vector Load Word into Two Halfwords Odd Signed [with Modify] Indexed"
PPC_evlwbos:   "Vector Load Word into Four Bytes Odd Signed [with Update]"
PPC_evstwbex:   "Vector Store Word of Four Bytes from Even [with Modify] Indexed"
PPC_evstwbe:   "Vector Store Word of Four Bytes from Even [with Update]"
PPC_evstwbox:   "Vector Store Word of Four Bytes from Odd [with Modify] Indexed"
PPC_evstwbo:   "Vector Store Word of Four Bytes from Odd [with Update]"
PPC_evstwbx:   "Vector Store Word of Four Bytes [with Modify] Indexed"
PPC_evstwb:   "Vector Store Word of Four Bytes [with Update]"
PPC_evsthbx:   "Vector Store Halfword of Two Bytes [with Modify] Indexed"
PPC_evsthb:   "Vector Store Halfword of Two Bytes [with Update]"
PPC_evlddmx:   "Vector Load Double Word into Double Word [with Modify] Indexed"
PPC_evlddu:   "Vector Load Double Word into Double Word [with Update]"
PPC_evldwmx:   "Vector Load Double into Two Words [with Modify] Indexed"
PPC_evldwu:   "Vector Load Double into Two Words [with Update]"
PPC_evldhmx:   "Vector Load Double into Four Halfwords [with Modify] Indexed"
PPC_evldhu:   "Vector Load Double into Four Halfwords [with Update]"
PPC_evldbmx:   "Vector Load Double into Eight Bytes [with Modify] Indexed"
PPC_evldbu:   "Vector Load Double into Eight Bytes [with Update]"
PPC_evlhhesplatmx:   "Vector Load Halfword into Halfwords Even and Splat [with Modify] Indexed"
PPC_evlhhesplatu:   "Vector Load Halfword into Halfwords Even and Splat [with Update]"
PPC_evlhhsplathmx:   "Vector Load Halfword into Halfword and Splat Halfwords [with Modify] Indexed"
PPC_evlhhsplathu:   "Vector Load Halfword into Halfword and Splat Halfwords [with Update]"
PPC_evlhhousplatmx:   "Vector Load Halfword into Halfword Odd Unsigned and Splat [with Modify] Indexed"
PPC_evlhhousplatu:   "Vector Load Halfword into Halfword Odd Unsigned and Splat [with Update]"
PPC_evlhhossplatmx:   "Vector Load Halfword into Halfword Odd Signed and Splat [with Modify] Indexed"
PPC_evlhhossplatu:   "Vector Load Halfword into Halfword Odd Signed and Splat [with Update]"
PPC_evlwhemx:   "Vector Load Word into Two Halfwords Even [with Modify] Indexed"
PPC_evlwheu:   "Vector Load Word into Two Halfwords Even [with Update]"
PPC_evlwbsplatwmx:   "Vector Load Word as Bytes and Splat Words [with Modify] Indexed"
PPC_evlwbsplatwu:   "Vector Load Word as Bytes and Splat Words [with Update]"
PPC_evlwhoumx:   "Vector Load Word into Two Halfwords Odd Unsigned [with Modify] Indexed (zero-extended)"
PPC_evlwhouu:   "Vector Load Word into Two Halfwords Odd Unsigned (zero-extended) [with Update]"
PPC_evlwhosmx:   "Vector Load Word into Two Halfwords Odd Signed [with Modify] Indexed (with sign extension)"
PPC_evlwhosu:   "Vector Load Word into Two Halfwords Odd Signed (with sign extension) [with Update]"
PPC_evlwwsplatmx:   "Vector Load Word into Word and Splat [with Modify] Indexed"
PPC_evlwwsplatu:   "Vector Load Word into Word and Splat [with Update]"
PPC_evlwhsplatwmx:   "Vector Load Word as Halfwords and Splat Words [with Modify] Indexed"
PPC_evlwhsplatwu:   "Vector Load Word as Halfwords and Splat Words [with Update]"
PPC_evlwhsplatmx:   "Vector Load Word into Two Halfwords and Splat [with Modify] Indexed"
PPC_evlwhsplatu:   "Vector Load Word into Two Halfwords and Splat [with Update]"
PPC_evlbbsplatbmx:   "Vector Load Byte into Byte and Splat Bytes [with Modify] Indexed"
PPC_evlbbsplatbu:   "Vector Load Byte into Byte and Splat Bytes [with Update]"
PPC_evstddmx:   "Vector Store Double of Double [with Modify] Indexed"
PPC_evstddu:   "Vector Store Double of Double [with Update]"
PPC_evstdwmx:   "Vector Store Double of Two Words [with Modify] Indexed"
PPC_evstdwu:   "Vector Store Double of Two Words [with Update]"
PPC_evstdhmx:   "Vector Store Double of Four Halfwords [with Modify] Indexed"
PPC_evstdhu:   "Vector Store Double of Four Halfwords [with Update]"
PPC_evstdbmx:   "Vector Store Double of Eight Bytes [with Modify] Indexed"
PPC_evstdbu:   "Vector Store Double of Eight Bytes [with Update]"
PPC_evlwbemx:   "Vector Load Word into Four Bytes Even [with Modify] Indexed"
PPC_evlwbeu:   "Vector Load Word into Four Bytes Even [with Update]"
PPC_evlwboumx:   "Vector Load Word into Four Bytes Odd Unsigned [with Modify] Indexed"
PPC_evlwbouu:   "Vector Load Word into Four Bytes Odd Unsigned [with Update]"
PPC_evlwbosmx:   "Vector Load Word into Two Halfwords Odd Signed [with Modify] Indexed"
PPC_evlwbosu:   "Vector Load Word into Four Bytes Odd Signed [with Update]"
PPC_evstwhemx:   "Vector Store Word of Two Halfwords from Even [with Modify] Indexed"
PPC_evstwheu:   "Vector Store Word of Two Halfwords from Even [with Update]"
PPC_evstwbemx:   "Vector Store Word of Four Bytes from Even [with Modify] Indexed"
PPC_evstwbeu:   "Vector Store Word of Four Bytes from Even [with Update]"
PPC_evstwhomx:   "Vector Store Word of Two Halfwords from Odd [with Modify] Indexed"
PPC_evstwhou:   "Vector Store Word of Two Halfwords from Odd [with Update]"
PPC_evstwbomx:   "Vector Store Word of Four Bytes from Odd [with Modify] Indexed"
PPC_evstwbou:   "Vector Store Word of Four Bytes from Odd [with Update]"
PPC_evstwwemx:   "Vector Store Word of Word from Even [with Modify] Indexed"
PPC_evstwweu:   "Vector Store Word of Word from Even [with Update]"
PPC_evstwbmx:   "Vector Store Word of Four Bytes [with Modify] Indexed"
PPC_evstwbu:   "Vector Store Word of Four Bytes [with Update]"
PPC_evstwwomx:   "Vector Store Word of Word from Odd [with Modify] Indexed"
PPC_evstwwou:   "Vector Store Word of Word from Odd [with Update]"
PPC_evsthbmx:   "Vector Store Halfword of Two Bytes [with Modify] Indexed"
PPC_evsthbu:   "Vector Store Halfword of Two Bytes [with Update]"
PPC_evmhusi:   "Vector Multiply Halfword Unsigned, Saturate, Integer"
PPC_evmhssi:   "Vector Multiply Halfword Signed, Saturate, Integer"
PPC_evmhsusi:   "Vector Multiply Halfword Signed by Unsigned, Saturate, Integer"
PPC_evmhssf:   "Vector Multiply Halfword Signed, Saturate, Fractional"
PPC_evmhumi:   "Vector Multiply Halfword Unsigned, Modulo, Integer"
PPC_evmhssfr:   "Vector Multiply Halfword Signed, Saturate, Fractional and Round"
PPC_evmhesumi:   "Vector Multiply Halfwords, Even, Signed by Unsigned, Modulo, Integer (to Accumulator)"
PPC_evmhosumi:   "Vector Multiply Halfwords, Odd, Signed by Unsigned, Modulo, Integer (to Accumulator)"
PPC_evmbeumi:   "Vector Multiply Bytes Even, Unsigned, Modulo, Integer (to Accumulator)"
PPC_evmbesmi:   "Vector Multiply Bytes Even, Signed, Modulo, Integer (to Accumulator)"
PPC_evmbesumi:   "Vector Multiply Bytes Even, Signed by Unsigned, Modulo, Integer (to Accumulator)"
PPC_evmboumi:   "Vector Multiply Bytes Odd, Unsigned, Modulo, Integer (to Accumulator)"
PPC_evmbosmi:   "Vector Multiply Bytes Odd, Signed, Modulo, Integer (to Accumulator)"
PPC_evmbosumi:   "Vector Multiply Bytes Odd, Signed by Unsigned, Modulo, Integer (to Accumulator)"
PPC_evmhesumia:   "Vector Multiply Halfwords, Even, Signed by Unsigned, Modulo, Integer (to Accumulator)"
PPC_evmhosumia:   "Vector Multiply Halfwords, Odd, Signed by Unsigned, Modulo, Integer (to Accumulator)"
PPC_evmbeumia:   "Vector Multiply Bytes Even, Unsigned, Modulo, Integer (to Accumulator)"
PPC_evmbesmia:   "Vector Multiply Bytes Even, Signed, Modulo, Integer (to Accumulator)"
PPC_evmbesumia:   "Vector Multiply Bytes Even, Signed by Unsigned, Modulo, Integer (to Accumulator)"
PPC_evmboumia:   "Vector Multiply Bytes Odd, Unsigned, Modulo, Integer (to Accumulator)"
PPC_evmbosmia:   "Vector Multiply Bytes Odd, Signed, Modulo, Integer (to Accumulator)"
PPC_evmbosumia:   "Vector Multiply Bytes Odd, Signed by Unsigned, Modulo, Integer (to Accumulator)"
PPC_evmwusiw:   "Vector Multiply Word Unsigned, Saturate, Integer Word"
PPC_evmwssiw:   "Vector Multiply Word Signed, Saturate, Integer Word"
PPC_evmwhssfr:   "Vector Multiply Word High Signed, Saturate, Fractional and Round (to Accumulator)"
PPC_evmwehgsmfr:   "Vector Multiply Word Even High Guarded Signed, Modulo, Fractional, Round (to Accumulator)"
PPC_evmwehgsmf:   "Vector Multiply Word Even High Guarded Signed, Modulo, Fractional (to Accumulator)"
PPC_evmwohgsmfr:   "Vector Multiply Word Odd, High, Guarded, Signed, Modulo, Fractional, Round (to Accumulator)"
PPC_evmwohgsmf:   "Vector Multiply Word Odd, High, Guarded, Signed, Modulo, Fractional (to Accumulator)"
PPC_evmwhssfra:   "Vector Multiply Word High Signed, Saturate, Fractional and Round (to Accumulator)"
PPC_evmwehgsmfra:   "Vector Multiply Word Even High Guarded Signed, Modulo, Fractional, Round (to Accumulator)"
PPC_evmwehgsmfa:   "Vector Multiply Word Even High Guarded Signed, Modulo, Fractional (to Accumulator)"
PPC_evmwohgsmfra:   "Vector Multiply Word Odd, High, Guarded, Signed, Modulo, Fractional, Round (to Accumulator)"
PPC_evmwohgsmfa:   "Vector Multiply Word Odd, High, Guarded, Signed, Modulo, Fractional (to Accumulator)"
PPC_evaddusiaa:   "Vector Add Unsigned, Saturate, Integer to Accumulator"
PPC_evaddssiaa:   "Vector Add Signed, Saturate, Integer to Accumulator"
PPC_evsubfusiaa:   "Vector Subtract from (Accumulator) Unsigned, Saturate, Integer to Accumulator"
PPC_evsubfssiaa:   "Vector Subtract from Signed, Saturate, Integer to Accumulator"
PPC_evaddsmiaa:   "Vector Add to Accumulator"
PPC_evsubfsmiaa:   "Vector Subtract from Accumulator to Accumulator"
PPC_evaddh:   "Vector Add Halfwords"
PPC_evaddhss:   "Vector Add Halfwords Signed and Saturate"
PPC_evsubfh:   "Vector Subtract from Halfword"
PPC_evsubfhss:   "Vector Subtract from Halfwords Signed and Saturate"
PPC_evaddhx:   "Vector Add Halfwords Exchanged"
PPC_evaddhxss:   "Vector Add Halfwords Exchanged, Signed and Saturate"
PPC_evsubfhx:   "Vector Subtract from Halfwords Exchanged"
PPC_evsubfhxss:   "Vector Subtract from Halfwords Exchanged, Signed and Saturate"
PPC_evaddd:   "Vector Add Doubleword"
PPC_evadddss:   "Vector Add Doubleword Signed and Saturate"
PPC_evsubfd:   "Vector Subtract from Doubleword"
PPC_evsubfdss:   "Vector Subtract from Doubleword Signed and Saturate"
PPC_evaddb:   "Vector Add Bytes"
PPC_evaddbss:   "Vector Add Bytes Signed and Saturate"
PPC_evsubfb:   "Vector Subtract from Byte"
PPC_evsubfbss:   "Vector Subtract from Byte Signed and Saturate"
PPC_evaddsubfh:   "Vector Add / Subtract from Halfword"
PPC_evaddsubfhss:   "Vector Add / Subtract from Halfword Signed and Saturate"
PPC_evsubfaddh:   "Vector Subtract from / Add Halfwords"
PPC_evsubfaddhss:   "Vector Subtract from / Add Halfwords Signed and Saturate"
PPC_evaddsubfhx:   "Vector Add / Subtract from Halfword Exchanged"
PPC_evaddsubfhxss:   "Vector Add / Subtract from Halfword Exchanged, Signed and Saturate"
PPC_evsubfaddhx:   "Vector Subtract from / Add Halfwords Exchanged"
PPC_evsubfaddhxss:   "Vector Subtract from / Add Halfwords Exchanged, Signed and Saturate"
PPC_evadddus:   "Vector Add Doubleword Unsigned and Saturate"
PPC_evaddbus:   "Vector Add Bytes Unsigned and Saturate"
PPC_evsubfdus:   "Vector Subtract from Doubleword Unsigned and Saturate"
PPC_evsubfbus:   "Vector Subtract from Byte Unsigned and Saturate"
PPC_evaddwus:   "Vector Add Word Unsigned and Saturate"
PPC_evaddwxus:   "Vector Add Word Exchanged Unsigned and Saturate"
PPC_evsubfwus:   "Vector Subtract from Word Unsigned and Saturate"
PPC_evsubfwxus:   "Vector Subtract from Word Exchanged Unsigned and Saturate"
PPC_evadd2subf2h:   "Vector Add Upper 2 and Subtract from Lower 2 Halfwords"
PPC_evadd2subf2hss:   "Vector Add Upper 2 and Subtract from Lower 2 Halfwords Signed and Saturate"
PPC_evsubf2add2h:   "Vector Subtract from Upper 2 / Add Lower 2 Halfwords"
PPC_evsubf2add2hss:   "Vector Subtract from Upper 2 / Add Lower 2 Halfwords Signed and Saturate"
PPC_evaddhus:   "Vector Add Halfwords Unsigned and Saturate"
PPC_evaddhxus:   "Vector Add Halfwords Exchanged, Unsigned and Saturate"
PPC_evsubfhus:   "Vector Subtract from Halfwords Unsigned and Saturate"
PPC_evsubfhxus:   "Vector Subtract from Halfwords Exchanged, Unsigned and Saturate"
PPC_evaddwss:   "Vector Add Word Signed and Saturate"
PPC_evsubfwss:   "Vector Subtract from Word Signed and Saturate"
PPC_evaddwx:   "Vector Add Word Exchanged"
PPC_evaddwxss:   "Vector Add Word Exchanged Signed and Saturate"
PPC_evsubfwx:   "Vector Subtract from Word Exchanged"
PPC_evsubfwxss:   "Vector Subtract from Word Exchanged Signed and Saturate"
PPC_evaddsubfw:   "Vector Add / Subtract from Word"
PPC_evaddsubfwss:   "Vector Add / Subtract from Word Signed and Saturate"
PPC_evsubfaddw:   "Vector Subtract from / Add Word"
PPC_evsubfaddwss:   "Vector Subtract from / Add Word Signed and Saturate"
PPC_evaddsubfwx:   "Vector Add / Subtract from Word Exchanged"
PPC_evaddsubfwxss:   "Vector Add / Subtract from Word Exchanged Signed and Saturate"
PPC_evsubfaddwx:   "Vector Subtract from / Add Word Exchanged"
PPC_evsubfaddwxss:   "Vector Subtract from / Add Word Exchanged Signed and Saturate"
PPC_evmar:   "Store Accumulator"
PPC_evsumwu:   "Vector Sum of Words Unsigned (to Accumulator)"
PPC_evsumws:   "Vector Sum of Words Signed (to Accumulator)"
PPC_evsum4bu:   "Vector Sum of 4 Bytes UnsIgned (to Accumulator)"
PPC_evsum4bs:   "Vector Sum of 4 Bytes SIgned (to Accumulator)"
PPC_evsum2hu:   "Vector Sum of 2 Halfwords Unsigned (to Accumulator)"
PPC_evsum2hs:   "Vector Sum of 2 Halfwords Signed (to Accumulator)"
PPC_evdiff2his:   "Vector Difference of 2 Halfwords Interleaved Signed (to Accumulator)"
PPC_evsum2his:   "Vector Sum of 2 Halfwords Interleaved Signed (to Accumulator)"
PPC_evsumwua:   "Vector Sum of Words Unsigned (to Accumulator)"
PPC_evsumwsa:   "Vector Sum of Words Signed (to Accumulator)"
PPC_evsum4bua:   "Vector Sum of 4 Bytes UnsIgned (to Accumulator)"
PPC_evsum4bsa:   "Vector Sum of 4 Bytes SIgned (to Accumulator)"
PPC_evsum2hua:   "Vector Sum of 2 Halfwords Unsigned (to Accumulator)"
PPC_evsum2hsa:   "Vector Sum of 2 Halfwords Signed (to Accumulator)"
PPC_evdiff2hisa:   "Vector Difference of 2 Halfwords Interleaved Signed (to Accumulator)"
PPC_evsum2hisa:   "Vector Sum of 2 Halfwords Interleaved Signed (to Accumulator)"
PPC_evsumwuaa:   "Vector Sum of Words Unsigned and Accumulate"
PPC_evsumwsaa:   "Vector Sum of Words Signed and Accumulate"
PPC_evsum4buaaw:   "Vector Sum of 4 Bytes Unsigned and Accumulate into Words"
PPC_evsum4bsaaw:   "Vector Sum of 4 Bytes Signed and Accumulate into Words"
PPC_evsum2huaaw:   "Vector Sum of 2 Halfwords Unsigned and Accumulate into Words"
PPC_evsum2hsaaw:   "Vector Sum of 2 Halfwords Signed and Accumulate into Words"
PPC_evdiff2hisaaw:   "Vector Difference of 2 Halfwords Interleaved Signed and Accumulate into Words"
PPC_evsum2hisaaw:   "Vector Sum of 2 Halfwords Interleaved Signed and Accumulate into Words"
PPC_evdivwsf:   "Vector Divide Word Signed Fractional"
PPC_evdivwuf:   "Vector Divide Word Unsigned Fractional"
PPC_evdivs:   "Vector Divide Signed"
PPC_evdivu:   "Vector Divide Unsigned"
PPC_evaddwegsi:   "Vector Add Word Even Guarded Signed Integer"
PPC_evaddwegsf:   "Vector Add Word Even Guarded Signed Fraction"
PPC_evsubfwegsi:   "Vector Subtract from Word Even Guarded Signed Integer"
PPC_evsubfwegsf:   "Vector Subtract from Word Even Guarded Signed Fraction"
PPC_evaddwogsi:   "Vector Add Word Odd Guarded Signed Integer"
PPC_evaddwogsf:   "Vector Add Word Odd Guarded Signed Fraction"
PPC_evsubfwogsi:   "Vector Subtract from Word Odd Guarded Signed Integer"
PPC_evsubfwogsf:   "Vector Subtract from Word Odd Guarded Signed Fraction"
PPC_evaddhhiuw:   "Vector Add Halfwords High Unsigned to Words"
PPC_evaddhhisw:   "Vector Add Halfwords High Signed to Words"
PPC_evsubfhhiuw:   "Vector Subtract from Halfwords High Unsigned to Words"
PPC_evsubfhhisw:   "Vector Subtract from Halfwords High Signed to Words"
PPC_evaddhlouw:   "Vector Add Halfwords Low Unsigned to Words"
PPC_evaddhlosw:   "Vector Add Halfwords Low Signed to Words"
PPC_evsubfhlouw:   "Vector Subtract from Halfwords Low Unsigned to Words"
PPC_evsubfhlosw:   "Vector Subtract from Halfwords Low Signed to Words"
PPC_evmhesusiaaw:   "Vector Multiply Halfwords, Even, Signed by Unsigned, Saturate, Integer and Accumulate into Words"
PPC_evmhosusiaaw:   "Vector Multiply Halfwords, Odd, Signed by Unsigned, Saturate, Integer and Accumulate into Words"
PPC_evmhesumiaaw:   "Vector Multiply Halfwords, Even, Signed by Unsigned, Modulo, Integer and Accumulate into Words"
PPC_evmhosumiaaw:   "Vector Multiply Halfwords, Odd, Signed by Unsigned, Modulo, Integer and Accumulate into Words"
PPC_evmbeusiaah:   "Vector Multiply Byte Even, Unsigned, Saturate, Integer and Accumulate Halfwords"
PPC_evmbessiaah:   "Vector Multiply Byte Even, Signed, Saturate, Integer and Accumulate Halfwords"
PPC_evmbesusiaah:   "Vector Multiply Byte Even, Signed by Unsigned, Saturate, Integer and Accumulate Halfwords"
PPC_evmbousiaah:   "Vector Multiply Byte Odd, Unsigned, Saturate, Integer and Accumulate Halfwords"
PPC_evmbossiaah:   "Vector Multiply Byte Odd, Signed, Saturate, Integer and Accumulate Halfwords"
PPC_evmbosusiaah:   "Vector Multiply Byte Odd, Signed by Unsigned, Saturate, Integer and Accumulate Halfwords"
PPC_evmbeumiaah:   "Vector Multiply Byte Even, Unsigned, Modulo, Integer and Accumulate Halfwords"
PPC_evmbesmiaah:   "Vector Multiply Byte Even, Signed, Modulo, Integer and Accumulate Halfwords"
PPC_evmbesumiaah:   "Vector Multiply Byte Even, Signed by Unsigned, Modulo, Integer and Accumulate Halfwords"
PPC_evmboumiaah:   "Vector Multiply Byte Odd, Unsigned, Modulo, Integer and Accumulate Halfwords"
PPC_evmbosmiaah:   "Vector Multiply Byte Odd, Signed, Modulo, Integer and Accumulate Halfwords"
PPC_evmbosumiaah:   "Vector Multiply Byte Odd, Signed by Unsigned, Modulo, Integer and Accumulate Halfwords"
PPC_evmwlusiaaw3:   "Vector Multiply Word Low Unsigned, Saturate, Integer and Accumulate in Words 3 operand"
PPC_evmwlssiaaw3:   "Vector Multiply Word Low Signed, Saturate, Integer and Accumulate in Words"
PPC_evmwhssfraaw3:   "Vector Multiply Word High Signed, Saturate, Fractional, Round and Accumulate into Words 3 operand"
PPC_evmwhssfaaw3:   "Vector Multiply Word High Signed, Saturate, Fractional and Accumulate into Words 3 operand"
PPC_evmwhssfraaw:   "Vector Multiply Word High Signed, Saturate, Fractional, Round and Accumulate into Words"
PPC_evmwhssfaaw:   "Vector Multiply Word High Signed, Saturate, Fractional and Accumulate into Words"
PPC_evmwlumiaaw3:   "Vector Multiply Word Low Unsigned, Modulo, Integer and Accumulate in Words 3 operand"
PPC_evmwlsmiaaw3:   "Vector Multiply Word Low Signed, Modulo, Integer and Accumulate in Words 3 operand"
PPC_evmwusiaa:   "Vector Multiply Word Unsigned, Saturate, Integer and Accumulate"
PPC_evmwssiaa:   "Vector Multiply Word Signed, Saturate, Integer and Accumulate"
PPC_evmwehgsmfraa:   "Vector Multiply Word Even High Guarded Signed, Modulo, Fractional, Round and Accumulate"
PPC_evmwehgsmfaa:   "Vector Multiply Word Even High Guarded Signed, Modulo, Fractional and Accumulate"
PPC_evmwohgsmfraa:   "Vector Multiply Word Odd High Guarded Signed, Modulo, Fractional, Round and Accumulate"
PPC_evmwohgsmfaa:   "Vector Multiply Word Odd High Guarded Signed, Modulo, Fractional and Accumulate"
PPC_evmhesusianw:   "Vector Multiply Halfwords, Even, Signed by Unsigned, Saturate, Integer and Accumulate Negative into Words"
PPC_evmhosusianw:   "Vector Multiply Halfwords, Odd, Signed by Unsigned, Saturate, Integer and Accumulate Negative into Words"
PPC_evmhesumianw:   "Vector Multiply Halfwords, Even, Signed by Unsigned, Modulo, Integer and Accumulate Negative into Words"
PPC_evmhosumianw:   "Vector Multiply Halfwords, Odd, Signed by Unsigned, Modulo, Integer and Accumulate Negative into Words"
PPC_evmbeusianh:   "Vector Multiply Byte Even, Unsigned, Saturate, Integer and Accumulate Negative Halfwords"
PPC_evmbessianh:   "Vector Multiply Byte Even, Signed, Saturate, Integer and Accumulate Negative Halfwords"
PPC_evmbesusianh:   "Vector Multiply Byte Even, Signed by Unsigned, Saturate, Integer and Accumulate Negative Halfwords"
PPC_evmbousianh:   "Vector Multiply Byte Odd, Unsigned, Saturate, Integer and Accumulate Negative Halfwords"
PPC_evmbossianh:   "Vector Multiply Byte Odd, Signed, Saturate, Integer and Accumulate Negative Halfwords"
PPC_evmbosusianh:   "Vector Multiply Byte Odd, Signed by Unsigned, Saturate, Integer and Accumulate Negative Halfwords"
PPC_evmbeumianh:   "Vector Multiply Byte Even, Unsigned, Modulo, Integer and Accumulate Negative Halfwords"
PPC_evmbesmianh:   "Vector Multiply Byte Even, Signed, Modulo, Integer and Accumulate Negative Halfwords"
PPC_evmbesumianh:   "Vector Multiply Byte Even, Signed by Unsigned, Modulo, Integer and Accumulate Negative Halfwords"
PPC_evmboumianh:   "Vector Multiply Byte Odd, Unsigned, Modulo, Integer and Accumulate Negative Halfwords"
PPC_evmbosmianh:   "Vector Multiply Byte Odd, Signed, Modulo, Integer and Accumulate Negative Halfwords"
PPC_evmbosumianh:   "Vector Multiply Byte Odd, Signed by Unsigned, Modulo, Integer and Accumulate Negative Halfwords"
PPC_evmwlusianw3:   "Vector Multiply Word Low Unsigned, Saturate, Integer and Accumulate Negative in Words 3 operand"
PPC_evmwlssianw3:   "Vector Multiply Word Low Signed, Saturate, Integer and Accumulate Negative in Words 3 operand"
PPC_evmwhssfranw3:   "Vector Multiply Word High Signed, Saturate, Fractional, Round, and Accumulate Negative into Words 3 operand"
PPC_evmwhssfanw3:   "Vector Multiply Word High Signed, Saturate, Fractional and Accumulate Negative into Words 3 operand"
PPC_evmwhssfranw:   "Vector Multiply Word High Signed, Saturate, Fractional, Round, and Accumulate Negative into Words"
PPC_evmwhssfanw:   "Vector Multiply Word High Signed, Saturate, Fractional and Accumulate Negative into Words"
PPC_evmwlumianw3:   "Vector Multiply Word Low Unsigned, Modulo, Integer and Accumulate Negative in Words 3 operand"
PPC_evmwlsmianw3:   "Vector Multiply Word Low Signed, Modulo, Integer and Accumulate Negative in Words 3 operand"
PPC_evmwusian:   "Vector Multiply Word Unsigned, Saturate, Integer and Accumulate Negative"
PPC_evmwssian:   "Vector Multiply Word Signed, Saturate, Integer and Accumulate Negative"
PPC_evmwehgsmfran:   "Vector Multiply Word Even High, Guarded, Signed, Modulo, Fractional, Round and Accumulate Negative"
PPC_evmwehgsmfan:   "Vector Multiply Word Even High, Guarded, Signed, Modulo, Fractional and Accumulate Negative"
PPC_evmwohgsmfran:   "Vector Multiply Word Odd, High, Guarded, Signed, Modulo, Fractional, Round and Accumulate Negative"
PPC_evmwohgsmfan:   "Vector Multiply Word Odd, High, Guarded, Signed, Modulo, Fractional and Accumulate Negative"
PPC_evseteqb:   "Vector Set if Equal Byte [and Record]"
PPC_evseteqh:   "Vector Set if Equal Halfword [and Record]"
PPC_evseteqw:   "Vector Set if Equal Word [and Record]"
PPC_evsetgthu:   "Vector Set if Greater Than Halfword UnsIgned [and Record]"
PPC_evsetgths:   "Vector Set if Greater Than Halfword SIgned [and Record]"
PPC_evsetgtwu:   "Vector Set if Greater Than Word Unsigned [and Record]"
PPC_evsetgtws:   "Vector Set if Greater Than Word Signed [and Record]"
PPC_evsetgtbu:   "Vector Set if Greater Than Byte Unsigned [and Record]"
PPC_evsetgtbs:   "Vector Set if Greater Than Byte SIgned [and Record]"
PPC_evsetltbu:   "Vector Set if Less Than Byte Unsigned [and Record]"
PPC_evsetltbs:   "Vector Set if Less Than Byte SIgned [and Record]"
PPC_evsetlthu:   "Vector Set if Less Than Halfword UnsIgned [and Record]"
PPC_evsetlths:   "Vector Set if Less Than Halfword SIgned [and Record]"
PPC_evsetltwu:   "Vector Set if Less Than Word Unsigned [and Record]"
PPC_evsetltws:   "Vector Set if Less Than Word Signed [and Record]"
PPC_evsaduw:   "Vector Sum of Absolute Differences of Unsigned Words (to Accumulator)"
PPC_evsadsw:   "Vector Sum of Absolute Differences of Signed Words (to Accumulator)"
PPC_evsad4ub:   "Vector Sum of Absolute Differences of 4 Unsigned Bytes (to Accumulator)"
PPC_evsad4sb:   "Vector Sum of Absolute Differences of 4 Signed Bytes (to Accumulator)"
PPC_evsad2uh:   "Vector Sum of Absolute Differences of 2 Unsigned Halfwords (to Accumulator)"
PPC_evsad2sh:   "Vector Sum of Absolute Differences of 2 Signed Halfwords (to Accumulator)"
PPC_evsaduwa:   "Vector Sum of Absolute Differences of Unsigned Words (to Accumulator)"
PPC_evsadswa:   "Vector Sum of Absolute Differences of Signed Words (to Accumulator)"
PPC_evsad4uba:   "Vector Sum of Absolute Differences of 4 Unsigned Bytes (to Accumulator)"
PPC_evsad4sba:   "Vector Sum of Absolute Differences of 4 Signed Bytes (to Accumulator)"
PPC_evsad2uha:   "Vector Sum of Absolute Differences of 2 Unsigned Halfwords (to Accumulator)"
PPC_evsad2sha:   "Vector Sum of Absolute Differences of 2 Signed Halfwords (to Accumulator)"
PPC_evabsdifuw:   "Vector Absolute Difference of Unsigned Words"
PPC_evabsdifsw:   "Vector Absolute Difference of Signed Words"
PPC_evabsdifub:   "Vector Absolute Difference of Unsigned Bytes"
PPC_evabsdifsb:   "Vector Absolute Difference of Signed Bytes"
PPC_evabsdifuh:   "Vector Absolute Difference of Unsigned Halfwords"
PPC_evabsdifsh:   "Vector Absolute Difference of Signed Halfwords"
PPC_evsaduwaa:   "Vector Sum of Absolute Differences of Unsigned Words and Accumulate"
PPC_evsadswaa:   "Vector Sum of Absolute Differences of Signed Words and Accumulate"
PPC_evsad4ubaaw:   "Vector Sum of Absolute Differences of 4 Unsigned Bytes and Accumulate into Words"
PPC_evsad4sbaaw:   "Vector Sum of Absolute Differences of 4 Signed Bytes and Accumulate into Words"
PPC_evsad2uhaaw:   "Vector Sum of Absolute Differences of 2 Unsigned Halfwords and Accumulate into Words"
PPC_evsad2shaaw:   "Vector Sum of Absolute Differences of 2 Signed Halfwords and Accumulate into Words"
PPC_evpkshubs:   "Vector Pack Signed Halfwords to Unsigned Bytes and Saturate"
PPC_evpkshsbs:   "Vector Pack Signed Halfwords to Signed Bytes and Saturate"
PPC_evpkswuhs:   "Vector Pack Signed Words to Unsigned Halfwords and Saturate"
PPC_evpkswshs:   "Vector Pack Signed Words to Signed Halfwords and Saturate"
PPC_evpkuhubs:   "Vector Pack Unsigned Halfwords to Unsigned Bytes and Saturate"
PPC_evpkuwuhs:   "Vector Pack Unsigned Words to Unsigned Halfwords and Saturate"
PPC_evpkswshilvs:   "Vector Pack Signed Words to Signed Halfwords Interleaved and Saturate"
PPC_evpkswgshefrs:   "Vector Pack Signed Words Guarded to Signed Halfwords Even Fractional Round and Saturate"
PPC_evpkswshfrs:   "Vector Pack Signed Words to Signed Halfwords Fractional, Round and Saturate"
PPC_evpkswshilvfrs:   "Vector Pack Signed Words to Signed Halfwords Interleaved, Fractional, Round and Saturate"
PPC_evpksdswfrs:   "Vector Pack Signed Doublewords to Signed Words Fractional, Round and Saturate"
PPC_evpksdshefrs:   "Vector Pack Signed Doublewords to Signed Halfwords Even, Fractional, Round, and Saturate"
PPC_evpkuduws:   "Vector Pack Unsigned Doublewords to Unsigned Words and Saturate"
PPC_evpksdsws:   "Vector Pack Signed Doublewords to Signed Words and Saturate"
PPC_evpkswgswfrs:   "Vector Pack Signed Words Guarded to Signed Words Fractional Round and Saturate"
PPC_evilveh:   "Vector Interleave Even Halfwords"
PPC_evilveoh:   "Vector Interleave Even/Odd Halfwords"
PPC_evilvhih:   "Vector Interleave High Halfwords"
PPC_evilvhiloh:   "Vector Interleave High/Low Halfwords"
PPC_evilvloh:   "Vector Interleave Low Halfwords"
PPC_evilvlohih:   "Vector Interleave Low/High Halfwords"
PPC_evilvoeh:   "Vector Interleave Odd/Even Halfwords"
PPC_evilvoh:   "Vector Interleave Odd Halfwords"
PPC_evdlveb:   "Vector De-interleave Even Bytes"
PPC_evdlveh:   "Vector De-interleave Even Halfwords"
PPC_evdlveob:   "Vector De-interleave Even/Odd Bytes"
PPC_evdlveoh:   "Vector De-interleave Even/Odd Halfwords"
PPC_evdlvob:   "Vector De-interleave Odd Bytes"
PPC_evdlvoh:   "Vector De-interleave Odd Halfwords"
PPC_evdlvoeb:   "Vector De-interleave Odd/Even Bytes"
PPC_evdlvoeh:   "Vector De-interleave Odd/Even Halfwords"
PPC_evmaxbu:   "Vector Maximum Byte Unsigned"
PPC_evmaxbs:   "Vector Maximum Byte Signed"
PPC_evmaxhu:   "Vector Maximum Halfword Unsigned"
PPC_evmaxhs:   "Vector Maximum Halfword Signed"
PPC_evmaxwu:   "Vector Maximum Word Unsigned"
PPC_evmaxws:   "Vector Maximum Word Signed"
PPC_evmaxdu:   "Vector Maximum Doubleword Unsigned"
PPC_evmaxds:   "Vector Maximum Doubleword Signed"
PPC_evminbu:   "Vector Minimum Byte Unsigned"
PPC_evminbs:   "Vector Minimum Byte Signed"
PPC_evminhu:   "Vector Minimum Halfword Unsigned"
PPC_evminhs:   "Vector Minimum Halfword Signed"
PPC_evminwu:   "Vector Minimum Word Unsigned"
PPC_evminws:   "Vector Minimum Word Signed"
PPC_evmindu:   "Vector Minimum Doubleword Unsigned"
PPC_evminds:   "Vector Minimum Doubleword Signed"
PPC_evavgwu:   "Vector Average Word Unsigned"
PPC_evavgws:   "Vector Average Word Signed"
PPC_evavgbu:   "Vector Average Byte Unsigned"
PPC_evavgbs:   "Vector Average Byte Signed"
PPC_evavghu:   "Vector Average Halfword Unsigned"
PPC_evavghs:   "Vector Average Halfword Signed"
PPC_evavgdu:   "Vector Average Doubleword Unsigned"
PPC_evavgds:   "Vector Average Doubleword Signed"
PPC_evavgwur:   "Vector Average Word Unsigned with Round"
PPC_evavgwsr:   "Vector Average Word Signed with Round"
PPC_evavgbur:   "Vector Average Byte Unsigned with Round"
PPC_evavgbsr:   "Vector Average Byte Signed with Round"
PPC_evavghur:   "Vector Average Halfword Unsigned with Round"
PPC_evavghsr:   "Vector Average Halfword Signed with Round"
PPC_evavgdur:   "Vector Average Doubleword Unsigned with Round"
PPC_evavgdsr:   "Vector Average Doubleword Signed with Round"

// Some simplifications that were missed previously
PPC_tdui:   "Trap Doubleword Unconditionally with Immediate"
PPC_tdu:   "Trap Doubleword Unconditionally"
PPC_twui:   "Trap Word Unconditionally with Immediate"
PPC_twu:   "Trap Word Unconditionally"

// Power ISA 2.07
PPC_bctar:   "Branch Conditional to Branch Target Address Register"
PPC_clrbhrb:   "Clear BHRB"
PPC_mfbhrbe:   "Move From Branch History Rolling Buffer"
PPC_mtsle:   "Move To Split Little Endian"
PPC_mfvsrd:   "Move From VSR Doubleword"
PPC_mfvsrwz:   "Move From VSR Word and Zero"
PPC_mtvsrd:   "Move To VSR Doubleword"
PPC_mtvsrwa:   "Move To VSR Word Algebraic"
PPC_mtvsrwz:   "Move To VSR Word and Zero"
PPC_fmrgew:   "Floating Merge Even Word"
PPC_fmrgow:   "Floating Merge Odd Word"
PPC_vpksdss:   "Vector Pack Signed Doubleword Signed Saturate"
PPC_vpksdus:   "Vector Pack Signed Doubleword Unsigned Saturate"
PPC_vpkudus:   "Vector Pack Unsigned Doubleword Unsigned Saturate"
PPC_vpkudum:   "Vector Pack Unsigned Doubleword Unsigned Modulo"
PPC_vupkhsw:   "Vector Unpack High Signed Word"
PPC_vupklsw:   "Vector Unpack Low Signed Word"
PPC_vmrgew:   "Vector Merge Even Word"
PPC_vmrgow:   "Vector Merge Odd Word"
PPC_vaddudm:   "Vector Add Unsigned Doubleword Modulo"
PPC_vadduqm:   "Vector Add Unsigned Quadword Modulo"
PPC_vaddeuqm:   "Vector Add Extended Unsigned Quadword Modulo"
PPC_vaddcuq:   "Vector Add & write Carry Unsigned Quadword"
PPC_vaddecuq:   "Vector Add Extended & write Carry Unsigned Quadword"
PPC_vsubudm:   "Vector Subtract Unsigned Doubleword Modulo"
PPC_vsubuqm:   "Vector Subtract Unsigned Quadword Modulo"
PPC_vsubeuqm:   "Vector Subtract Extended Unsigned Quadword Modulo"
PPC_vsubcuq:   "Vector Subtract & write Carry Unsigned Quadword"
PPC_vsubecuq:   "Vector Subtract Extended & write Carry Unsigned Quadword"
PPC_vmulesw:   "Vector Multiply Even Signed Word"
PPC_vmuleuw:   "Vector Multiply Even Unsigned Word"
PPC_vmulosw:   "Vector Multiply Odd Signed Word"
PPC_vmulouw:   "Vector Multiply Odd Unsigned Word"
PPC_vmuluwm:   "Vector Multiply Unsigned Word Modulo"
PPC_vmaxsd:   "Vector Maximum Signed Doubleword"
PPC_vmaxud:   "Vector Maximum Unsigned Doubleword"
PPC_vminsd:   "Vector Minimum Signed Doubleword"
PPC_vminud:   "Vector Minimum Unsigned Doubleword"
PPC_vcmpequd:   "Vector Compare Equal To Unsigned Doubleword"
PPC_vcmpgtsd:   "Vector Compare Greater Than Signed Doubleword"
PPC_vcmpgtud:   "Vector Compare Greater Than Unsigned Doubleword"
PPC_veqv:   "Vector Equivalence"
PPC_vnand:   "Vector NAND"
PPC_vorc:   "Vector OR with Complement"
PPC_vrld:   "Vector Rotate Left Doubleword"
PPC_vsld:   "Vector Shift Left Doubleword"
PPC_vsrd:   "Vector Shift Right Doubleword"
PPC_vsrad:   "Vector Shift Right Algebraic Doubleword"
PPC_vcipher:   "Vector AES Cipher"
PPC_vcipherlast:   "Vector AES Cipher Last"
PPC_vncipher:   "Vector AES Inverse Cipher"
PPC_vncipherlast:   "Vector AES Inverse Cipher Last"
PPC_vsbox:   "Vector AES S-Box"
PPC_vshasigmad:   "Vector SHA-512 Sigma Doubleword"
PPC_vshasigmaw:   "Vector SHA-256 Sigma Word"
PPC_vpmsumb:   "Vector Polynomial Multiply-Sum Byte"
PPC_vpmsumd:   "Vector Polynomial Multiply-Sum Doubleword"
PPC_vpmsumh:   "Vector Polynomial Multiply-Sum Halfword"
PPC_vpmsumw:   "Vector Polynomial Multiply-Sum Word"
PPC_vpermxor:   "Vector Permute and Exclusive-OR"
PPC_vgbbd:   "Vector Gather Bits by Byte by Doubleword"
PPC_vclzb:   "Vector Count Leading Zeros Byte"
PPC_vclzh:   "Vector Count Leading Zeros Halfword"
PPC_vclzw:   "Vector Count Leading Zeros Word"
PPC_vclzd:   "Vector Count Leading Zeros Doubleword"
PPC_vpopcntb:   "Vector Population Count Byte"
PPC_vpopcntd:   "Vector Population Count Doubleword"
PPC_vpopcnth:   "Vector Population Count Halfword"
PPC_vpopcntw:   "Vector Population Count Word"
PPC_vbpermq:   "Vector Bit Permute Quadword"
PPC_bcdadd:   "Decimal Add Modulo"
PPC_bcdsub:   "Decimal Subtract Modulo"
PPC_lxsiwax:   "Load VSX Scalar as Integer Word Algebraic Indexed"
PPC_lxsspx:   "Load VSX Scalar Single-Precision Indexed"
PPC_lxsiwzx:   "Load VSX Scalar as Integer Word and Zero Indexed"
PPC_stxsiwx:   "Store VSX Scalar as Integer Word Indexed"
PPC_stxsspx:   "Store VSR Scalar Word Indexed"
PPC_xsaddsp:   "VSX Scalar Add Single-Precision"
PPC_xscvdpspn:   "VSX Scalar Convert Double-Precision to Single-Precision format Non-signalling"
PPC_xscvspdpn:   "Scalar Convert Single-Precision to Double-Precision format Non-signalling"
PPC_xscvsxdsp:   "VSX Scalar Convert Signed Fixed-Point Doubleword to Single-Precision"
PPC_xscvuxdsp:   "VSX Scalar Convert Unsigned Fixed-Point Doubleword to Single-Precision"
PPC_xsdivsp:   "VSX Scalar Divide Single-Precision"
PPC_xsmaddasp:   "VSX Scalar Multiply-Add Type-A Single-Precision"
PPC_xsmaddmsp:   "VSX Scalar Multiply-Add Type-M Single-Precision"
PPC_xsmsubasp:   "VSX Scalar Multiply-Subtract Type-A Single-Precision"
PPC_xsmsubmsp:   "VSX Scalar Multiply-Subtract Type-M Single-Precision"
PPC_xsmulsp:   "VSX Scalar Multiply Single-Precision"
PPC_xsnmaddasp:   "VSX Scalar Negative Multiply-Add Type-A Single-Precision"
PPC_xsnmaddmsp:   "VSX Scalar Negative Multiply-Add Type-M Single-Precision"
PPC_xsnmsubasp:   "VSX Scalar Negative Multiply-Subtract Type-A Single-Precision"
PPC_xsnmsubmsp:   "VSX Scalar Negative Multiply-Subtract Type-M Single-Precision"
PPC_xsresp:   "VSX Scalar Reciprocal Estimate Single-Precision"
PPC_xsrsp:   "VSX Scalar Round to Single-Precision"
PPC_xsrsqrtesp:   "VSX Scalar Reciprocal Square Root Estimate Single-Precision"
PPC_xssqrtsp:   "VSX Scalar Square Root Single-Precision"
PPC_xssubsp:   "VSX Scalar Subtract Single-Precision"
PPC_xxleqv:   "VSX Logical Equivalence"
PPC_xxlnand:   "VSX Logical NAND"
PPC_xxlorc:   "VSX Logical OR with Complement"
PPC_lqarx:   "Load Quadword And Reserve Indexed"
PPC_stqcx:   "Store Quadword Conditional Indexed and record CR0"
PPC_tbegin:   "Transaction Begin"
PPC_tend:   "Transaction End"
PPC_tabort:   "Transaction Abort"
PPC_tabortwc:   "Transaction Abort Word Conditional"
PPC_tabortwci:   "Transaction Abort Word Conditional Immediate"
PPC_tabortdc:   "Transaction Abort Doubleword Conditional"
PPC_tabortdci:   "Transaction Abort Doubleword Conditional Immediate"
PPC_tsr:   "Transaction Suspend or Resume"
PPC_tcheck:   "Transaction Check"
PPC_rfebb:   "Return from Event Based Branch"
PPC_treclaim:   "Transaction Reclaim"
PPC_trechkpt:   "Transaction Recheckpoint"
PPC_msgsndp:   "Message Send Privileged"
PPC_msgclrp:   "Message Clear Privileged"
PPC_dcblq:   "Data Cache Block Lock Query"
PPC_icblq:   "Instruction Cache Block Lock Query"

// Simplifications for Power ISA 2.07
PPC_vmr:   "Vector Move Register"
PPC_vnot:   "Vector Complement Register"
PPC_tendall:   "Transaction End All"
PPC_tsuspend:   "Transaction Suspend"
PPC_tresume:   "Transaction Resume"
PPC_mtppr:   "Move To Program Priority Register"
PPC_mfppr:   "Move From Program Priority Register"
PPC_mtppr32:   "Move To Program Priority Register 32-Bit"
PPC_mfppr32:   "Move From Program Priority Register 32-Bit"
PPC_mtic:   "Move To IC"
PPC_mfic:   "Move From IC"
PPC_mtvtb:   "Move to VTB"
PPC_mfvtb:   "Move From VTB"
PPC_miso:    "\"or\" Cache Control Hint"
PPC_mdoio:   "\"or\" Shared Resource Hint"
PPC_mdoom:   "\"or\" Shared Resource Hint"
PPC_yield:   "\"or\" Shared Resource Hint"

// e500 core family, category ISAT, valid for VLE
// EREF_RM Rev. 1 (EIS 2.1) 06/2014
PPC_addbss:     "Add Byte Signed Saturate"
PPC_addhss:     "Add Halfword Signed Saturate"
PPC_addwss:     "Add Word Signed Saturate"
PPC_addbus:     "Add Byte Unsigned Saturate"
PPC_addhus:     "Add Halfword Unsigned Saturate"
PPC_addwus:     "Add Word Unsigned Saturate"
PPC_mulhss:     "Multiply Halfword SIgned Saturate"
PPC_mulwss:     "Multiply Word SIgned Saturate"
PPC_mulhus:     "Multiply Halfword Unsigned Saturate"
PPC_mulwus:     "Multiply Word Unsigned Saturate"
PPC_sat:        "Saturate"
PPC_subfbss:    "Subtract From Byte Signed Saturate"
PPC_subfhss:    "Subtract From Halfword Signed Saturate"
PPC_subfwss:    "Subtract From Word Signed Saturate"
PPC_subfbus:    "Subtract From Byte Unsigned Saturate"
PPC_subfhus:    "Subtract From Halfword Unsigned Saturate"
PPC_subfwus:    "Subtract From Word Unsigned Saturate"
// simplified mnemonics for PPC_sat
PPC_satsbs:     "Saturate"
PPC_satubs:     "Saturate"
PPC_satsbu:     "Saturate"
PPC_satubu:     "Saturate"
PPC_abssb:      "Saturate"
PPC_absub:      "Saturate"
PPC_satshs:     "Saturate"
PPC_satuhs:     "Saturate"
PPC_satshu:     "Saturate"
PPC_satuhu:     "Saturate"
PPC_abssh:      "Saturate"
PPC_absuh:      "Saturate"
PPC_satsws:     "Saturate"
PPC_satuws:     "Saturate"
PPC_satswu:     "Saturate"
PPC_satuwu:     "Saturate"
PPC_abssw:      "Saturate"
PPC_absuw:      "Saturate"

//e200 Enhanced Debug  extension
PPC_dni:        "Debugger Notify Interrupt"

// Power ISA Version 3.0
PPC_slbieg:     "SLB Invalidate Entry Global"
PPC_slbiag:     "SLB Invalidate All Global"
PPC_slbsync:    "SLB Synchronize"

PPC_addpcis:    "Add PC Immediate Shifted"
PPC_lnia:       "Add PC Immediate Shifted"
PPC_subpcis:    "Add PC Immediate Shifted"
PPC_cmpeqb:     "Compare Equal Byte"
PPC_cmprb:      "Compare Ranged Byte"
PPC_cnttzw:     "Count Trailing Zeros Word"
PPC_cnttzd:     "Count Trailing Zeros Dword"
PPC_darn:       "Deliver A Random Number"
PPC_extswsli:   "Extend-Sign Word and Shift Left"
PPC_maddhd:     "Multiply-Add High Doublewor"
PPC_maddhdu:    "Multiply-Add High Doubleword Unsigned"
PPC_maddld:     "Multiply-Add Low Doubleword"
PPC_mcrxrx:     "Move to CR from XER Extended"
PPC_setb:       "Set Boolean"
PPC_modsd:      "Modulo Signed Dword"
PPC_modud:      "Modulo Unsigned Dword"
PPC_modsw:      "Modulo Signed Word"
PPC_moduw:      "Modulo Unsigned Word"
PPC_mfvsrld:    "Move From VSR Lower Doubleword"
PPC_mtvsrdd:    "Move To VSR Double Dword"
PPC_mtvsrws:    "Move To VSR Word & Splat"
PPC_scv:        "System Call Vectored"
PPC_rfscv:      "Return From System Call Vectored"
PPC_stop:       "Stop"

PPC_copy:       "Copy"
PPC_paste:      "Paste"
PPC_ldat:       "Load Dword ATomic"
PPC_lwat:       "Load Word ATomic"
PPC_stdat:      "Store Dword ATomic"
PPC_stwat:      "Store Word ATomic"
PPC_cpabort:    "Copy-Paste Abort"
PPC_wait30:     "Wait for Interrupt"

PPC_dtstsfi:    "DFP Test Significance Immediate"
PPC_dtstsfiq:   "DFP Test Significance Immediate Quad"

PPC_bcdcfn:     "Decimal Convert From National & record"
PPC_bcdcfz:     "Decimal Convert From Zoned & record"
PPC_bcdctn:     "Decimal Convert To National & record"
PPC_bcdctz:     "Decimal Convert To Zoned & record"
PPC_bcdctsq:    "Decimal Convert To Signed Qword & record"
PPC_bcdcfsq:    "Decimal Convert From Signed Qword & record"
PPC_bcdsetsgn:  "Decimal Set Sign & record"
PPC_bcdcpsgn:   "Decimal CopySign & record"
PPC_bcds:       "Decimal Shift & record"
PPC_bcdus:      "Decimal Unsigned Shift & record"
PPC_bcdsr:      "Decimal Shift & Round & record"
PPC_bcdtrunc:   "Decimal Truncate & record"
PPC_bcdutrunc:  "Decimal Unsigned Truncate & record"

PPC_vabsdub:    "Vector Absolute Difference Unsigned Byte"
PPC_vabsduh:    "Vector Absolute Difference Unsigned Hword"
PPC_vabsduw:    "Vector Absolute Difference Unsigned Word"
PPC_vbpermd:    "Vector Bit Permute Dword"
PPC_vclzlsbb:   "Vector Count Leading Zero Least-Significant Bits Byte"
PPC_vctzlsbb:   "Vector Count Trailing Zero Least-Significant Bits Byte"
PPC_vcmpneb:    "Vector Compare Not Equal Byte"
PPC_vcmpnezb:   "Vector Compare Not Equal or Zero Byte"
PPC_vcmpneh:    "Vector Compare Not Equal Hword"
PPC_vcmpnezh:   "Vector Compare Not Equal or Zero Hword"
PPC_vcmpnew:    "Vector Compare Not Equal Word"
PPC_vcmpnezw:   "Vector Compare Not Equal or Zero Word"
PPC_vctzb:      "Vector Count Trailing Zeros Byte"
PPC_vctzh:      "Vector Count Trailing Zeros Hword"
PPC_vctzw:      "Vector Count Trailing Zeros Word"
PPC_vctzd:      "Vector Count Trailing Zeros Dword"
PPC_vextractub: "Vector Extract Unsigned Byte"
PPC_vextractuh: "Vector Extract Unsigned Hword"
PPC_vextractuw: "Vector Extract Unsigned Word"
PPC_vextractd:  "Vector Extract Dword"
PPC_vextsb2w:   "Vector Extend Sign Byte to Word"
PPC_vextsb2d:   "Vector Extend Sign Byte to Dword"
PPC_vextsh2w:   "Vector Extend Sign Hword to Word"
PPC_vextsh2d:   "Vector Extend Sign Hword to Dword"
PPC_vextsw2d:   "Vector Extend Sign Word to Dword"
PPC_vextublx:   "Vector Extract Unsigned Byte Left-Indexed"
PPC_vextubrx:   "Vector Extract Unsigned Byte Right-Indexed"
PPC_vextuhlx:   "Vector Extract Unsigned Hword Left-Indexed"
PPC_vextuhrx:   "Vector Extract Unsigned Hword Right-Indexed"
PPC_vextuwlx:   "Vector Extract Unsigned Word Left-Indexed"
PPC_vextuwrx:   "Vector Extract Unsigned Word Right-Indexed"
PPC_vinsertb:   "Vector Insert Byte"
PPC_vinserth:   "Vector Insert Hword"
PPC_vinsertw:   "Vector Insert Word"
PPC_vinsertd:   "Vector Insert Dword"
PPC_vmul10uq:   "Vector Multiply-by-10 Unsigned Qword"
PPC_vmul10euq:  "Vector Multiply-by-10 Extended Unsigned Qword"
PPC_vmul10cuq:  "Vector Multiply-by-10 & write Carry Unsigned Qword"
PPC_vmul10ecuq: "Vector Multiply-by-10 Extended & write Carry Unsigned Qword"
PPC_vnegw:      "Vector Negate Word"
PPC_vnegd:      "Vector Negate Dword"
PPC_vpermr:     "Vector Permute Right-indexed"
PPC_vprtybw:    "Vector Parity Byte Word"
PPC_vprtybd:    "Vector Parity Byte Dword"
PPC_vprtybq:    "Vector Parity Byte Qword"
PPC_vrlwnm:     "Vector Rotate Left Word then AND with Mask"
PPC_vrlwmi:     "Vector Rotate Left Word then Mask Insert"
PPC_vrldnm:     "Vector Rotate Left Dword then AND with Mask"
PPC_vrldmi:     "Vector Rotate Left Dword then Mask Insert"
PPC_vslv:       "Vector Shift Left Variable"
PPC_vsrv:       "Vector Shift Right Variable"

PPC_lxsd:       "Load VSX Scalar Dword"
PPC_lxssp:      "Load VSX Scalar Single"
PPC_lxsibzx:    "Load VSX Scalar as Integer Byte & Zero Indexed"
PPC_lxsihzx:    "Load VSX Scalar as Integer Hword & Zero Indexed"
PPC_lxv:        "Load VSX Vector"
PPC_lxvb16x:    "Load VSX Vector Byte*16 Indexed"
PPC_lxvh8x:     "Load VSX Vector Hword*8 Indexed"
PPC_lxvl:       "Load VSX Vector with Length"
PPC_lxvll:      "Load VSX Vector Left-justified with Length"
PPC_lxvwsx:     "Load VSX Vector Word & Splat Indexed"
PPC_lxvx:       "Load VSX Vector Indexed"
PPC_stxsd:      "Store VSX Scalar Dword"
PPC_stxsibx:    "Store VSX Scalar as Integer Byte Indexed"
PPC_stxsihx:    "Store VSX Scalar as Integer Hword Indexed"
PPC_stxssp:     "Store VSX Scalar SP"
PPC_stxv:       "Store VSX Vector"
PPC_stxvb16x:   "Store VSX Vector Byte*16 Indexed"
PPC_stxvh8x:    "Store VSX Vector Hword*8 Indexed"
PPC_stxvl:      "Store VSX Vector with Length"
PPC_stxvll:     "Store VSX Vector Left-justified with Length"
PPC_stxvx:      "Store VSX Vector Indexed"

PPC_xsabsqp:    "VSX Scalar Absolute QP"
PPC_xsaddqp:    "VSX Scalar Add QP"
PPC_xscmpexpqp: "VSX Scalar Compare Exponents QP"
PPC_xscmpoqp:   "VSX Scalar Compare Ordered QP"
PPC_xscmpuqp:   "VSX Scalar Compare Unordered QP"
PPC_xscpsgnqp:  "VSX Scalar Copy Sign QP"
PPC_xscvdpqp:   "VSX Scalar Convert DP to QP"
PPC_xscvqpdp:   "VSX Scalar Convert QP to DP"
PPC_xscvqpsdz:  "VSX Scalar Convert QP to Signed Dword truncate"
PPC_xscvqpswz:  "VSX Scalar Convert QP to Signed Word truncate"
PPC_xscvqpudz:  "VSX Scalar Convert QP to Unsigned Dword truncate"
PPC_xscvqpuwz:  "VSX Scalar Convert QP to Unsigned Word truncate"
PPC_xscvsdqp:   "VSX Scalar Convert Signed Dword to QP"
PPC_xscvudqp:   "VSX Scalar Convert Unsigned Dword to QP"
PPC_xsdivqp:    "VSX Scalar Divide QP"
PPC_xsiexpqp:   "VSX Scalar Insert Exponent QP"
PPC_xsmaddqp:   "VSX Scalar Multiply-Add QP"
PPC_xsmsubqp:   "VSX Scalar Multiply-Subtract QP"
PPC_xsmulqp:    "VSX Scalar Multiply QP"
PPC_xsnabsqp:   "VSX Scalar Negative Absolute QP"
PPC_xsnegqp:    "VSX Scalar Negate QP"
PPC_xsnmaddqp:  "VSX Scalar Negative Multiply-Add QP"
PPC_xsnmsubqp:  "VSX Scalar Negative Multiply-Subtract QP"
PPC_xssqrtqp:   "VSX Scalar Square Root QP"
PPC_xssubqp:    "VSX Scalar Subtract QP"
PPC_xsxexpqp:   "VSX Scalar Extract Exponent QP"
PPC_xsxsigqp:   "VSX Scalar Extract Significand QP"
PPC_xststdcqp:  "VSX Scalar Test Data Class QP"
PPC_xsrqpxp:    "VSX Scalar Round QP to XP"
PPC_xsrqpi:     "VSX Scalar Round QP to Integral [with Inexact]"
PPC_xscmpeqdp:  "VSX Scalar Compare Equal Double-Precision"
PPC_xscmpexpdp: "VSX Scalar Compare Exponents DP"
PPC_xscmpgedp:  "VSX Scalar Compare Greater Than or Equal Double-Precision"
PPC_xscmpgtdp:  "VSX Scalar Compare Greater Than Double-Precision"
PPC_xsiexpdp:   "VSX Scalar Insert Exponent DP"
PPC_xsmaxcdp:   "VSX Scalar Maximum Type-C Double-Precision"
PPC_xsmaxjdp:   "VSX Scalar Maximum Type-J Double-Precision"
PPC_xsmincdp:   "VSX Scalar Minimum Type-C Double-Precision"
PPC_xsminjdp:   "VSX Scalar Minimum Type-J Double-Precision"
PPC_xviexpdp:   "VSX Vector Insert Exponent DP"
PPC_xviexpsp:   "VSX Vector Insert Exponent SP"
PPC_xxextractuw:"VSX Vector Extract Unsigned Word"
PPC_xxinsertw:  "VSX Vector Insert Word"
PPC_xxperm:     "VSX Vector Permute"
PPC_xxpermr:    "VSX Vector Permute Right-indexed"
PPC_xxspltib:   "VSX Vector Splat Immediate Byte" 
PPC_xststdcdp:  "VSX Scalar Test Data Class DP"
PPC_xststdcsp:  "VSX Scalar Test Data Class SP"
PPC_xvtstdcdp:  "VSX Vector Test Data Class DP"
PPC_xvtstdcsp:  "VSX Vector Test Data Class SP"
PPC_xsxexpdp:   "VSX Scalar Extract Exponent DP"
PPC_xsxsigdp:   "VSX Scalar Extract Significand DP"
PPC_xscvdphp:   "VSX Scalar Convert DP to HP"
PPC_xscvhpdp:   "VSX Scalar Convert HP to DP"
PPC_xvxexpdp:   "VSX Vector Extract Exponent DP"
PPC_xvxexpsp:   "VSX Vector Extract Exponent SP"
PPC_xvxsigdp:   "VSX Vector Extract Significand DP"
PPC_xvxsigsp:   "VSX Vector Extract Significand SP"
PPC_xxbrd:      "VSX Vector Byte-Reverse Dword"
PPC_xxbrh:      "VSX Vector Byte-Reverse Hword"
PPC_xxbrq:      "VSX Vector Byte-Reverse Qword"
PPC_xxbrw:      "VSX Vector Byte-Reverse Word"
PPC_xvcvhpsp:   "VSX Vector Convert HP to SP"
PPC_xvcvsphp:   "VSX Vector Convert SP to HP"

PPC_msgsync:    "Message Synchronize"

// Power ISA Version 3.0 B
PPC_addex:      "Add Extended using alternate carry"
PPC_vmsumudm:   "Vector Multiply-Sum Unsigned Doubleword Modulo"
PPC_mffsce:     "Move From FPSCR & Clear Enables"
PPC_mffscdrn:   "Move From FPSCR Control & set DRN"
PPC_mffscdrni:  "Move From FPSCR Control & set DRN Immediate"
PPC_mffscrn:    "Move From FPSCR Control & set RN"
PPC_mffscrni:   "Move From FPSCR Control & set RN Immediate"
PPC_mffsl:      "Move From FPSCR Lightweight"

// E200Z4
PPC_lbdcbx:     "Load Byte with Decoration Indexed Cache Bypass"
PPC_lhdcbx:     "Load Halfword with Decoration Indexed Cache Bypass"
PPC_lwdcbx:     "Load Word with Decoration Indexed Cache Bypass"
PPC_stbdcbx:    "Store Byte with Decoration Indexed Cache Bypass"
PPC_sthdcbx:    "Store Halfword with Decoration Indexed Cache Bypass"
PPC_stwdcbx:    "Store Word with Decoration Indexed Cache Bypass"

//
PPC_lbcbx:      "Load Byte Indexed Cache Bypass"
PPC_lhcbx:      "Load Halfword Indexed Cache Bypass"
PPC_lwcbx:      "Load Word Indexed Cache Bypass"
PPC_stbwtx:     "Store Byte Indexed Cache Write-Through"
PPC_sthwtx:     "Store Halfword Indexed Cache Write-Through"
PPC_stwwtx:     "Store Word Indexed Cache Write-Through"
PPC_dsncb:      "Decorated Storage Notify Cache Bypass"

// AIOP (e200z490)
PPC_ldw:        "Load Doubleword"
PPC_stdw:       "Store Doubleword"
PPC_lqw:        "Load Quadword"
PPC_stqw:       "Store Quadword"
PPC_ldwcb:      "Load Doubleword Cache Bypassed"
PPC_ldbrw:      "Load Byte Reversed Doubleword"
PPC_ldwbrw:     "Load Two Byte Reversed Words"
PPC_stdwwt:     "Store Doubleword Cache Write-Through"
PPC_stdbrw:     "Store Doubleword Byte Reversed"
PPC_stdwbrw:    "Store Doubleword Byte Reversed Each Word"
PPC_lqdbrw:     "Load Quadword Byte Reversed"
PPC_stqdbrw:    "Store Quadword Byte Reversed"
PPC_lwbr:       "Load Word Byte Reversed"
PPC_lhbr:       "Load Halfword Byte Reversed"
PPC_stwbr:      "Store Word Byte Reversed"
PPC_sthbr:      "Store Halfword Byte Reversed"
PPC_ldwar:      "Load Doubleword and reserve"
PPC_stdwc:      "Store Doubleword conditional on reservation"
PPC_addb:       "Add Two Bytes"
PPC_addbu:      "Add Two Unsigned Bytes"
PPC_addh:       "Add Two Halfwords"
PPC_addhu:      "Add Two Unsigned Halfwords"
PPC_subfb:      "Signed Byte One's Complement Add"
PPC_subfbu:     "Unsigned Byte One's Complement Add"
PPC_subfh:      "Signed Halfword One's Complement Subtract"
PPC_subfhu:     "Unsigned Halfword One's Complement Subtract"
PPC_byterevw:   "Reverse bytes in a word"
PPC_byterevh:   "Reverse bytes in each halfword"
PPC_hwaccel:    "Hardware Acceleration Request"
PPC_hwacceli:   "Hardware Acceleration Request"
PPC_ordhwaccel: "Ordered Hardware Acceleration Request"
PPC_ordhwacceli:"Ordered Hardware Acceleration Request"
PPC_osmcmd:     "Ordered Scope Management Command Request"
PPC_mpure:      "MPU Read Entry Instruction"
PPC_mpuwe:      "MPU Write Entry Instruction"
PPC_mpusync:    "MPU Synchronize Instruction"
