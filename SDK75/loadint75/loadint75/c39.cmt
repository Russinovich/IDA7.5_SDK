C39_adc:        "A <- (A) + M + C"
C39_add:        "Add"
C39_anc:        "A <- A /\\ M, C <- ~A7"
C39_and:        "A <- (A) /\\ M"
C39_ane:        "M <-[(A)\\/$EE] /\\ (X)/\\(M)"
C39_arr:        "A <- [(A /\\ M) >> 1]"
C39_asl:        "C <- A7, A <- (A) << 1"
C39_asr:        "A <- [(A /\\ M) >> 1]"
C39_bar:        ""
C39_bas:        ""
C39_bbr:        "Branch if bit reset"
C39_bbs:        "Branch if bit set"
C39_bcc:        "if C=0, PC = PC + offset"
C39_bcs:        "if C=1, PC = PC + offset"
C39_beq:        "if Z=1, PC = PC + offset"
C39_bit:        "Z <- ~(A /\\ M) N<-M7 V<-M6"
C39_bmi:        "if N=1, PC = PC + offset"
C39_bne:        "if Z=0, PC = PC + offset"
C39_bpl:        "if N=0, PC = PC + offset"
C39_bra:        "Branch always"
C39_brk:        "Stack <- PC, PC <- ($fffe)"
C39_bvc:        "if V=0, PC = PC + offset"
C39_bvs:        "if V=1, PC = PC + offset"
C39_clc:        "C <- 0"
C39_cld:        "D <- 0"
C39_cli:        "I <- 0"
C39_clv:        "V <- 0"
C39_clw:        "W <- 0"
C39_cmp:        "(A - M) -> NZC"
C39_cpx:        "(X - M) -> NZC"
C39_cpy:        "(Y - M) -> NZC"
C39_dcp:        "M <- (M)-1, (A-M) -> NZC"
C39_dec:        "M <- (M) - 1"
C39_dex:        "X <- (X) - 1"
C39_dey:        "Y <- (Y) - 1"
C39_eor:        "A <- (A) \\-/ M"
C39_exc:        ""
C39_inc:        "M <- (M) + 1"
C39_ini:        ""
C39_inx:        "X <- (X) +1"
C39_iny:        "Y <- (Y) + 1"
C39_isb:        "M <- (M) - 1,A <- (A)-M-~C"
C39_jmp:        "PC <- Address"
C39_jpi:        "(PC <- Address)"
C39_jsb:        "jump to vector"
C39_jsr:        "Stack <- PC, PC <- Address"
C39_lab:        ""
C39_lae:        "X,S,A <- (S /\\ M)"
C39_lai:        ""
C39_lan:        ""
C39_lax:        "A <- M, X <- M"
C39_lda:        "A <- M"
C39_ldx:        "X <- M"
C39_ldy:        "Y <- M"
C39_lii:        ""
C39_lsr:        "C <- A0, A <- (A) >> 1"
C39_lxa:        "X04 <- (X04) /\\ M04, A04 <- (A04) /\\ M04"
C39_mpa:        ""
C39_mpy:        ""
C39_neg:        ""
C39_nop:        "[no operation]"
C39_nxt:        ""
C39_ora:        "A <- (A) V M"
C39_pha:        "Stack <- (A)"
C39_phi:        ""
C39_php:        "Stack <- (P)"
C39_phw:        ""
C39_phx:        "Push X register"
C39_phy:        "Push Y register"
C39_pia:        ""
C39_pla:        "A <- (Stack)"
C39_pli:        ""
C39_plp:        "A <- (Stack)"
C39_plw:        ""
C39_plx:        "Pull X register"
C39_ply:        "Pull Y register"
C39_psh:        ""
C39_pul:        ""
C39_rba:        ""
C39_rla:        "M <- (M << 1) /\\ (A)"
C39_rmb:        "Reset memory bit"
C39_rnd:        ""
C39_rol:        "C <- A7 & A <- A << 1 + C"
C39_ror:        "C<-A0 & A<- (A7=C + A>>1)"
C39_rra:        "M <- (M >> 1) + (A) + C"
C39_rti:        "P <- (Stack), PC <-(Stack)"
C39_rts:        "PC <- (Stack)"
C39_sax:        "M <- (A) /\\ (X)"
C39_sba:        ""
C39_sbc:        "A <- (A) - M - ~C"
C39_sbx:        "X <- (X)/\\(A) - M"
C39_sec:        "C <- 1"
C39_sed:        "D <- 1"
C39_sei:        "I <- 1"
C39_sha:        "M <- (A) /\\ (X) /\\ (PCH+1)"
C39_shs:        "X <- (A) /\\ (X), S <- (X), M <- (X) /\\ (PCH+1)"
C39_shx:        "M <- (X) /\\ (PCH+1)"
C39_shy:        "M <- (Y) /\\ (PCH+1)"
C39_slo:        "M <- (M >> 1) + A + C"
C39_smb:        "Set memory bit"
C39_sre:        "M <- (M >> 1) \\-/ A"
C39_sta:        "M <- (A)"
C39_sti:        ""
C39_stx:        "M <- (X)"
C39_sty:        "M <- (Y)"
C39_tax:        "X <- (A)"
C39_tay:        "Y <- (A)"
C39_taw:        ""
C39_tip:        ""
C39_tsx:        ""
C39_twa:        "X <- (S)"
C39_txa:        "A <- (X)"
C39_txs:        "S <- (X)"
C39_tya:        "A <- (Y)"
